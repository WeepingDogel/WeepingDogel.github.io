<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - WeepingDogel 的博客</title>
        <link>http://weepingdogel.github.io/zh-cn/posts/</link>
        <description>所有文章 | WeepingDogel 的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>weepingdogel@gmail.com (WeepingDogel)</managingEditor>
            <webMaster>weepingdogel@gmail.com (WeepingDogel)</webMaster><lastBuildDate>Mon, 25 Dec 2023 21:43:21 &#43;0800</lastBuildDate><atom:link href="http://weepingdogel.github.io/zh-cn/posts/" rel="self" type="application/rss+xml" /><item>
    <title>2023 年度总结</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/2023-annual-summary/</link>
    <pubDate>Mon, 25 Dec 2023 21:43:21 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/2023-annual-summary/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/github-worth.png" referrerpolicy="no-referrer">
            </div><p>尽管时间是人类定义的单位，但并不影响它像一条河流般从山坡像平原流逝。感觉只是喘口气，眨一下眼睛，2023年就这么过去了。</p>
<p>回想这些记忆，就像飘在半空中的樱花花瓣，我想踮起脚尖去捕捉，今年也发生了许多。</p>
<p>现在就拾起花瓣看看，也许会让我把时光捡回来呢。</p>
<h1 id="收获">收获</h1>
<p>过去的一年也学到了点东西。</p>
<h2 id="知识--技能">知识 &amp; 技能</h2>
<p>2023 年，我学会了一些技能，并开了几个能看的开源项目，拓宽了一些视野。</p>
<h3 id="flask">Flask</h3>
<p>让我们从 Flask 之旅开始。</p>
<p>很早以前，我就发现自己陷入了 Flask 这个迷人的网络中，这是一个令人愉悦的 Python 网络应用程序框架。
使用 Flask 简单而高效的 MVC 结构设置并完成 <a href="https://github.com/WeepingDogel/tinygallery" target="_blank" rel="noopener noreffer ">TinyGallery</a> 的快感在我的学习道路上留下了不可磨灭的印记。</p>
<p>深入研究 Flask 官方文档后，我发现了借助 jinja2 驱动的模板渲染页面的艺术。这种探索虽然需要耐心，但最终取得了成果，因为我逐渐在项目中加入了一些功能&ndash;除了上传文件的要求。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nd">@app.route</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">database</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">get_db</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">ImageTable</span> <span class="o">=</span> <span class="n">database</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&#34;SELECT * FROM IMAGES ORDER BY Date DESC&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="s1">&#39;username&#39;</span> <span class="ow">in</span> <span class="n">session</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">LikeTable</span> <span class="o">=</span> <span class="n">database</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&#34;SELECT LikedPostUUID FROM ImagesLikedByUser WHERE User = ? AND LikeStatus = ?&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="n">session</span><span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">],</span> <span class="mi">1</span><span class="p">,</span> <span class="p">))</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">LikedList</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">LikeTable</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">LikedList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">            <span class="n">Avatar</span> <span class="o">=</span> <span class="n">database</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s1">&#39;SELECT Avatar FROM AVATARS WHERE UserName = ?&#39;</span><span class="p">,</span> <span class="p">(</span><span class="n">session</span><span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">],))</span><span class="o">.</span><span class="n">fetchone</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">userAvaterImage</span> <span class="o">=</span> <span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;PUBLIC_USERFILES&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39;/&#39;</span> <span class="o">+</span> <span class="n">session</span><span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39;/&#39;</span> <span class="o">+</span> <span class="n">Avatar</span><span class="p">[</span><span class="s1">&#39;Avatar&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;index.html&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">PageTitle</span><span class="o">=</span><span class="s2">&#34;HomePage&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">Images</span><span class="o">=</span><span class="n">ImageTable</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">userAvaterImage</span><span class="o">=</span><span class="n">userAvaterImage</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">userName</span><span class="o">=</span><span class="n">session</span><span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="n">LikedList</span><span class="o">=</span><span class="n">LikedList</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s2">&#34;index.html&#34;</span><span class="p">,</span> <span class="n">PageTitle</span><span class="o">=</span><span class="s2">&#34;HomePage&#34;</span><span class="p">,</span> <span class="n">Images</span><span class="o">=</span><span class="n">ImageTable</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">{% extends &#34;base.html&#34; %}
</span></span><span class="line"><span class="cl">{% block Title %} {{PageTitle}} | TinyGallery {% endblock %}
</span></span><span class="line"><span class="cl">{% block body %}
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;Content&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    {% for x in Images %}
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;work&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">img</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;displayedImages&#34;</span> <span class="na">onclick</span><span class="o">=</span><span class="s">&#34;OpenFullImage({{ loop[&#34;</span> <span class="na">index</span><span class="err">&#34;]</span> <span class="err">}})&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">src</span><span class="o">=</span><span class="s">&#34;/static/img/users/{{ x[&#39;User&#39;] }}/Images/{{ x[&#39;UUID&#39;] }}.jpg&#34;</span> <span class="na">alt</span><span class="o">=</span><span class="s">&#34;{{ x[&#39;UUID&#39;] }}&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;userName&#34;</span><span class="p">&gt;</span>{{ x[&#39;ImageTitle&#39;] }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">p</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;textFont&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">span</span><span class="p">&gt;</span>By {{ x[&#39;User&#39;] }}<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">br</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">span</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;LikesNum&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">                Likes: {{ x[&#39;Dots&#39;] }}
</span></span><span class="line"><span class="cl">            <span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">br</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">span</span><span class="p">&gt;</span>Description: {{ x[&#39;Description&#39;] }}<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">br</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">span</span><span class="p">&gt;</span>Date: {{x[&#39;Date&#39;]}}<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">br</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            {% if g.user %}
</span></span><span class="line"><span class="cl">            {% if x[&#39;UUID&#39;] in LikedList %}
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">svg</span> <span class="na">onclick</span><span class="o">=</span><span class="s">&#34;SendLikedData({{ loop[&#34;</span> <span class="na">index</span><span class="err">&#34;]</span> <span class="err">}},</span> <span class="err">&#39;</span><span class="na">Like</span><span class="err">&#39;</span> <span class="err">)&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;likeStatus0&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;display: none;&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/2000/svg&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;currentColor&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;bi bi-star&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">viewBox</span><span class="o">=</span><span class="s">&#34;0 0 16 16&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="p">&lt;</span><span class="nt">path</span>
</span></span><span class="line"><span class="cl">                    <span class="na">d</span><span class="o">=</span><span class="s">&#34;M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;/</span><span class="nt">svg</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">svg</span> <span class="na">onclick</span><span class="o">=</span><span class="s">&#34;SendLikedData({{ loop[&#34;</span> <span class="na">index</span><span class="err">&#34;]</span> <span class="err">}},</span> <span class="err">&#39;</span><span class="na">Unlike</span><span class="err">&#39;</span> <span class="err">)&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;likeStatus1&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/2000/svg&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;currentColor&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;bi bi-star-fill&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">viewBox</span><span class="o">=</span><span class="s">&#34;0 0 16 16&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="p">&lt;</span><span class="nt">path</span>
</span></span><span class="line"><span class="cl">                    <span class="na">d</span><span class="o">=</span><span class="s">&#34;M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;/</span><span class="nt">svg</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            {% else %}
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">svg</span> <span class="na">onclick</span><span class="o">=</span><span class="s">&#34;SendLikedData({{ loop[&#34;</span> <span class="na">index</span><span class="err">&#34;]</span> <span class="err">}},</span> <span class="err">&#39;</span><span class="na">Like</span><span class="err">&#39;</span> <span class="err">)&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;likeStatus0&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/2000/svg&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;currentColor&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;bi bi-star&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">viewBox</span><span class="o">=</span><span class="s">&#34;0 0 16 16&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="p">&lt;</span><span class="nt">path</span>
</span></span><span class="line"><span class="cl">                    <span class="na">d</span><span class="o">=</span><span class="s">&#34;M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;/</span><span class="nt">svg</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">svg</span> <span class="na">onclick</span><span class="o">=</span><span class="s">&#34;SendLikedData({{ loop[&#34;</span> <span class="na">index</span><span class="err">&#34;]</span> <span class="err">}},</span> <span class="err">&#39;</span><span class="na">Unlike</span><span class="err">&#39;</span> <span class="err">)&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;likeStatus1&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;display: none;&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/2000/svg&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;16&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;currentColor&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;bi bi-star-fill&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="na">viewBox</span><span class="o">=</span><span class="s">&#34;0 0 16 16&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="p">&lt;</span><span class="nt">path</span>
</span></span><span class="line"><span class="cl">                    <span class="na">d</span><span class="o">=</span><span class="s">&#34;M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;/</span><span class="nt">svg</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            {% endif %}
</span></span><span class="line"><span class="cl">            {% endif %}
</span></span><span class="line"><span class="cl">        <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    {% endfor %}
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">{% endblock %}
</span></span></code></pre></td></tr></table>
</div>
</div><p>尽管 Flask 简单易用，但在 TinyGallery 的早期版本中，Flask 确实表现出了一些缺陷，并产生了一些具有挑战性的错误，这促使我决定过渡到一个新的技术栈。</p>
<h3 id="fastapivuejs">FastAPI、VueJS</h3>
<p>进入<strong>FastAPI</strong>和<strong>VueJS</strong>。为了提升 TinyGallery 的体验，我们决定将后端和前端分开，重点利用 Ajax-all-in 和 Restful API 功能。这种强烈的追求让我沉浸在 VueJS 的世界中，并最终创建了 <a href="https://github.com/WeepingDogel/tinygallery-vue" target="_blank" rel="noopener noreffer ">tinygallery-vue</a> 和 <a href="https://github.com/WeepingDogel/tinygallery-backend" target="_blank" rel="noopener noreffer ">tinygallery-backend</a> 。经过几个月的潜心学习，最终成功完成了这项工作。</p>
<p>在此期间，我学习的深度和广度都很可观，包括使用 FastAPI 创建一个 Restful API 提供程序，使用 axios 制作一个能够与服务器进行无缝数据通信的网页，以及使用 VueJS 精心设计简单而优雅的组件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-typescript" data-lang="typescript"><span class="line"><span class="cl"><span class="kr">async</span> <span class="nx">fetchData() {</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// Fetch more image data from the server
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">this</span><span class="p">.</span><span class="nx">pages</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">pages</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// Increment the current page number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kr">const</span> <span class="nx">response</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span><span class="p">.</span><span class="kr">get</span><span class="p">(</span><span class="s2">&#34;/resources/posts/&#34;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">pages</span><span class="p">);</span> <span class="c1">// Make a GET request to the server API
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kr">const</span> <span class="nx">newData</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">response</span><span class="p">);</span> <span class="c1">// Parse the response text to JSON format
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span> <span class="p">(</span><span class="nx">newData</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// If there is no new data
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">this</span><span class="p">.</span><span class="nx">pages</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">pages</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// Decrement the current page number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Otherwise
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">newData</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="c1">// Loop over the new data and add it to the display data array
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>          <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">displayData</span> <span class="kr">as</span> <span class="kt">any</span><span class="p">).</span><span class="nx">push</span><span class="p">(</span><span class="nx">newData</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;Card&#34;</span> <span class="na">v-for</span><span class="o">=</span><span class="s">&#34;items of displayData&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">img</span>
</span></span><span class="line"><span class="cl">      <span class="err">@</span><span class="na">click</span><span class="o">=</span><span class="s">&#34;OpenRemarkBySingleUUID((items as any).post_uuid)&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">class</span><span class="o">=</span><span class="s">&#34;displayImage_NSFW&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">:src</span><span class="o">=</span><span class="s">&#34;(items as any).cover_url&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">:alt</span><span class="o">=</span><span class="s">&#34;(items as any).post_uuid&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">v-if</span><span class="o">=</span><span class="s">&#34;(items as any).nsfw&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">img</span>
</span></span><span class="line"><span class="cl">      <span class="err">@</span><span class="na">click</span><span class="o">=</span><span class="s">&#34;OpenRemarkBySingleUUID((items as any).post_uuid)&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">class</span><span class="o">=</span><span class="s">&#34;displayImage&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">:src</span><span class="o">=</span><span class="s">&#34;(items as any).cover_url&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">:alt</span><span class="o">=</span><span class="s">&#34;(items as any).post_uuid&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">v-else</span>
</span></span><span class="line"><span class="cl">    <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">h2</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;ImageTitle&#34;</span><span class="p">&gt;</span>{{ (items as any).post_title }}<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">p</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;ImageDescription&#34;</span><span class="p">&gt;</span>{{ (items as any).description }}<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;UserInfoBar&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">img</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;UserAvatar&#34;</span> <span class="na">:src</span><span class="o">=</span><span class="s">&#34;(items as any).avatar&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">p</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;ImageUserName&#34;</span><span class="p">&gt;</span>{{ (items as any).user_name }}<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">p</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;LikesDisplay&#34;</span><span class="p">&gt;</span>{{ (items as any).dots }} likes<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">p</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;ImageDate&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        {{ TimeZoneCaculator.CaculateTheCorrectDate((items as any).date) }}
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nd">@image_resources_api.get</span><span class="p">(</span><span class="s2">&#34;/posts/</span><span class="si">{page}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">async</span> <span class="k">def</span> <span class="nf">get_posts_as_json</span><span class="p">(</span><span class="n">page</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">db</span><span class="p">:</span> <span class="n">Session</span> <span class="o">=</span> <span class="n">Depends</span><span class="p">(</span><span class="n">get_db</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">page</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;You must append a page number to the end of the url.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">posts_from_db</span> <span class="o">=</span> <span class="n">crud</span><span class="o">.</span><span class="n">get_posts_by_page</span><span class="p">(</span><span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">,</span> <span class="n">page</span><span class="o">=</span><span class="n">page</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">list_for_return</span><span class="p">:</span> <span class="nb">list</span><span class="p">[</span><span class="nb">dict</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">posts_from_db</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">user_uuid</span> <span class="o">=</span> <span class="n">get_user_uuid_by_name</span><span class="p">(</span><span class="n">user_name</span><span class="o">=</span><span class="n">x</span><span class="o">.</span><span class="n">user_name</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">admin_uuid</span> <span class="o">=</span> <span class="n">get_admin_uuid_by_name</span><span class="p">(</span><span class="n">user_name</span><span class="o">=</span><span class="n">x</span><span class="o">.</span><span class="n">user_name</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">temp_dict</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">description</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;share_num&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">share_num</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;post_uuid&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">post_uuid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;nsfw&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">nsfw</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;user_name&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">user_name</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;post_title&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">post_title</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;dots&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">dots</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;date&#34;</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">date</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">16</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;cover_url&#34;</span><span class="p">:</span> <span class="n">dir_tool</span><span class="o">.</span><span class="n">get_cover_file_url</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">post_uuid</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;avatar&#34;</span><span class="p">:</span> <span class="n">dir_tool</span><span class="o">.</span><span class="n">get_avatar_file_url</span><span class="p">(</span><span class="n">dir_user_uuid</span><span class="o">=</span><span class="n">admin_uuid</span> <span class="k">if</span> <span class="n">admin_uuid</span> <span class="k">else</span> <span class="n">user_uuid</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">list_for_return</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">temp_dict</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">list_for_return</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>我沉浸在新技能带来的满足感中，得意洋洋地浏览了 VueJS 的选项 API，熟悉了生命周期管理、组件和道具的复杂性。在后端方面，我掌握了用于身份验证、文件处理和数据操作的 JWT 令牌创建技术，进一步增强了我的能力。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-typescript" data-lang="typescript"><span class="line"><span class="cl"><span class="nx">LoginAccount() {</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">logUserName</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">logPassWord</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Check if username and password are empty
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">this</span><span class="p">.</span><span class="nx">Result</span> <span class="o">=</span> <span class="s2">&#34;Username or password can&#39;t be empty!&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Username or password can&#39;t be empty!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nx">bodyFormData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;username&#34;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">logUserName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;password&#34;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">logPassWord</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">axios</span><span class="p">({</span><span class="nx">method</span><span class="o">:</span> <span class="s2">&#34;post&#34;</span><span class="p">,</span> <span class="nx">url</span><span class="o">:</span> <span class="s2">&#34;/user/token&#34;</span><span class="p">,</span> <span class="nx">data</span>: <span class="kt">bodyFormData</span><span class="p">,</span> <span class="nx">headers</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&#34;Content-Type&#34;</span><span class="o">:</span> <span class="s2">&#34;application/x-www-form-urlencoded&#34;</span> <span class="p">},})</span>
</span></span><span class="line"><span class="cl">          <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">response</span>: <span class="kt">any</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">access_token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Create an object to store the username and token.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="kr">const</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">access_token</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s2">&#34;Token&#34;</span><span class="p">,</span> <span class="nx">token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Set logging status.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">Authentication</span><span class="p">().</span><span class="nx">setLogStatus</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">          <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">error</span>: <span class="kt">any</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Return the errors.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="nx">Result</span> <span class="o">=</span> <span class="nx">error</span><span class="p">.</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">detail</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">detail</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nd">@userAuthRouter.post</span><span class="p">(</span><span class="s2">&#34;/token&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">async</span> <span class="k">def</span> <span class="nf">user_login</span><span class="p">(</span><span class="n">db</span><span class="p">:</span> <span class="n">Session</span> <span class="o">=</span> <span class="n">Depends</span><span class="p">(</span><span class="n">get_db</span><span class="p">),</span> <span class="n">form_data</span><span class="p">:</span> <span class="n">OAuth2PasswordRequestForm</span> <span class="o">=</span> <span class="n">Depends</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">    <span class="n">user_authentication</span> <span class="o">=</span> <span class="n">authenticate_user</span><span class="p">(</span><span class="n">db</span><span class="p">,</span> <span class="n">form_data</span><span class="o">.</span><span class="n">username</span><span class="p">,</span> <span class="n">form_data</span><span class="o">.</span><span class="n">password</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">admin_authentication</span> <span class="o">=</span> <span class="n">authenticate_admin</span><span class="p">(</span><span class="n">db</span><span class="p">,</span> <span class="n">form_data</span><span class="o">.</span><span class="n">username</span><span class="p">,</span> <span class="n">form_data</span><span class="o">.</span><span class="n">password</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Raise error if authentication fails</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">user_authentication</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">admin_authentication</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="n">status</span><span class="o">.</span><span class="n">HTTP_401_UNAUTHORIZED</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Incorrect username or password.&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;WWW-Authenticate&#34;</span><span class="p">:</span> <span class="s2">&#34;Bearer&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># Create access token</span>
</span></span><span class="line"><span class="cl">        <span class="n">access_token_expires</span> <span class="o">=</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">minutes</span><span class="o">=</span><span class="n">config</span><span class="o">.</span><span class="n">ACCESS_TOKEN_EXPIRE_MINUTES</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">access_token</span> <span class="o">=</span> <span class="n">create_access_token</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;sub&#34;</span><span class="p">:</span> <span class="n">form_data</span><span class="o">.</span><span class="n">username</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="n">expires_delta</span><span class="o">=</span><span class="n">access_token_expires</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">except</span> <span class="n">JWTError</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="n">status</span><span class="o">.</span><span class="n">HTTP_401_UNAUTHORIZED</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Cannot create token.&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;WWW-Authenticate&#34;</span><span class="p">:</span> <span class="s2">&#34;Bearer&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Return access token</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;access_token&#34;</span><span class="p">:</span> <span class="n">access_token</span><span class="p">,</span> <span class="s2">&#34;token_type&#34;</span><span class="p">:</span> <span class="s2">&#34;bearer&#34;</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-typescript" data-lang="typescript"><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">data() {</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">pages</span>: <span class="kt">1</span><span class="p">,</span> <span class="c1">// The current page number
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">displayData</span><span class="o">:</span> <span class="p">[],</span> <span class="c1">// An array to store the displayed images.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">};</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">...</span>
</span></span><span class="line"><span class="cl">    <span class="nx">mounted() {</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Called after the component is mounted and ready to use
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">this</span><span class="p">.</span><span class="nx">displayIamges</span><span class="p">();</span> <span class="c1">// Display the initial set of images
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>此外，我还可以处理上传文件、更新和删除数据的任务。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-typescript" data-lang="typescript"><span class="line"><span class="cl"><span class="nx">uploadPost() {</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// Define a method called &#39;uploadPost&#39; that sends a POST request to the server with the form data entered by the user.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">post_title</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">description</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// If the &#39;post_title&#39; or &#39;description&#39; data properties are empty, log an error message to the console.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Title and Dercription can&#39;t be empty!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s2">&#34;Token&#34;</span><span class="p">);</span> <span class="c1">// Get the JWT token from local storage and store it in a variable called &#39;token&#39;.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kr">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="c1">// Define an object called &#39;config&#39; with headers that include the JWT token and set the content type to &#39;multipart/form-data&#39;.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>          <span class="nx">headers</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">Authorization</span><span class="o">:</span> <span class="s2">&#34;Bearer &#34;</span> <span class="o">+</span> <span class="nx">token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Content-type&#34;</span><span class="o">:</span> <span class="s2">&#34;multipart/form-data&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">};</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nx">is_nsfw</span><span class="p">;</span> <span class="c1">// Declare a variable called &#39;is_nsfw&#39;.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">let</span> <span class="nx">bodyFormData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">();</span> <span class="c1">// Create a new instance of the FormData class and store it in a variable called &#39;bodyFormData&#39;.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">is_nsfw</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="c1">// Check whether the &#39;is_nsfw&#39; data property is true. If so, set &#39;is_nsfw&#39; to &#34;true&#34;; otherwise, set it to &#34;false&#34;.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>          <span class="nx">is_nsfw</span> <span class="o">=</span> <span class="s2">&#34;true&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nx">is_nsfw</span> <span class="o">=</span> <span class="s2">&#34;false&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;is_nsfw&#34;</span><span class="p">,</span> <span class="nx">is_nsfw</span><span class="p">);</span> <span class="c1">// Append the &#39;is_nsfw&#39; value to the form data object.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;post_title&#34;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">post_title</span><span class="p">);</span> <span class="c1">// Append the &#39;post_title&#39; value to the form data object.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;description&#34;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">description</span><span class="p">);</span> <span class="c1">// Append the &#39;description&#39; value to the form data object.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">CustomCover</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="c1">// If the &#39;CustomCover&#39; data property is true, append the cover file selected by the user to the form data object; otherwise, append an empty string.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>          <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;cover&#34;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">coverFile</span> <span class="kr">as</span> <span class="kt">any</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;cover&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">uploadImagesFile</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="c1">// Loop through the array of uploaded images and append each one to the form data object.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">uploadImagesFile</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">          <span class="nx">bodyFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&#34;uploaded_file&#34;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">uploadImagesFile</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">bodyFormData</span><span class="p">);</span> <span class="c1">// Log the final form data object to the console.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">axios</span>
</span></span><span class="line"><span class="cl">          <span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s2">&#34;/posts/create&#34;</span><span class="p">,</span> <span class="nx">bodyFormData</span><span class="p">,</span> <span class="nx">config</span><span class="p">)</span> <span class="c1">// Send a POST request to the &#39;/posts/create&#39; endpoint with the form data as the payload.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>          <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">response</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// If the request is successful...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span> <span class="c1">// Log the response to the console for debugging purposes.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="k">if</span> <span class="p">((</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">status</span> <span class="o">=</span> <span class="s2">&#34;success&#34;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">              <span class="c1">// Check if the server responded with a success status.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>              <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&#34;update:modelValue&#34;</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span> <span class="c1">// Emit the &#39;update:modelValue&#39; event with a value of false to close the uploader panel.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>              <span class="nx">UpdateImages</span><span class="p">().</span><span class="nx">Update</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// Call the &#39;UpdateImages&#39; function to update the images displayed on the website.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>              <span class="k">this</span><span class="p">.</span><span class="nx">$router</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">);</span> <span class="c1">// Redirect the user to the homepage.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">          <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">error</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// If there was an error...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span> <span class="c1">// Log the error to the console for debugging purposes.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">alert</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">detail</span><span class="p">);</span> <span class="c1">// Display an alert with details about the error.  
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">});</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="k">this</span><span class="p">.</span><span class="nx">post_title</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span> <span class="c1">// Reset the &#39;post_title&#39; data property to an empty string.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">this</span><span class="p">.</span><span class="nx">description</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span> <span class="c1">// Reset the &#39;description&#39; data property to an empty string.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">this</span><span class="p">.</span><span class="nx">is_nsfw</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span> <span class="c1">// Reset the &#39;is_nsfw&#39; data property to an empty string.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">this</span><span class="p">.</span><span class="nx">CustomCover</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span> <span class="c1">// Reset the &#39;CustomCover&#39; data property to false.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nd">@Post_router.post</span><span class="p">(</span><span class="s2">&#34;/create&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">upload_image</span><span class="p">(</span><span class="n">is_nsfw</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="n">Form</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                 <span class="n">db</span><span class="p">:</span> <span class="n">Session</span> <span class="o">=</span> <span class="n">Depends</span><span class="p">(</span><span class="n">get_db</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                 <span class="n">uploaded_file</span><span class="p">:</span> <span class="nb">list</span><span class="p">[</span><span class="n">UploadFile</span><span class="p">]</span> <span class="o">=</span> <span class="n">File</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                 <span class="n">cover</span><span class="p">:</span> <span class="n">UploadFile</span> <span class="o">|</span> <span class="kc">None</span> <span class="o">=</span> <span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                 <span class="n">post_title</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="n">Form</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                 <span class="n">description</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="n">Form</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                 <span class="n">token</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="n">Depends</span><span class="p">(</span><span class="n">oauth2Scheme</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># This block for declare variables.</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># --- declare block</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Get the name of user from token</span>
</span></span><span class="line"><span class="cl">    <span class="n">user_name</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="n">token_tool</span><span class="o">.</span><span class="n">get_user_name_by_token</span><span class="p">(</span><span class="n">token</span><span class="o">=</span><span class="n">token</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">post_uuid</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">uuid</span><span class="o">.</span><span class="n">uuid4</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># If User uploaded a cover then this variable will be True.</span>
</span></span><span class="line"><span class="cl">    <span class="n">cover_exist</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># -- end declare block</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># This block for verification</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># ---verification block</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">crud</span><span class="o">.</span><span class="n">get_user_by_name</span><span class="p">(</span><span class="n">db</span><span class="p">,</span> <span class="n">user_name</span><span class="o">=</span><span class="n">user_name</span><span class="p">)</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">crud</span><span class="o">.</span><span class="n">get_admin_by_name</span><span class="p">(</span><span class="n">db</span><span class="p">,</span> <span class="n">user_name</span><span class="o">=</span><span class="n">user_name</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;The user does not exist!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">cover</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">cover_exist</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Return Error, if list have same file name.</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">uploaded_file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">filename</span> <span class="ow">in</span> <span class="n">uploaded_file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="n">status_code</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;File name not be same!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># Create the post direction witch named its uuid in IMAGE_DIR from config.py.</span>
</span></span><span class="line"><span class="cl">    <span class="n">current_post_path_obj</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">POST_DIR</span><span class="p">)</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="n">post_uuid</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># If the direction already existed then return error.</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">current_post_path_obj</span><span class="o">.</span><span class="n">is_dir</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Cannot to create post.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">current_post_path_obj</span><span class="o">.</span><span class="n">mkdir</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">current_post_path_obj</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s2">&#34;cover&#34;</span><span class="p">)</span><span class="o">.</span><span class="n">mkdir</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># Check image files suffix.</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">uploaded_file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">filename</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;.&#34;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">config</span><span class="o">.</span><span class="n">ALLOW_SUFFIX</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="n">status_code</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Not allowed file type.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">cover</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">cover</span><span class="o">.</span><span class="n">filename</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;.&#34;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">config</span><span class="o">.</span><span class="n">ALLOW_SUFFIX</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="n">status_code</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Not allowed file type.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">save_post_status</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="n">dir_tool</span><span class="o">.</span><span class="n">save_post_images</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">post_uuid</span><span class="o">=</span><span class="n">post_uuid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">uploaded_file</span><span class="o">=</span><span class="n">uploaded_file</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">supplementary_mode</span><span class="o">=</span><span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">save_post_status</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Cannot save the post on server!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">save_cover_status</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="n">dir_tool</span><span class="o">.</span><span class="n">save_post_cover</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">cover_name</span><span class="o">=</span><span class="n">uploaded_file</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">filename</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">post_uuid</span><span class="o">=</span><span class="n">post_uuid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">cover</span><span class="o">=</span><span class="n">cover</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">cover_exist</span><span class="o">=</span><span class="n">cover_exist</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">update_mode</span><span class="o">=</span><span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">save_cover_status</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Cannot save the cover of post on server!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">compress_cover_status</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="n">dir_tool</span><span class="o">.</span><span class="n">compress_cover</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">post_uuid</span><span class="o">=</span><span class="n">post_uuid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">update_mode</span><span class="o">=</span><span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">compress_cover_status</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span> <span class="n">HTTPException</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">status_code</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="s2">&#34;Cannot compress the cover of post on server!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">is_nsfw</span> <span class="o">==</span> <span class="s2">&#34;true&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">nsfw_db</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">nsfw_db</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">crud</span><span class="o">.</span><span class="n">db_create_post</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">user_name</span><span class="o">=</span><span class="n">user_name</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">post_title</span><span class="o">=</span><span class="n">post_title</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">description</span><span class="o">=</span><span class="n">description</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">post_uuid</span><span class="o">=</span><span class="n">post_uuid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">is_nsfw</span><span class="o">=</span><span class="n">nsfw_db</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;success&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这些框架不仅加快了我开发简单网络应用程序的速度，还拓宽了我的编程经验，让我重新找回了自信。</p>
<h3 id="pandas">pandas</h3>
<p>学习 <a href="https://pandas.pydata.org/" target="_blank" rel="noopener noreffer "><strong>pandas</strong></a> 改变了我的生活。这个建立在 Python 基础上的开源数据分析和处理工具用途广泛，速度快如闪电，已被证明是我执行数据相关任务时不可或缺的资产。</p>
<p>无论是清理数据集，还是深入研究综合数据分析，pandas 始终是我的得力助手。
一个有趣的方面是，它能够毫不费力地处理通过蜘蛛脚本获取的数据，使数据易于访问和读取，以便进一步处理。</p>
<p>此外，在清理操作之后，我还能迅速将新数据生成 Excel 或 CSV 文件，这一点简直太神奇了。</p>
<p>不过，我必须承认，要掌握这个强大的工具，需要学习和实践的地方还很多。经验才是真正的老师，不是吗？</p>
<h3 id="pyecharts">pyecharts</h3>
<p>现在，让我们来谈谈 <a href="https://pyecharts.org/#/" target="_blank" rel="noopener noreffer "><strong>pyecharts</strong></a>。当我需要从我的数据中绘制出令人惊叹的图片或图表并将其显示在网页上时，pyecharts 就成了我的首选解决方案。</p>
<p>当然，我也知道 Apache ECharts 是一个开源的 JavaScript 可视化库，但设置其属性和渲染复杂的图表可能是一项相当繁重的工作。这时，pyecharts 的出现拯救了我，帮我避开了复杂的问题，简化了流程。</p>
<p>官方文档提供了大量创建简单数据图表和图形的示例，绝对是我的救星。当我只需要一个快速、简单的图表时，依靠 pyecharts 绝对是轻而易举的事。</p>
<h3 id="数据库">数据库</h3>
<p>在掌握了 SQL 并熟悉了 MySQL、MariaDB 和 SQLite 之后，我发现它们在满足各种开发需求方面各有千秋。</p>
<h4 id="sqlitehttpswwwsqliteorg"><a href="https://www.sqlite.org" target="_blank" rel="noopener noreffer ">SQLite</a></h4>
<p>说到轻量级、基于文件的管理和丰富内容的轻松传输，SQLite 一直是我在简单应用中的首选。SQLite 数据库文件通常用于内容传输和长期数据存档，这表明它具有多功能性，可广泛应用于各种场景。事实上，你知道目前有超过 1 万亿（1e12）个活跃的 SQLite 数据库在使用吗？这真是令人难以置信！SQLite 的灵活性和易用性使其成为 <a href="https://github.com/WeepingDogel/tinygallery-backend" target="_blank" rel="noopener noreffer ">TinyGallery</a> 等项目的理想解决方案，在这些项目中，它是可靠的数据库引擎。</p>
<h4 id="mysqlhttpswwwmysqlcom--mariadbhttpsmariadborg"><a href="https://www.mysql.com" target="_blank" rel="noopener noreffer ">MySQL</a> &amp; <a href="https://mariadb.org" target="_blank" rel="noopener noreffer ">MariaDB</a></h4>
<p>当然，在性能是重中之重的情况下，尤其是在大型应用中，MySQL 或其分叉产品 MariaDB 的稳健性往往变得至关重要。它们在业界的良好声誉以及处理更大数据集和更高负载的能力使它们成为开发社区的热门选择。</p>
<h3 id="虚拟化">虚拟化</h3>
<p>进入云计算这个令人着迷的领域，不仅拓宽了我对现代技术的理解，还激发了我对虚拟化&ndash;云基础设施的基石&ndash;的浓厚兴趣。</p>
<p>在这一领域，我有幸熟悉了各种虚拟化软件，提高了我对资源管理和系统协调的理解。让我们深入了解每种著名工具的具体内容：</p>
<h4 id="vmware-workstation">VMware Workstation</h4>
<p>在我的虚拟化探索中，<a href="https://www.vmware.com/products/workstation-pro.html" target="_blank" rel="noopener noreffer "><strong>VMware Workstation</strong></a>处于最前沿。它在单个物理设备上运行多个虚拟机的强大环境，对完善我的系统管理和资源分配方法起到了重要作用。</p>
<p>VMware Workstation 丰富的功能集和友好的用户界面使我能够以无与伦比的轻松和高效创建和管理虚拟环境，在我的数字基础架构管理之旅中留下了不可磨灭的印记。</p>
<h4 id="virtualbox">VirtualBox</h4>
<p>随着我的深入研究，<a href="https://www.virtualbox.org" target="_blank" rel="noopener noreffer "><strong>VirtualBox</strong></a>凭借其开源精神，成为一个引人注目的替代方案，重塑了我对虚拟化的可访问性和简易性的看法。它无缝创建和管理虚拟机的能力不仅拓宽了我的技术能力，还使虚拟化体验民主化，让不同的爱好者和专业人士都能使用虚拟化。</p>
<p>VirtualBox 的包容性和用户友好性凸显了提供易于使用的虚拟化工具对于帮助更多有抱负的开发人员和云计算爱好者的重要意义。</p>
<h4 id="qemukvm">Qemu/KVM</h4>
<p>在我的虚拟化之旅中，<a href="https://wiki.qemu.org/Features/KVM" target="_blank" rel="noopener noreffer "><strong>QEMU/KVM</strong></a> 的强强联手一直是一股强大的力量，它囊括了管理程序功能和 Linux 系统硬件辅助虚拟化的原始力量。</p>
<p>这对充满活力的组合所提供的无缝兼容性和强大性能，为管理虚拟化环境的敏捷性和效率开辟了新的空间，并激发了我对底层虚拟化技术复杂性的新认识。</p>
<p>使用 QEMU/KVM 不仅增强了我的技术实力，还丰富了我对系统级虚拟化的理解，改变了我管理数字基础设施的方法。</p>
<h4 id="libvirt">Libvirt</h4>
<p>最后但并非最不重要的是，<a href="https://libvirt.org/manpages/libvirtd.html" target="_blank" rel="noopener noreffer "><strong>libvirt</strong></a>是一个通用的开源工具包，在我探索虚拟化技术的过程中成为我的忠实伙伴。</p>
<p>它对 QEMU/KVM、Xen 和 LXC 等一系列管理程序的广泛支持简化了虚拟化平台的协调和管理，为虚拟化功能和基础设施管理提供了一个整体视角。</p>
<p>我与 libvirt 的合作历程凸显了适应性强、功能多样的虚拟化工具在现代社会的重要作用，重新定义了基础架构管理和资源优化的范式。</p>
<hr>
<p>这些虚拟化技术具有多种功能和应用，不仅加深了我在云计算方面的专业知识，还拓宽了我的视野，让我对高效资源利用和基础设施协调有了细致入微的了解。</p>
<p>虚拟化之旅是一次不折不扣的变革，为驾驭云基础设施和数字环境的动态景观奠定了坚实的基础。</p>
<h3 id="docker">Docker</h3>
<p>拥抱<a href="https://www.docker.com" target="_blank" rel="noopener noreffer "><strong>Docker</strong></a>的世界是一次变革之旅，它重新定义了我对待软件开发和部署的方式。从潜心研究Docker的创新容器化方法，到挖掘其创建轻量级、可移植和自给自足环境的潜力，我的探索过程令人振奋。</p>
<p>去年，我撰写了一篇[<em><strong>文章</strong></em>]（/zh-cn/posts/浅尝docker/），揭示了使用Docker的这一历程。</p>
<h3 id="openstack">OpenStack</h3>
<p>最近，我开始涉足<a href="https://www.openstack.org" target="_blank" rel="noopener noreffer "><strong>OpenStack</strong></a>领域，为云计算基础设施管理打开了一扇潜力巨大的大门。</p>
<p>虽然我目前只是在一台 Linux 服务器上进行了安装，但我已经准备好开始一段丰富的学习之旅，揭开 OpenStack 功能的神秘面纱。</p>
<p>这次旅程已经彰显了 OpenStack 在重塑可扩展和可定制云环境动态方面的威力，我期待着在进一步深入研究其功能和应用时记录下我的发现。</p>
<h2 id="新设备">新设备</h2>
<h3 id="108-客制化键盘">108 客制化键盘</h3>
<ul>
<li>极地狐狸轴用于字母区，午夜翡翠轴用于大按键，BOX白色轴用于其他按键。</li>
<li>支持三模式和 RGB</li>
</ul>
<p>我购买这款键盘是为了获得更好的打字体验、更好的外观和游戏体验。</p>
<h3 id="87-客制化键盘">87 客制化键盘</h3>
<ul>
<li>空格键采用蓝莓冰淇淋轴，其他按键采用灰木 V4 轴</li>
<li>仅限单模式，白色背光</li>
</ul>
<p>我购买这款键盘是为了编程和尝试不同的键入体验。</p>
<p>另外，它的轻巧总是能帮我取代学校计算机教室里的薄膜键盘。
没有状态良好的键盘&hellip; 大多数键盘都因为学生上课无聊而出现不同程度的损坏
甚至还有键帽被抠掉的&hellip; 那我得自己带键盘去上实验课了。</p>
<h3 id="viewsonic-显示器">ViewSonic 显示器</h3>
<ul>
<li>23.8 英寸，1080P，165Hz，Fast-IPS 面板，支持 HDR10</li>
</ul>
<p>我在开学时买了它，起初以为在大屏幕上可以阅读更多行代码&hellip;</p>
<h3 id="华硕路由器ax-56u">华硕路由器AX-56U</h3>
<p>不知道什么疯买的华硕路由器，支持双频WiFi6，千兆有线，没刷系统，还在用官方固件，目前在家里当AP用。</p>
<h3 id="从-mukihttpstmemukixi-那里收的小主机">从 <a href="https://t.me/Mukixi" target="_blank" rel="noopener noreffer ">muki</a> 那里收的小主机</h3>
<p>其实它的来历有故事，但我说过不好的回忆没有任何意义。R5-1400+RX580，8GB RAM，目前放在家作为 Me0w00f Technology 团队的内部服务器使用。</p>
<h3 id="pixel-3xl">Pixel 3XL</h3>
<p><a href="https://t.me/kawaii_fox" target="_blank" rel="noopener noreffer ">某只狐狸</a>捐赠的墙外机，用于墙外社交、有时候看 YouTube 、安装了 <a href="https://www.vrelnir.com/" target="_blank" rel="noopener noreffer ">DOL</a>。
也没有进行刷机，仍然是 Pixel 官方原生系统摆烂。</p>
<h1 id="遗憾">遗憾</h1>
<p>然而，不可能总是一帆风顺。</p>
<p>无法实现和完成的事情是一种遗憾。</p>
<h2 id="比赛">比赛</h2>
<p>首先，也是最大的遗憾是，今年我没能有机会参加大型比赛。</p>
<p>虽然我进行了训练和准备，学习了很多&hellip;</p>
<h2 id="技能作品和游戏">技能、作品和游戏。</h2>
<p>此外&hellip;&hellip;一些技能细节和基本知识还没有掌握。</p>
<p>遗憾的是，我也没有享受到美好的游戏时光&hellip;</p>
<h2 id="抑郁">抑郁</h2>
<p>一切糟糕的事情都来自可怕的原因，我可能在情绪上生病了，比如抑郁症。</p>
<p>我知道有必要去看医生，但机会很少。
我想摆脱它，但这很难。</p>
<p>它就像一块石头，很可能也肯定会阻碍我前进的脚步&hellip;&hellip;</p>
<h1 id="新友">新友</h1>
<p>以下是我今年新认识的朋友和他们说的话。</p>
<h2 id="grassblock">GrassBlock</h2>
<blockquote>
<p>&ldquo;新的一年希望狗子能够开心的活着，不要把自己想的太低而给自己压力。&rdquo;</p>
</blockquote>
<h2 id="riiina">Riiina</h2>
<blockquote>
<p>&ldquo;看医生。&rdquo;</p>
</blockquote>
<h2 id="epsoide33">Epsoide33</h2>
<blockquote>
<p>&ldquo;你啊<br>
还是考虑下怎么好好活着吧,至少在我看来你是挺有前景的。&rdquo;</p>
</blockquote>
<h1 id="2024-年的计划">2024 年的计划</h1>
<ul>
<li>完成***《Computer Systems A Programmer’s Perspective》***一书的阅读。</li>
<li>学习使用 Vuetify 或 PrimeVue。</li>
<li>学习更多有关虚拟化、编程和网络的知识。</li>
<li>准备专升本。</li>
<li>参加一次比赛。</li>
<li><del>找到对象</del>(还是算了吧)</li>
</ul>
<h1 id="结语">结语</h1>
<p>终于，我记录下了这一年。即使有失败的遗憾，我还是收获了很多，以至于在年末时从不感到悲伤。</p>]]></description>
</item>
<item>
    <title>解决 NVIDIA 和 Intel GPU 双屏问题</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/solve_the_problem_of_dual_screen_with_nvidia_and_intel_gpus/</link>
    <pubDate>Thu, 21 Sep 2023 23:06:09 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/solve_the_problem_of_dual_screen_with_nvidia_and_intel_gpus/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2023-09-21-21-49-12%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be.png" referrerpolicy="no-referrer">
            </div><h2 id="序">序</h2>
<p>最近买了个优派的新显示器，但是我遇到了多显卡问题。过去一年我都是用笔记本自带的显示器跑 Gnome, 没有装 N 卡闭源驱动。</p>
<p>然而，因为买了新显示器，用核显来带两个屏幕，显然性能不够。</p>
<p>因此，我打算在我的 Arch 给这张 3050 装闭源驱动，用来带新的显示器。但是过程并不是很顺利&hellip;&hellip;</p>
<p>我踩坑的原因是我之前习惯用 wayland 模式来跑 Gnome 的，但据说 N 卡的闭源驱动在 wayland 表现不太好？</p>
<p>所以这意味着我必须放弃用 wayland 来带两个屏幕，这太糟糕了，我不得不回到 X11 的怀抱了。</p>
<h2 id="起步">起步</h2>
<p>最开始呢，我直接把显示器插在了笔记本上的 mini-DP 口，另一头插在显示器的 DP 口上。</p>
<p>但失望的是，它根本没有亮起来。 QAQ</p>
<p>也许是这个 miniDP 口在缺少N卡驱动的情况下不能输出。</p>
<p>所以我打算把它装上。</p>
<h2 id="安装-n-卡驱动">安装 N 卡驱动</h2>
<p>第一步是安装驱动，但需要注意的是，这是第一步，而不是万事大吉。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo pacman -S nvidia nvidia-utils lib32-nvidia-utils nvidia-prime
</span></span></code></pre></td></tr></table>
</div>
</div><p>然而，这显示器仍然没有亮&hellip;</p>
<p>于是我到 ArchCN 群问大佬。</p>
<p>经过讨论之后，我得到了解决问题的方法。</p>
<h2 id="打开-ibt">打开 <code>ibt</code></h2>
<p>大概在三月份的时候，<a href="/zh-cn/posts/problem_of_virtualbox_appeding_starting_vm/" rel="">我遇到了一些 VirtualBox 的问题</a>。</p>
<p>但是现在不需要关掉了，所以我需要把它从内核参数当中移除。</p>
<p>编辑文件：<code>/etc/default/grub</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GRUB_DEFAULT=&#34;0&#34;
</span></span><span class="line"><span class="cl">GRUB_TIMEOUT=&#34;100&#34;
</span></span><span class="line"><span class="cl">GRUB_DISTRIBUTOR=&#34;Arch&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;quiet splash loglevel=3 rd.udev.log_priority=3 vt.global_cursor_default=0&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX=&#34;ibt=off&#34;
</span></span><span class="line"><span class="cl">.........
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后将 <code>ibt=off</code> 从 <code>GRUB_CMD_LINE_LINUX</code> 当中删除：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GRUB_DEFAULT=&#34;0&#34;
</span></span><span class="line"><span class="cl">GRUB_TIMEOUT=&#34;100&#34;
</span></span><span class="line"><span class="cl">GRUB_DISTRIBUTOR=&#34;Arch&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;quiet splash loglevel=3 rd.udev.log_priority=3 vt.global_cursor_default=0&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX=&#34;&#34;
</span></span><span class="line"><span class="cl">.........
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后重新生成 <code>grub.cfg</code> 配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /etc/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="设置-nvidia-modeset">设置 NVIDIA modeset</h2>
<p>然后我需要查看 <code>nvidia-drm.modeset</code> 的值。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ cat /sys/module/nvidia_drm/parameters/modeset
</span></span></code></pre></td></tr></table>
</div>
</div><p>它返回的结果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">N
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在我需要向内核参数添加 <code>nvidia-drm.modeset=1</code> 。</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>ChatGPT 的解释<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><code>nvidia-drm.modeset=1</code>内核参数启用了<strong>NVIDIA Direct Rendering Manager KMS（内核模式设置）</strong>。KMS是一种在内核空间而非用户空间设置显示分辨率和深度的方法。</div>
        </div>
    </div>
<p>编辑文件：<code>/etc/default/grub</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span></code></pre></td></tr></table>
</div>
</div><p>向 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 添加 <code>nvidia-drm.modeset=1</code> 。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">........
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;quiet splash loglevel=3 rd.udev.log_priority=3 vt.global_cursor_default=0 nvidia-drm.modeset=1&#34;
</span></span><span class="line"><span class="cl">........
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后重新生成 grub 配置文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后重启。</p>
<h2 id="使用-mutter-performance">使用 mutter-performance</h2>
<p>然而，在重启之后效果还是不太好。</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>ChatGPT 的解释<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><code>mutter-performance</code> &ldquo;是 Mutter 窗口管理器的优化版本，特别针对性能进行了调整。Mutter 是 GNOME 3 的默认窗口管理器，负责窗口的排列、交互和动画<a href="https://www.linkedin.com/company/mutter-performance/" target="_blank" rel="noopener noreffer ">linkedin.com</a>。</div>
        </div>
    </div>
<p>这个包需要从 <a href="https://aur.archlinux.org" target="_blank" rel="noopener noreffer ">AUR</a> 安装.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ paru -S mutter-performance
</span></span></code></pre></td></tr></table>
</div>
</div><p>装完之后，桌面确实比之前要快一点了，但仍然不够。</p>
<p>并且，值得一提的是，现在是时候卸载 <code>xf86-video-intel</code> 了。 在新设备当中并不需要这个包。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo pacman -Rs xf86-video-intel
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition tip">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>ChatGPT 的解释<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>xf86-video-intel 软件包是 Intel 集成显卡芯片的驱动程序，由 X.Org 项目维护。 然而，对于现代 Intel 图形硬件（大约 2007 年及更新版本），出于以下几个原因，通常建议删除此软件包：</p>
<p>更好地支持模式设置驱动程序：模式设置驱动程序是 X 服务器的一部分，不需要单独安装，可以更好地支持现代图形功能和硬件。 它由 X.Org 项目维护，并倾向于跟上图形技术 github.com 的新发展。</p>
<p>xf86-video-intel 驱动程序的问题：已知 xf86-video-intel 驱动程序会在某些系统上引起问题，包括图形故障以及与模式设置驱动程序相比性能较差。 在某些情况下，它甚至会导致 bbs.archlinux.org 系统不稳定。</p>
<p>缺乏积极的开发：xf86-video-intel 驱动程序已经好几年没有积极开发了，这意味着它可能缺乏对较新硬件和软件中的功能的支持。 另一方面，模式设置驱动程序作为 X 服务器 reddit.com 的一部分正在积极开发。</p>
<p>要删除 xf86-video-intel 软件包，您可以使用特定 Linux 发行版的软件包管理器。 以下是使用 pacman（Arch Linux 的包管理器）的示例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -R xf86-video-intel
</span></span></code></pre></td></tr></table>
</div>
</div><p>删除软件包后，重新启动系统以确保更改生效。</p>
<p>请记住检查特定发行版的文档，了解删除软件包和处理驱动程序的正确方法。</p>
</div>
        </div>
    </div>
<h2 id="设置-x11-配置文件">设置 X11 配置文件</h2>
<p>根据 <a href="https://wiki.archlinux.org/title/NVIDIA_Optimus#Use_NVIDIA_graphics_only" target="_blank" rel="noopener noreffer ">Arch Wiki</a>，我需要设置一些 X11 配置文件，用来单独使用 N 卡。</p>
<p>写入文件 <code>/etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf/</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Section &#34;OutputClass&#34;
</span></span><span class="line"><span class="cl">    Identifier &#34;intel&#34;
</span></span><span class="line"><span class="cl">    MatchDriver &#34;i915&#34;
</span></span><span class="line"><span class="cl">    Driver &#34;modesetting&#34;
</span></span><span class="line"><span class="cl">EndSection
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Section &#34;OutputClass&#34;
</span></span><span class="line"><span class="cl">    Identifier &#34;nvidia&#34;
</span></span><span class="line"><span class="cl">    MatchDriver &#34;nvidia-drm&#34;
</span></span><span class="line"><span class="cl">    Driver &#34;nvidia&#34;
</span></span><span class="line"><span class="cl">    Option &#34;AllowEmptyInitialConfiguration&#34;
</span></span><span class="line"><span class="cl">    Option &#34;PrimaryGPU&#34; &#34;yes&#34;
</span></span><span class="line"><span class="cl">    ModulePath &#34;/usr/lib/nvidia/xorg&#34;
</span></span><span class="line"><span class="cl">    ModulePath &#34;/usr/lib/xorg/modules&#34;
</span></span><span class="line"><span class="cl">EndSection
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后我就需要创建两个 <code>*.desktop</code> 文件来配置 GDM。</p>
<p>写入文件 <code>/usr/share/gdm/greeter/autostart/optimus.desktop</code> 和 <code>/etc/xdg/autostart/optimus.desktop</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[Desktop Entry]
</span></span><span class="line"><span class="cl">Type=Application
</span></span><span class="line"><span class="cl">Name=Optimus
</span></span><span class="line"><span class="cl">Exec=sh -c &#34;xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto&#34;
</span></span><span class="line"><span class="cl">NoDisplay=true
</span></span><span class="line"><span class="cl">X-GNOME-Autostart-Phase=DisplayServer
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后，经过重启，终于解决了这些问题。</p>
<p>好耶！</p>
<h2 id="参考连接">参考连接</h2>
<ul>
<li><a href="https://www.phind.com" target="_blank" rel="noopener noreffer ">Phind.com</a></li>
<li><a href="https://wiki.archlinux.org/title/NVIDIA_Optimus#Use_NVIDIA_graphics_only" target="_blank" rel="noopener noreffer ">NVIDIA Optimus - ArchWiki #Use_NVIDIA_graphics_only</a></li>
<li><a href="https://wiki.archlinux.org/title/NVIDIA_Optimus#GDM" target="_blank" rel="noopener noreffer ">NVIDIA Optimus - ArchWiki #GDM</a></li>
</ul>]]></description>
</item>
<item>
    <title>如何在Vue 3.2中从父组件传递一个值给子组件？</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/how_to_transfer_a_value_from_the_parent_component_to_the_child_component_in_vue_3.2/</link>
    <pubDate>Sat, 22 Jul 2023 15:46:49 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/how_to_transfer_a_value_from_the_parent_component_to_the_child_component_in_vue_3.2/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/background_preview_2023_07_22.png" referrerpolicy="no-referrer">
            </div><h2 id="介绍">介绍</h2>
<p>Vue 是一种流行的 JavaScript 框架，用于构建交互式的网页界面。它易于学习、多功能，并拥有一个支持性强的社区。</p>
<p>使用 Vue 开发单页面应用非常方便。</p>
<p>然而，在父组件和子组件之间传递值的场景中，有时候可能会遇到一些挑战。</p>
<p>还不清楚？想象一下这种情景：你创建了一个按钮，希望它可以控制一个 <code>&lt;p&gt;&lt;/p&gt;</code> 元素的内容，以满足特定的开发需求。</p>
<p>这时，就该将不同的值传递给 <code>ChildComponent</code>，来改变属性或触发事件了。</p>
<h2 id="从父组件传递值给子组件的方法">从父组件传递值给子组件的方法</h2>
<h3 id="步骤-1创建父组件">步骤 1：创建父组件</h3>
<ol>
<li>为父组件创建一个新的 Vue 组件文件（例如 <code>ParentComponent.vue</code>）。</li>
<li>在组件的模板中，定义父组件的内容并包含子组件。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;FatherBox&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">ChildComponent</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">button</span><span class="p">&gt;&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>通过添加必要的导入语句导入子组件。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">ChildComponent</span> <span class="nx">from</span> <span class="s1">&#39;./ChildComponent.vue&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>在父组件的 components 属性中注册子组件。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">components</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">ChildComponent</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="步骤-2在父组件中定义数据">步骤 2：在父组件中定义数据。</h3>
<ol>
<li>在父组件的脚本部分中，定义一个数据属性来存储将传递给子组件的值。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>给数据属性赋初始值。这将是最初传递给子组件的值。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">message</span><span class="o">:</span> <span class="s1">&#39;Hello from the parent component!&#39;</span><span class="p">,</span> <span class="c1">// Value to pass to child component
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="步骤3将数据作为属性传递给子组件">步骤3：将数据作为属性传递给子组件</h3>
<ol>
<li>在父组件的模板中，添加子组件并使用冒号（:）绑定将数据属性作为 prop 传递给子组件。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;FatherBox&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">ChildComponent</span> <span class="nt">:message</span><span class="s">=&#34;message&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>在子组件中，prop 的名称应与在父组件中传递 prop 时选择的名称相匹配。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">ChildComponent</span> <span class="nx">from</span> <span class="s1">&#39;./ChildComponent.vue&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">components</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">ChildComponent</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">message</span><span class="o">:</span> <span class="s1">&#39;Hello from the parent component!&#39;</span><span class="p">,</span> <span class="c1">// Value to pass to child component
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">};</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">changeMessage</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">this</span><span class="p">.</span><span class="nx">message</span> <span class="o">=</span> <span class="s1">&#39;New message from parent!&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="步骤4创建子组件">步骤4：创建子组件</h3>
<ol>
<li>
<p>为子组件创建一个新的 Vue 组件文件（例如，<code>ChildComponent.vue</code>）。</p>
</li>
<li>
<p>在子组件的模板中，定义子组件的内容。这将包括呈现从组件传递的 prop 值。</p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;{{</span> <span class="nx">message</span> <span class="p">}}&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="步骤5在子组件中定义-prop">步骤5：在子组件中定义 prop。</h3>
<ol>
<li>在子组件的脚本部分中，定义用于接收父组件发送的数据的 prop。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">props</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">message</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>为了确保数据的完整性，可以指定 prop 的类型（例如 <code>String</code>、<code>Number</code> 等）。如果必须传递该 prop，则还可以设置 <code>required: true</code>。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="nx">message</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">type</span><span class="o">:</span> <span class="nb">String</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nx">required</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="第六步从子组件发出事件">第六步：从子组件发出事件</h3>
<ol>
<li>在子组件的脚本中，定义一个方法来发出事件，与父组件进行通信。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">changeMessage</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">newMessage</span> <span class="o">=</span> <span class="s1">&#39;New message from child!&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>在该方法内部，使用 <code>this.emit('事件名称',数据)</code>来发出事件。选择一个合适的事件名称，并将任何相关数据递给父组件。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">changeMessage</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">newMessage</span> <span class="o">=</span> <span class="s1">&#39;New message from child!&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s1">&#39;update-message&#39;</span><span class="p">,</span> <span class="nx">newMessage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="第七步在父组件中处理事件">第七步：在父组件中处理事件</h3>
<ol>
<li>在父组件的脚本中，定义一个方法来处理子组件发出的事件。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="nx">updateMessage</span><span class="p">(</span><span class="nx">newMessage</span><span class="o">:</span> <span class="nx">any</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>在父组件的模板中，通过使用 <code>@event-name=&quot;methodName&quot;</code> 为子组件实例添加事件监听器。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">ChildComponent</span> <span class="nt">:message</span><span class="s">=&#34;message&#34;</span> <span class="nt">@update-message</span><span class="s">=&#34;updateMessage&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>在该方法中，将发出的数据作为参数接收，并相应地更新父件的数据。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="nx">updateMessage</span><span class="p">(</span><span class="nx">newMessage</span><span class="o">:</span> <span class="nx">any</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">this</span><span class="p">.</span><span class="nx">message</span> <span class="o">=</span> <span class="nx">newMessage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h3 id="完整代码">完整代码</h3>
<p>父组件:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;FatherBox&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">ChildComponent</span> <span class="nt">:message</span><span class="s">=&#34;message&#34;</span> <span class="nt">@update-message</span><span class="s">=&#34;updateMessage&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">button</span> <span class="nt">@click</span><span class="s">=&#34;changeMessage&#34;</span><span class="p">&gt;</span><span class="na">Change</span> <span class="na">Message</span> <span class="na">By</span> <span class="na">ParentComponent</span><span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">ChildComponent</span> <span class="nx">from</span> <span class="s1">&#39;./ChildComponent.vue&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">components</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">ChildComponent</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">message</span><span class="o">:</span> <span class="s1">&#39;Hello from the parent component!&#39;</span><span class="p">,</span> <span class="c1">// Value to pass to child component
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">};</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">updateMessage</span><span class="p">(</span><span class="nx">newMessage</span><span class="o">:</span> <span class="nx">any</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">this</span><span class="p">.</span><span class="nx">message</span> <span class="o">=</span> <span class="nx">newMessage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="nx">changeMessage</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">this</span><span class="p">.</span><span class="nx">message</span> <span class="o">=</span> <span class="s1">&#39;New message from parent!&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">style</span> <span class="na">scoped</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">.</span><span class="nx">FatherBox</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">background</span><span class="o">-</span><span class="nx">color</span><span class="o">:</span> <span class="err">#</span><span class="nx">f1f1f1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">border</span><span class="o">-</span><span class="nx">radius</span><span class="o">:</span> <span class="mi">20</span><span class="nx">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">box</span><span class="o">-</span><span class="nx">shadow</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">5</span><span class="nx">px</span> <span class="mi">5</span><span class="nx">px</span> <span class="nx">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nx">padding</span><span class="o">:</span> <span class="mi">20</span><span class="nx">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>子组件:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;{{</span> <span class="nx">message</span> <span class="p">}}&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">button</span> <span class="nt">@click</span><span class="s">=&#34;changeMessage&#34;</span><span class="p">&gt;</span><span class="na">Change</span> <span class="na">Message</span><span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">props</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">message</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">changeMessage</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="kr">const</span> <span class="nx">newMessage</span> <span class="o">=</span> <span class="s1">&#39;New message from child!&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s1">&#39;update-message&#39;</span><span class="p">,</span> <span class="nx">newMessage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="测试">测试</h2>
<p>然后我们可以执行 <code>yarn dev</code> 来启动开发服务器，然后我们就可以看到一个类似这样的页面：</p>
<p></p>
<p>现在让我们尝试点击第一个按钮！</p>
<p></p>
<p>显然！文本的内容发生了变化！</p>
<p>那么让我们点击第二个按钮吧！</p>
<p></p>
<p>它变成了&quot;New message from parent!&quot;</p>
<p>是不是很神奇呢？</p>
<h2 id="结语">结语</h2>
<p>没错！通过按照这些步骤，在Vue.js中可以成功地通过props和事件将值从父组件传给子组件。不要忘记保存文件，根据需要导组件，并适当注册组件。</p>]]></description>
</item>
<item>
    <title>尝试解决最近 VirtualBox 启动虚拟机时卡在 Starting 的问题</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/problem_of_virtualbox_appeding_starting_vm/</link>
    <pubDate>Mon, 06 Mar 2023 22:27:08 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/problem_of_virtualbox_appeding_starting_vm/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/photo_2023-03-06_20-52-14.jpg" referrerpolicy="no-referrer">
            </div><h1 id="序遇到了啥问题啊">序：遇到了啥问题啊？</h1>
<p>今天心血来潮想要玩一下 VirtualBox 虚拟机， 结果发现打开之后每个虚拟机都卡在 <code>Starting virutal machine.</code>。</p>
<p>首先遇到问题的第一步就是去谷歌。</p>
<p>嗯&hellip; 查到了两篇 Arch 官方论坛的帖子。</p>
<ul>
<li>
<p><a href="https://bbs.archlinux.org/viewtopic.php?id=277409" target="_blank" rel="noopener noreffer ">Virtualbox hangs on Starting virtual machine window / Newbie Corner / Arch Linux Forums</a></p>
</li>
<li>
<p><a href="https://bbs.archlinux.org/viewtopic.php?id=276699" target="_blank" rel="noopener noreffer ">KVM busted in linux 5.18 due to Intel CET / Kernel &amp; Hardware / Arch Linux Forums</a></p>
</li>
</ul>
<p>读完两篇帖子之后，我发现是因为 KVM 在新版本的内核中产生了一个 bug 导致的。</p>
<p>已经有大佬提交了 Bug 报告了。</p>
<ul>
<li>
<p><a href="https://bugs.archlinux.org/task/75481" target="_blank" rel="noopener noreffer ">FS#75481 : [linux] VBox virtual machines stop functioning</a></p>
</li>
<li>
<p><a href="https://github.com/torvalds/linux/commit/991625f3dd2cbc4b787deb0213e2bcf8fa264b21" target="_blank" rel="noopener noreffer ">x86/ibt: Add IBT feature, MSR and #CP handling · torvalds/linux@991625f · GitHub</a></p>
</li>
</ul>
<p><del>至于这个 Bug 是怎么产生&hellip; 咱笨笨，不知道</del></p>
<h1 id="想想怎么解决">想想怎么解决</h1>
<p>根据阅读帖子里的内容，得到的解决方法都是设置内核参数 <code>ibt=off</code>。</p>
<blockquote>
<p>Thank you</p>
<p>appending</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ibt=off
</span></span></code></pre></td></tr></table>
</div>
</div><p>to kernel boot params fixed my problem.</p>
</blockquote>
<h2 id="怎么设置内核启动参数呢">怎么设置内核启动参数呢？</h2>
<p>我并不知道这个，所以我还是去谷歌查了，得到了方法。</p>
<ul>
<li><a href="https://linuxconfig.org/how-to-set-kernel-boot-parameters-on-linux" target="_blank" rel="noopener noreffer ">How to set kernel boot parameters on Linux - Linux Tutorials - Learn Linux Configuration</a></li>
</ul>
<p>此时能看懂英文的读者可以参考上面这条链接去解决问题了，但是如果英文阅读比较困难的话，也可以跟着本文的步骤走。</p>
<h2 id="设想的解决方法">设想的解决方法</h2>
<p>其实就是编辑 <code>/etc/defualt/grub</code> 这个文件的 <code>GRUB_CMDLINE_LINUX=&quot;&quot;</code> 的值。</p>
<p>然后往这里面写 <code>&quot;ibt=off&quot;</code></p>
<h1 id="解决步骤">解决步骤</h1>
<h2 id="1-编辑-etcdefaultgrub-文件">1. 编辑 <code>/etc/default/grub</code> 文件</h2>
<p>编辑这个文件的目的是设置内核启动参数，在不同的启动引导器引导的系统中，设置这个玩意的方法也有所不同，由于我的 Arch 用的是 Grub， 所以我需要编辑这个文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span></code></pre></td></tr></table>
</div>
</div><p>找到 <code>GRUB_CMDLINE_LINUX=&quot;&quot;</code> 关键字，并设置参数 <code>ibt=off</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1"># GRUB boot loader configuration</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">GRUB_DEFAULT</span><span class="o">=</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="n">GRUB_TIMEOUT</span><span class="o">=</span><span class="mi">5</span>
</span></span><span class="line"><span class="cl"><span class="n">GRUB_DISTRIBUTOR</span><span class="o">=</span><span class="s2">&#34;Arch&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">GRUB_CMDLINE_LINUX_DEFAULT</span><span class="o">=</span><span class="s2">&#34;loglevel=7&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">GRUB_CMDLINE_LINUX</span><span class="o">=</span><span class="s2">&#34;ibt=off&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">......</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>按 <code>:</code> 输入 <code>wq</code> 回车（基础操作了，不多解释）。</p>
<h2 id="2-重新生成-grub-配置文件">2. 重新生成 Grub 配置文件</h2>
<p>然后重新生成 Grub 配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><p>等待操作，在没有报错的情况下，可以重启操作系统了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo reboot
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="测试和验证">测试和验证</h1>
<p>重启之后再次打开 VirutalBox， 然后启动一个虚拟机，此时发现虚拟机已经进入了系统。</p>
<p></p>
<p>这意味着问题得到了解决。</p>]]></description>
</item>
<item>
    <title>关于写 HTML CSS 的时候一些想说的话</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/something-about-html-css/</link>
    <pubDate>Thu, 17 Nov 2022 22:41:43 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/something-about-html-css/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/zy/wallhaven-zygeko.jpg" referrerpolicy="no-referrer">
            </div><h1 id="序">序</h1>
<p>很多初学者在学 HTML 和 CSS 的时候总是遇到一些低级的问题就望而却步&hellip;</p>
<p>我本来是实在不想写基础类的内容的，但是感觉有些人可能就需要看这种内容&hellip; 就写一些吧</p>
<p>要说的也不多，就是语法和用法上的问题。</p>
<h1 id="我已经发现的常见问题">我已经发现的常见问题</h1>
<h2 id="html-语法问题">HTML 语法问题</h2>
<h3 id="标签顺序问题">标签顺序问题</h3>
<p>我经常被人问：“为什么我的标签写上去之后内容显示不出来？为什么我这个显示不了&hellip; ” 之类的问题。</p>
<p>我第一个被问到的是为什么标题（<code>&lt;h1&gt;</code> 标签）的内容显示不出来，我看一眼他的代码:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Test<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      ppp
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>TT<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      pppp
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>麻了，我血压一下子就上来了，居然把 h1 标签套进 p 里面去&hellip;</p>
<p>这里很明显是对这两个标签都不太熟， <code>&lt;h1&gt;</code> 和 <code>&lt;p&gt;</code> 都是块级元素的标签，且默认情况下 <code>&lt;h1&gt;</code> 的字体是比 <code>&lt;p&gt;</code> 要大的，因此放进去之后可能会显示错误，正常情况下，这两个标签是平级存在的，两者都会独占一整行来显示。如果大的<code>&lt;h1&gt;</code>套进小的里面去的话，当然就看不到啦~</p>
<p>总的来说段落里面不能有标题，二者不能互相嵌套。</p>
<p>所以正确的写法应该是这样的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Test<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>The Title Of An article.<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>The Paragraph.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="丢符号的问题">丢符号的问题，</h3>
<p>有时候也因为这个问题被问到，我感觉这都是低级错误。</p>
<p>打开代码一看， <del>妈也， 这是什么玩意</del></p>
<p>很明显这就是不规范的 HTML。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Test<span class="err">&lt;</span>/title
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>Test<span class="err">&lt;</span>/h1
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">p</span> <span class="na">Text</span><span class="err">&lt;/</span><span class="na">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span> 
</span></span><span class="line"><span class="cl">    /body&gt;
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这种代码&hellip;.</p>
<p>要么是打的时候不认真，要么也是没有熟悉这些标签的用法。</p>
<p>或者是说，不知道标签怎么表示</p>
<p>那这里就再解释一下， 标签有两种，单标签和双标签</p>
<p>以插入图片的标签为例，单标签是这样的: <code>&lt;img /&gt;</code>， 前面的 <code>&lt;</code> 和后面的 <code>&gt;</code> 都不能丢， 而且最好在末尾的 <code>&gt;</code> 前面加个 <code>/</code>。</p>
<p>双标签就以段落为例吧： <code>&lt;p&gt;这是一个段落&lt;/p&gt;</code> ，这种双标签有头必有尾。 前面的部分和后面的部分一个都不能丢。</p>
<p>写双标签出现嵌套的时候最好养成一个好习惯，换行缩进</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Test<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;Box1&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;Box2&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>Title<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Para1<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Para2<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这样的话，代码不仅美观，而且后期维护起来也会轻松很多，出了问题也好找。</p>
<h3 id="分不清-head-和-body">分不清 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code></h3>
<p>除了上面的问题以外，甚至还有在 <code>&lt;head&gt;</code> 里面写 <code>&lt;div&gt;</code> 的，这就说明还没有分清楚 HTML 的头部信息区和内容显示区。</p>
<p>我只能这样解释了：</p>
<ul>
<li>
<p><code>&lt;head&gt;</code> 里面是头部信息区，这个是服务器给浏览器看的，里面的代码并不会渲染在浏览器的页面上。</p>
</li>
<li>
<p><code>&lt;body&gt;</code> 则是内容显示区，用来写那些能够被显示出来的标签的，也可以写 <code>&lt;script&gt;</code> 标签然后套 js 代码，但是 CSS 样式不能写在这里。</p>
</li>
</ul>
<h2 id="css-的问题">CSS 的问题</h2>
<p>除了 HTML 的语法问题和区域分不清的问题以外，在写 CSS 的时候也有不少人问我一些奇葩问题。</p>
<h3 id="引用样式的方法">引用样式的方法</h3>
<p>引用 CSS 样式表的方法，按教科书来说有三种，但是常用的也就两种。</p>
<p>我个人最喜欢的是用 <code>&lt;link&gt;</code> 来链入，这样可以分为两个文件然后分屏写，很方便。</p>
<p>不需要像行内式一样把屏幕翻来翻去。</p>
<p>至于行内式？用得少，我几乎在实践当中没用过。</p>
<p>不过到现在为止居然还有人不会链入式？</p>
<p>最主要的是不清楚路径这个概念。</p>
<p>其实很简单，只需要把相对路径记住，然后再把相对路径填入 <code>&lt;link&gt;</code> 标签的 <code>href</code> 属性值里面就行了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;css/style.css&#34;</span> <span class="p">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>当然，内嵌式也还是有人不会的，这没什么好说的，一定记得 <code>&lt;style&gt;</code> 标签要写在 <code>&lt;head&gt;</code> 里面，然后按照正确的 CSS 格式在 <code>&lt;style&gt;</code> 标签里面写样式就行。</p>
<p>例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">http-equiv</span><span class="o">=</span><span class="s">&#34;X-UA-Compatible&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;IE=edge&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width, initial-scale=1.0&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Document<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">style</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">*</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="nc">TopHead</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">background-color</span><span class="p">:</span> <span class="kc">white</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">border</span><span class="p">:</span> <span class="kc">solid</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">black</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;TopHead&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="写-css-的时候丢---和--和拼错单词">写 CSS 的时候丢 <code>;</code> 、<code>{</code> 和 <code>}</code> ，和拼错单词</h3>
<p>这种呢都是低级错误，多练练多注意就好&hellip;.</p>
<p>正确模板是这样的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="nt">选择器</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="err">属性:</span> <span class="err">属性值</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="p">.</span><span class="nc">TopHead</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">background-color</span><span class="p">:</span> <span class="kc">white</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">border</span><span class="p">:</span> <span class="kc">solid</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">black</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="消除默认内外边距">消除默认内外边距</h3>
<p>很多初学者在写 CSS 的时候没有养成先消除默认内外边距的习惯，这导致写到后期会发现样式越来越难调。</p>
<p>其实很简单:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="o">*</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>*</code> 是个正则通配符，在 CSS 里面它的优先级是最低的，而在一切开始之前将它的 <code>margin</code> 属性和 <code>padding</code> 属性设置为0可以消除所有的元素在没被选择器选择的时候的内外边距清除，便于后期对它进行更准确的设定。</p>
<p>还是不知道写不写有什么区别？你试试就知道了。</p>
<h3 id="使用类选择器id-选择器的时候命名不规范">使用类选择器、ID 选择器的时候命名不规范</h3>
<p>这个问题也很大，非常影响代码的可读性和后期管理性。</p>
<p>我是经常看到这样的:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="p">.</span><span class="nc">a1</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">.</span><span class="nc">a2</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">#</span><span class="nn">b1</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">#</span><span class="nn">b2</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这就很难去找它到底选择的是个什么元素，增加了工作量&hellip;.</p>
<p>因为第一眼看上去完全就不知道它指的是什么。</p>
<p>还有用中文的，虽然我在初中的时候写这玩意也喜欢用中文，但是这个习惯也很不好，如果有一些服务器的编码炸了，样式文件也很容易加载不出来。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="nt">h1</span><span class="p">.</span><span class="nc">中央标题</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">text-align</span><span class="p">:</span><span class="kc">center</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-size</span><span class="p">:</span><span class="mi">22</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nt">h1</span><span class="p">.</span><span class="nc">一级标题</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-size</span><span class="p">:</span><span class="mi">22</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nt">h2</span><span class="p">.</span><span class="nc">二级标题</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-size</span><span class="p">:</span><span class="mi">20</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nt">h2</span><span class="p">.</span><span class="nc">三级标题</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-size</span><span class="p">:</span><span class="mi">18</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nt">h2</span><span class="p">.</span><span class="nc">四级标题</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-size</span><span class="p">:</span><span class="mi">16</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nt">p</span><span class="p">.</span><span class="nc">普通文字</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">text-indent</span><span class="p">:</span><span class="mi">25</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">font-size</span><span class="p">:</span><span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">text-align</span><span class="p">:</span><span class="kc">justify</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>但是甚至还有用数字的！</p>
<p>然后问我为什么不显示！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="p">.</span><span class="nc">1</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">color</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>数字和数字开头的名字是不能作为类选择器名称和ID的，其次在很多编程语言中也不能使用数字或者数字开头的名字来给变量命名。</p>
<p>而比较好的命名方法有驼峰法和<code>_</code>拼接法。</p>
<ul>
<li>大驼峰是指两个单词拼在一起，两个首字母都大写，比如 <code>TopHead</code>。</li>
<li>小驼峰是指两个单词拼在一起，只有后面那个词的首字母大写，比如 <code>contentPlace</code>。</li>
</ul>
<p>而两个以上单词的命名就需要 <code>_</code> 来拼接了，比如 <code>the_menu_bar</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="p">.</span><span class="nc">TopHead</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">width</span><span class="p">:</span> <span class="mi">1000</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">height</span><span class="p">:</span> <span class="mi">300</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">.</span><span class="nc">contentPlace</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">width</span><span class="p">:</span> <span class="mi">1000</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">height</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">.</span><span class="nc">the_menu_bar</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">background-color</span><span class="p">:</span> <span class="kc">blue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这样可读性就高多了，一般来说都知道哪个对应哪个，不需要费那么多眼神去一个一个找了。</p>
<h1 id="结尾">结尾</h1>
<p>以上只是我个人对目前已经发现的初学者学习 HTML 和 CSS 会出现的小问题的一些看法和方法。</p>
<p>也许还有更多问题我没发现的&hellip;</p>
<p>其实你可以到下面的评论插件吐槽&hellip;.</p>]]></description>
</item>
<item>
    <title>浅尝 Docker</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/%E6%B5%85%E5%B0%9Ddocker/</link>
    <pubDate>Sat, 15 Oct 2022 20:21:13 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/%E6%B5%85%E5%B0%9Ddocker/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/d5/wallhaven-d5we7o.png" referrerpolicy="no-referrer">
            </div><h1 id="序">序</h1>
<p>嗯，未雨绸缪，提前学一下怎么玩 docker 。</p>
<p><del>卷死他们</del></p>
<h1 id="docker-是什么">docker 是什么？</h1>
<p><div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>官方英文简介<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production.</div>
        </div>
    </div>
根据官方文档的说明和通俗的理解， docker 能够提供快速部署软件项目的容器，它相当于一个可以模拟项目所需环境的虚拟机，但又和我们理解的一般的虚拟机又不同。</p>
<p>一般的虚拟机需要安装整个操作系统，会对我们的计算机占用大量的资源，而 docker 只需要模拟出项目所需要的运行环境，占用率非常低，这可以大大提高开发效率。</p>
<p>它可以按照我们的需求模拟出软件环境，并且能够快速部署我们开发好的项目实例（比如 Mastodon），并且一定程度上它具有环境隔离功能，运行环境与操作系统相分离，而且可以同时运行多个容器。</p>
<p>并且我们可以把容器封装成镜像，进行反复利用。</p>
<p>就像这条运着集装箱的鲸鱼一样，游到哪都是开箱即用。</p>
<p></p>
<h1 id="怎么安装-docker">怎么安装 docker</h1>
<p>各个平台装 docker 都非常简单。</p>
<p>Linux 平台可能对初学者稍微难一些，但是对熟悉的用户来说， Linux 安装 docker 非常快。</p>
<p>直接从相应发行版的包管理器安装就行。</p>
<h2 id="arch">Arch</h2>
<p>比如咱 Arch 可以让 pacman 把这条鲸鱼给带回来。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -S docker
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>注意<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>如果运行时出现以下报错</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">docker</span><span class="p">:</span> <span class="n">Cannot</span> <span class="n">connect</span> <span class="n">to</span> <span class="n">the</span> <span class="n">Docker</span> <span class="n">daemon</span> <span class="n">at</span> <span class="n">unix</span><span class="p">:</span><span class="o">///</span><span class="k">var</span><span class="o">/</span><span class="n">run</span><span class="o">/</span><span class="n">docker</span><span class="o">.</span><span class="n">sock</span><span class="o">.</span> <span class="n">Is</span> <span class="n">the</span> <span class="n">docker</span> <span class="n">daemon</span> <span class="n">running</span><span class="err">?</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="n">See</span> <span class="s1">&#39;docker run --help&#39;</span><span class="o">.</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>请使用 <code>systemctl</code> 启动 <code>docker</code> 的系统进程。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo systemctl start docker
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果有必要，设置其开机自启</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo systemctl enable docker
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<h2 id="debian">Debian</h2>
<p>如果是用 deb 系的发行版，可以参考<a href="https://docs.docker.com/engine/install/debian/#install-docker-engine" target="_blank" rel="noopener noreffer ">官方文档</a>用 apt 来安装。</p>
<h3 id="设置仓库">设置仓库</h3>
<ol>
<li>更新 apt 仓库，并安装一些依赖来允许 apt 通过 https 使用第三方仓库。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt update
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt install ca-certificates curl gnupg lsb-release
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>添加 Docker 官方 GPG 密钥</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo mkdir -p /etc/apt/keyrings
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">curl</span> <span class="o">-</span><span class="n">fsSL</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">download</span><span class="o">.</span><span class="n">docker</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">debian</span><span class="o">/</span><span class="n">gpg</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">gpg</span> <span class="o">--</span><span class="n">dearmor</span> <span class="o">-</span><span class="n">o</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">apt</span><span class="o">/</span><span class="n">keyrings</span><span class="o">/</span><span class="n">docker</span><span class="o">.</span><span class="n">gpg</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>设置 Docker 仓库</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  <span class="s2">&#34;deb [arch=</span><span class="k">$(</span>dpkg --print-architecture<span class="k">)</span><span class="s2"> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
</span></span></span><span class="line"><span class="cl"><span class="s2">  </span><span class="k">$(</span>lsb_release -cs<span class="k">)</span><span class="s2"> stable&#34;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装-docker">安装 docker</h3>
<ol>
<li>更新软件包仓库</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt update
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果更新的时候发生了 GPG 错误，可以参考官网的<a href="https://docs.docker.com/engine/install/debian/#install-docker-engine" target="_blank" rel="noopener noreffer ">这个提示</a>：</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Receiving a GPG error when running apt-get update?<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Your default <a href="https://en.wikipedia.org/wiki/Umask" target="_blank" rel="noopener noreffer ">umask</a> may be incorrectly configured, preventing detection of the repository public key file. Try granting read permission for the Docker public key file before updating the package index:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"> $ sudo chmod a+r /etc/apt/keyrings/docker.gpg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> $ sudo apt-get update
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<ol start="2">
<li>安装 Docker Engine 、 containerd 和 Docker Compose.</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>通过运行 hello-world 镜像来验证 docker 是否安装成功</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker run hello-world
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="rpm-系列">rpm 系列</h2>
<p>其实说实话，这类发行版我个人不太喜欢，就拿 CentOS 为例吧，CentOS 7 以上的版本也是可以直接用 yum 安装的。</p>
<h3 id="设置仓库-1">设置仓库</h3>
<p>一样是设置第三方仓库。</p>
<p>不过要先安装 <code>yum-utils</code> 才能用 <code>yum-config-manager</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo yum install -y yum-utils
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后设置仓库</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">sudo</span> <span class="n">yum</span><span class="o">-</span><span class="n">config</span><span class="o">-</span><span class="n">manager</span> \
</span></span><span class="line"><span class="cl">    <span class="o">--</span><span class="n">add</span><span class="o">-</span><span class="n">repo</span> \
</span></span><span class="line"><span class="cl">    <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">download</span><span class="o">.</span><span class="n">docker</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">centos</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">ce</span><span class="o">.</span><span class="n">repo</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装">安装</h3>
<p>一样是使用 yum 命令来安装 docker 的软件包和依赖。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="对于-linux-平台再提一嘴">对于 Linux 平台再提一嘴</h2>
<p>上述的方法都是在 Linux 平台安装 docker 的最新版本，如果需要安装特定的版本，可以<a href="https://docs.docker.com/engine/" target="_blank" rel="noopener noreffer ">参考 docker 的官方文档</a>进行操作。</p>
<h2 id="windows">Windows</h2>
<p>在 Windows 平台可以直接安装 docker-desktop，这也非常简单，直接通过 <a href="https://docs.docker.com/desktop/install/windows-install/" target="_blank" rel="noopener noreffer ">docker 官方文档</a><a href="https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe" target="_blank" rel="noopener noreffer ">下载</a>安装包就行了。</p>
<h1 id="我能怎么玩-docker">我能怎么玩 docker？</h1>
<p>docker 能干的事多着呢。</p>
<p>最常用的就是在 docker 容器里运行应用程序了。</p>
<h2 id="helloworld">HelloWorld</h2>
<p>比如我们来运行一个 Hello World</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker run ubuntu /bin/echo &#34;hello world&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><p>如图所见，它输出一系列字符后，在最后输出了 hello world</p>
<p></p>
<p>那么来解释一下命令的含义吧</p>
<ul>
<li><code>docker</code> &ndash; 运行 docker 的二进制文件, 这个没什么好说的</li>
<li><code>run</code> &ndash; 运行容器</li>
<li><code>ubuntu</code> &ndash; 要运行的镜像名称</li>
<li><code>/bin/echo &quot;hello world&quot;</code> - 在容器里面要执行的命令</li>
</ul>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>如果出现了以下信息，可能是因为在启动容器的时候没有下载好相关的镜像</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Unable to find image &#39;ubuntu:latest&#39; locally
</span></span><span class="line"><span class="cl">latest: Pulling from library/ubuntu
</span></span><span class="line"><span class="cl">e96e057aae67: Pull complete 
</span></span></code></pre></td></tr></table>
</div>
</div><p>默认情况下 docker 会自动下载，但最好养成启动之前下载好镜像的习惯。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker pull ubuntu
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<h2 id="交互式容器">交互式容器</h2>
<p>当然,我们也可以创建一个可以交互的容器,意思就是可以用 bash 来控制它</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker run -i -t ubuntu /bin/bash
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>参数含义<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><code>-i</code>: 交互式操作。</li>
<li><code>-t</code>: 终端。</li>
</ul>
<p><a href="https://www.runoob.com/docker/docker-image-usage.html" target="_blank" rel="noopener noreffer ">引自菜鸟教程</a></p></div>
        </div>
    </div>
<p>这样我们创建容器之后,我们的 shell 也变成了容器里的 shell</p>
<p></p>
<p>我们可以对它进行一些操作命令,随便打几个吧.</p>
<p></p>
<p>而且我们执行的命令是不会影响到主系统的</p>
<p>然后我们可以使用 <code>exit</code> 命令来退出这个系统.</p>
<p></p>
<p>这样一来容器的操作系统就退出了,同时容器也停止运行了, 因为这个容器不是以 daemon 模式来运行的.</p>
<h2 id="以-daemon-模式来运行容器">以 daemon 模式来运行容器</h2>
<p>接下来我要说的是,为啥上文中用 <code>exit</code> 退出容器 shell 之后还不算完.</p>
<p>这次我们再打开一个容器,不过这次加一个参数 <code>-d</code></p>
<p>这个参数的意思是以 Daemon 模式运行, 那么 Daemon 是什么意思呢?</p>
<p>通过搜索引擎得到的答案往往是什么 系统守护进程巴拉巴拉的,其实它类似于后台运行的意思.</p>
<p>接下来我们用这个命令来开个容器</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker run -i -t -d ubuntu /bin/bash
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>这时我们发现,我们并没有得一个 shell, 而是得到来一串字符串.</p>
<p>我们试试用 docker 的 ps 命令来查看一下正在运行的容器:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker ps
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们得到来这样的结果</p>
<p></p>
<p>图片可能不太清楚? 这里还是贴出来吧</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[weepingdogel@WeepingDogel-Arch ~]$ sudo docker ps
</span></span><span class="line"><span class="cl">CONTAINER ID   IMAGE     COMMAND       CREATED              STATUS              PORTS     NAMES
</span></span><span class="line"><span class="cl">2f4976200305   ubuntu    &#34;/bin/bash&#34;   About a minute ago   Up About a minute             funny_pare
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后发现了返回的结果中容器 ID 只有上面返回字符串的前面一部分,这个往往是我们会用的容器 ID</p>
<p>要怎样才能控制它的 shell 呢?</p>
<p>又要接触新的 docker 命令了</p>
<ul>
<li>attach</li>
<li>exec</li>
</ul>
<p>exec 需要加上 <code>-i</code> 和 <code>-t</code> 参数以及命令,比如 <code>/bin/bash</code> .</p>
<p>所以执行格式是这样的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker exec -it 容器ID 命令
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后我们需要执行 bash</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker exec -it 2f4976200305 /bin/bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>很快,我们就进入了容器的 shell.</p>
<p></p>
<p>我们可以用 <code>cat /etc/os-release</code> 来查看系统信息.</p>
<p></p>
<p>我们可以很清晰的看到,上面返回的是 Ubuntu 而我用的是 Arch, 因此我们可以确定容器里的东西不会影响到操作系统.</p>
<p>什么?不清晰?那再看清楚一点吧</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">PRETTY_NAME=&#34;Ubuntu 22.04.1 LTS&#34;
</span></span><span class="line"><span class="cl">NAME=&#34;Ubuntu&#34;
</span></span><span class="line"><span class="cl">VERSION_ID=&#34;22.04&#34;
</span></span><span class="line"><span class="cl">VERSION=&#34;22.04.1 LTS (Jammy Jellyfish)&#34;
</span></span><span class="line"><span class="cl">VERSION_CODENAME=jammy
</span></span><span class="line"><span class="cl">ID=ubuntu
</span></span><span class="line"><span class="cl">ID_LIKE=debian
</span></span><span class="line"><span class="cl">HOME_URL=&#34;https://www.ubuntu.com/&#34;
</span></span><span class="line"><span class="cl">SUPPORT_URL=&#34;https://help.ubuntu.com/&#34;
</span></span><span class="line"><span class="cl">BUG_REPORT_URL=&#34;https://bugs.launchpad.net/ubuntu/&#34;
</span></span><span class="line"><span class="cl">PRIVACY_POLICY_URL=&#34;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&#34;
</span></span><span class="line"><span class="cl">UBUNTU_CODENAME=jammy
</span></span></code></pre></td></tr></table>
</div>
</div><p>退出还是一样的可以用 <code>exit</code> , 但是此时的 exit 只是退出这个 bash, 它并不会关闭容器.</p>
<p>执行 <code>docker ps</code> 我们可以看到它还在运行.</p>
<p></p>
<p>那么我们接下来试试 attach</p>
<p>它的用法是</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker attach 容器ID
</span></span></code></pre></td></tr></table>
</div>
</div><p>所以我需要执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker attach 2f4976200305
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>这样一来我们也可以得到一个shell,但是如果我们执行了 <code>exit</code>, 这个容器是会被停止的.</p>
<p>来试试看?</p>
<p>很明显,当 <code>exit</code> 被执行之后用 <code>docker ps</code> 命令看不到正在运行的容器ID,这说明容器被停止了.</p>
<p></p>
<p>如果需要再次启动这个容器呢,我们可以使用 start 或者 restart 命令来重启.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker restart 2f4976200305
</span></span></code></pre></td></tr></table>
</div>
</div><p>此时我们用 <code>docker ps</code> 就又能看到它在运行了</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>使用 <code>docker ps -a</code>命令可以查看所有的容器,无论是否正在运行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker ps -a
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
</div>
        </div>
    </div>
<h2 id="删除容器">删除容器</h2>
<p>如果这些容器不需要了怎么办,</p>
<p><del>比如玩坏了,要把它删掉</del></p>
<p>那就要用 <code>docker rm</code> 命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker rm 容器ID
</span></span></code></pre></td></tr></table>
</div>
</div><p>后面接上容器 ID 就能删除, 可以删除多个</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker rm 6c8c8d9f5540 6c49bc1fdc49 eb71e810ee50 5a84d067d769 2addaf3666ef
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后在用 <code>docker ps -a</code> 来查看, 就看不到任何容器 ID 了</p>
<p></p>
<h2 id="镜像">镜像</h2>
<p>docker 容器运行的前提条件是它需要相应的镜像.</p>
<p>可以用 <code>docker images</code> 来查看本地已经有的镜像, 如果需要的别的镜像可以用 <code>docker pull</code> 来获取</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker images
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>我们来获取 php 的镜像</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker pull php
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>等待他们自动下载完成,镜像就可以用了.</p>
<p>如果你运行容器的时候没有事先拉取镜像的话, docker 则会在运行容器的时候临时进行拉取.</p>
<p>下载进程完成之后, 我们查看一下现有的镜像</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker images
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
</span></span><span class="line"><span class="cl">ubuntu       latest    a8780b506fa4   7 days ago    77.8MB
</span></span><span class="line"><span class="cl">php          latest    30e567f030d3   12 days ago   484MB
</span></span><span class="line"><span class="cl">httpd        latest    fe8735c23ec5   2 weeks ago   145MB
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>各个选项说明:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>
<p>REPOSITORY：表示镜像的仓库源</p>
</li>
<li>
<p>TAG：镜像的标签</p>
</li>
<li>
<p>IMAGE ID：镜像ID</p>
</li>
<li>
<p>CREATED：镜像创建时间</p>
</li>
<li>
<p>SIZE：镜像大小</p>
</li>
</ul>
<p>同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本，如 ubuntu 仓库源里，有 <code>15.10</code>、<code>14.04</code> 等多个不同的版本，我们使用 <code>REPOSITORY:TAG</code> 来定义不同的镜像。</p>
<p><a href="https://www.runoob.com/docker/docker-image-usage.html" target="_blank" rel="noopener noreffer ">引自菜鸟教程</a></p>
</div>
        </div>
    </div>
<h2 id="删除镜像">删除镜像</h2>
<p>当然, 不需要的镜像也是可以删除的.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker rmi 镜像ID
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>如图,这样就把不需要的镜像删除了</p>
<h2 id="dockerfile">dockerfile</h2>
<p>啥是 dockerfile? Dockerfile 是用来构建镜像文件的文本文件, 文件里面包含的是一条条指令和说明, 和一些 shell 脚本类似(比如 PKGBUILD )</p>
<p>而一个简单的 Dockerfile 是长这样的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> nginx</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> <span class="nb">echo</span> <span class="s1">&#39;Hello World!&#39;</span> &gt; /usr/share/nginx/html/index.html<span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>来自菜鸟教程的提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><code>FROM</code> 定制的镜像都是基于 FROM 的镜像, 这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。</li>
<li><code>RUN</code> 用于执行后面跟着的命令行命令。有以下俩种格式：</li>
</ul>
<p>shell 格式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">RUN</span> &lt;命令行命令&gt;<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># &lt;命令行命令&gt; 等同于，在终端操作的 shell 命令。</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>exec 格式:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">RUN</span> <span class="o">[</span><span class="s2">&#34;可执行文件&#34;</span>, <span class="s2">&#34;参数1&#34;</span>, <span class="s2">&#34;参数2&#34;</span><span class="o">]</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># 例如：</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># RUN [&#34;./test.php&#34;, &#34;dev&#34;, &#34;offline&#34;] 等价于 RUN ./test.php dev offline</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<p>熟悉 Linux 操作的话, 上手这玩意也就很简单了, 但是值得注意的是菜鸟教程当中说的这一段:</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>注意<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大。例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> centos</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> yum -y install wget<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> wget -O redis.tar.gz <span class="s2">&#34;http://download.redis.io/releases/redis-5.0.3.tar.gz&#34;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> tar -xvf redis.tar.gz<span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>以上执行会创建 3 层镜像。可简化为以下格式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> centos</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> yum -y install wget <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    <span class="o">&amp;&amp;</span> wget -O redis.tar.gz <span class="s2">&#34;http://download.redis.io/releases/redis-5.0.3.tar.gz&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    <span class="o">&amp;&amp;</span> tar -xvf redis.tar.gz<span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<p>也就是说我们要尽量在 RUN 当中写命令脚本的时候尽量写并列语句.</p>
<h2 id="一个简单的-web-服务器">一个简单的 Web 服务器.</h2>
<p>现在我想试试用 docker 来跑一个简单的网页了.</p>
<p>就跑一下我之前闲着没事干写的<a href="/simpleLogin/index.html" rel="">登录页面</a>吧.</p>
<p>首先我们要创建一个目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir webtest
</span></span></code></pre></td></tr></table>
</div>
</div><p>先把前端的静态文件复制进去</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cp test/* webtest/ -rv
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后进入该目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cd webtest
</span></span></code></pre></td></tr></table>
</div>
</div><p>检查一下文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ls -lh
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">总计 4.0K
</span></span><span class="line"><span class="cl">drwxr-xr-x 2 weepingdogel weepingdogel   23 11月10日 21:30 css
</span></span><span class="line"><span class="cl">drwxr-xr-x 2 weepingdogel weepingdogel    6 11月10日 21:30 img
</span></span><span class="line"><span class="cl">-rw-r--r-- 1 weepingdogel weepingdogel 1.4K 11月10日 21:30 index.html
</span></span><span class="line"><span class="cl">drwxr-xr-x 2 weepingdogel weepingdogel   21 11月10日 21:30 js
</span></span></code></pre></td></tr></table>
</div>
</div><p>ok ,现在我们来写一个 dockerfile</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> nginx</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">COPY</span> ./index.html /usr/share/nginx/html/index.html<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">COPY</span> ./css/style.css /usr/share/nginx/html/css/style.css<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">COPY</span> ./js/main.js /usr/share/nginx/html/js/main.js<span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>指令详解<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>COPY</li>
</ul>
<p>复制指令，从上下文目录中复制文件或者目录到容器里指定路径。</p>
<p>格式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">COPY</span> <span class="o">[</span>--chown<span class="o">=</span>&lt;user&gt;:&lt;group&gt;<span class="o">]</span> &lt;源路径1&gt;...  &lt;目标路径&gt;<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">COPY</span> <span class="o">[</span>--chown<span class="o">=</span>&lt;user&gt;:&lt;group&gt;<span class="o">]</span> <span class="o">[</span><span class="s2">&#34;&lt;源路径1&gt;&#34;</span>,...  <span class="s2">&#34;&lt;目标路径&gt;&#34;</span><span class="o">]</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><strong><code>[--chown=&lt;user&gt;:&lt;group&gt;]</code></strong>：可选参数，用户改变复制到容器内文件的拥有者和属组。</p>
<p><strong><code>&lt;源路径&gt;</code></strong>：源文件或者源目录，这里可以是通配符表达式，其通配符规则要满足 Go 的 filepath.Match 规则。例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">COPY</span> hom* /mydir/<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">COPY</span> hom?.txt /mydir/<span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><strong><code>&lt;目标路径&gt;</code></strong>：容器内的指定路径，该路径不用事先建好，路径不存在的话，会自动创建。</p>
</div>
        </div>
    </div>
<p>我的思路和正常的搭建方式一样,安装 nginx 之后再把写好的静态文件复制到web根目录就行, 但是用 docker 的效率高很多.</p>
<p>但是如果不用 docker 的话, 我至少要多花半个小时的时间去配置一个虚拟机, 配置软件源 安装 nginx 什么的, 花的时间就更多了, 而现在我只需要写一个脚本就能一键部署, 而且还能保存为镜像分享给别人,一劳永逸~</p>
<p>好了, 话不多说, 开始构建镜像</p>
<p>使用 <code>docker build</code> 命令通过目录下的 <code>dockerfile</code> 文件构建一个镜像,</p>
<p><code>-t</code> 的属性值是指 <strong><code>&lt;镜像名称:镜像标签&gt;</code></strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker build -t webtest:latest .
</span></span></code></pre></td></tr></table>
</div>
</div><p>注意了, 我在最后面还加了一个 <code>.</code> , 这个叫做上写文路径, 也是指相对路径</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>什么叫上下文路径?<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">上下文路径，是指 docker 在构建镜像，有时候想要使用到本机的文件（比如复制），docker build 命令得知这个路径后，会将路径下的所有内容打包。</div>
        </div>
    </div>
<p>然后我们查看一下镜像列表</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker images
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>很明显,我们可以看到我们刚刚创建的镜像, 镜像 ID 是 <code>9acd8c30bd5b</code>.</p>
<p>那么接下来把它部署到容器里~ 用 <code>-p</code> 来指定端口绑定 <strong><code>&lt;外部端口:内部端口&gt;</code></strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo docker run -p 8080:80 -d 9acd8c30bd5b
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在我们已经把容器的 80 端口映射到了宿主机的 8080 端口~</p>
<p>然后访问我们的本地 IP + 8080 就可以访问到那个页面了, 我这里用 <code>127.0.0.1:8080</code> 访问</p>
<p></p>
<p>成功访问!</p>
<p>这样一来,快速部署 nginx 就完成了!</p>
<h1 id="结语">结语</h1>
<p>经过对 docker 初学习和初体验, 我也浅尝到了它的高效率和便捷性, 收获还是比较多的.</p>
<p>但目前还是一个入门的阶段,更多高级应用方法还等着去探索~</p>
<p>诶? 你问我难不难? QwQ ~</p>
<p>对 Linux 熟悉的人来玩这个没几天应该就能玩会了, 不过要做到深入的了解还是需要时间的.</p>
<p>那 就这样吧</p>]]></description>
</item>
<item>
    <title>一天刷完《Linux网络操作系统应用基础教程》这本书</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/%E4%B8%80%E5%A4%A9%E5%88%B7%E5%AE%8Clinux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%94%E7%94%A8%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E8%BF%99%E6%9C%AC%E4%B9%A6/</link>
    <pubDate>Fri, 30 Sep 2022 19:25:48 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/%E4%B8%80%E5%A4%A9%E5%88%B7%E5%AE%8Clinux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%BA%94%E7%94%A8%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E8%BF%99%E6%9C%AC%E4%B9%A6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/photo_2022-09-30_20-14-56.jpg" referrerpolicy="no-referrer">
            </div><h1 id="序">序</h1>
<p>多日不见，甚是想念。</p>
<p>这段时间开学了，忙了一阵， 好久没更新博客了。</p>
<p>教科书当中看到了这么一本书（上图），叫做《Linux网络操作系统应用基础教程》。第一眼感觉封面挺好看的，这种简约配色显得这本书有高级感&hellip;然而，翻了几页看了，发现这是一本基础书籍。</p>
<p>对于一个用了两年 Arch 又不喜欢看书的人来说，这本书里的内容学起来应该会很快吧。</p>
<p>抱着试试看的态度，我想一天肝完这本书。</p>
<h1 id="全书目录">全书目录</h1>
<p>首先来看一下目录， 差点笑出声。</p>
<p>很明显，这确实是一些基础内容。其中很大部分在两年 Arch 使用经验中也接触过。</p>
<p></p>
<p></p>
<p></p>
<p>看起来都是一些概念+基础+实践操作</p>
<h1 id="概念内容">概念内容</h1>
<p>大概是项目一到项目二的 2.1 的内容，讲了 Linux 的案例、历史、以及流行的发行版。</p>
<p>书中居然没有 Arch, 差评。</p>
<p>但是也描述了 Linux 可以用来运行各种服务，比如 DNS（<a href="https://zh.wikipedia.org/zh-cn/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener noreffer ">Domain Name System</a>）服务、Web 服务器（Apache Nginx 这些提供基于HTTP协议的网页服务的）、基于 SMTP 协议的邮件服务器、以及 FTP 协议的文件传输服务器、基于 Samba 协议的文件共享服务器、<a href="https://zh.wikipedia.org/zh-ctiaoguo%B8%BB%E6%9C%BA%E8%AE%BE%E7%BD%AE%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener noreffer ">DHCP</a> 服务器 还有 VPN 服务器。</p>
<p>总之就是讲了 Linux 能干啥、Linux 的优点等， 这些可以通过搜索引擎查到，不多赘述。</p>
<h1 id="实操性内容">实操性内容</h1>
<p>往后都是一些操作性的内容，比如 Linux 的安装和搭建各种服务等</p>
<h2 id="安装-linux-操作系统">安装 Linux 操作系统</h2>
<p>书中讲用 VMware 装一个 CentOS 虚拟机。</p>
<p>高中的时候就会了，跳过。</p>
<h2 id="linux-基础操作">Linux 基础操作</h2>
<p>关于基础操作方面，我在初中的时候就写过一丢丢<a href="https://weepingdogel.github.io/posts/linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/" target="_blank" rel="noopener noreffer ">基础命令的笔记</a></p>
<p>书里也介绍了两种打开终端的方式，一个是在图形界面打开终端，另一种是按 <code>Ctrl</code> + <code>Alt</code> + <code>(F1 ~F6)</code> 来切换 tty。</p>
<p>然后是命令，大部分是加了 <code>-h</code> 参数以后的中文翻译，对于英语不太好的人来说，需要的时候翻阅一下也是一件美事。</p>
<p>另外我需要补充一些初中发的那篇文章当中没有写到的一些命令。</p>
<h3 id="cat">cat</h3>
<p>输出一个文件的内容，书中写的用法是</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cat [选项] [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>但我们一般的用法是</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cat [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个没什么好说的，也是常用的，但是遇到太长的文本就不太好了。</p>
<h3 id="less-和-more">less 和 more</h3>
<p>我几乎没见过有人用 more， 命令的使用方式都是一样的，但是效果可能不同吧。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">more [选项] [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">less [选项] [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>一般来说我们都不加什么选项的&hellip;</p>
<h3 id="head-和-tail">head 和 tail</h3>
<p>这个也没啥好说的，参数用法都一样，不过<del>前者看头后者看屁股</del>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">head [option] [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">tail [option] [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>参数选项</p>
<ul>
<li>-n num 显示指定文件的末尾 num 行</li>
<li>-c num 显示指定文件的末尾 num 个字符。</li>
</ul>
<h3 id="rmdir">rmdir</h3>
<p>用来删除目录，用这个的话，删除的目录必须是空的。</p>
<p>否则会报错，和 <code>mkdir</code> 一样，可以加 <code>-p</code> 来进行递归删除。</p>
<p>递归是什么意思？就是一级一级往下删。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">rmdir [option] [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>然而我平时不喜欢用这个，我喜欢用 <code>rm -r</code> 或者 <code>rm -rfv</code> 。</p>
<h3 id="touch">touch</h3>
<p>touch 命令可以生成一个普通文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">touch [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="grep">grep</h3>
<p>这个用来查看文件中包含指定字符串的行，常用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">grep [选项] [要查找的字符串] [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="tar">tar</h3>
<p>这个 tar 我平时就用来解压。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">tar xvf [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>然而这是个打包命令， 相当于压缩文档。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">tar [选项] [档案文件] [文件列表]
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>-c 生成档案文件</li>
<li>-v 列出归档文件解档的详细过程</li>
<li>-f 指定档案文件名称</li>
<li>-r 将文件追加到档案文件末尾</li>
<li>-z 以 gzip 格式压缩或解压</li>
<li>-j 以 bzip2 格式压缩或解压</li>
<li>-d 比较档案与当前目录中的文件</li>
<li>-x 解开档案文件</li>
</ul>
<p>可以用 <code>man</code> 来查看 <code>tar</code> 的更多信息。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">man tar
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="rpm">rpm</h3>
<p>rpm 系发行版的离线软件包安装器。至少我是这么理解的。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">rpm [选项] [软件包名字]
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个软件包名字是指一个文件名哦， 一些 <code>.rpm</code> 后缀结尾的文件，就是 rpm 系的软件包。</p>
<p>安装好像是这样的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">rpm -i [软件包名字]
</span></span></code></pre></td></tr></table>
</div>
</div><p>其他的参数</p>
<ul>
<li>-v 安装过程显示详细信息</li>
<li>-h 安装过程中显示<code>#</code>号进度条</li>
<li>-e 删除软件包</li>
<li>-q 查看软件包是否已经安装</li>
</ul>
<p>也可以通过 <code>man</code> 来阅读手册</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">man rpm
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在都是直接用 <code>yum</code> 或者 <code>dnf</code> 这种包管理器了，使用远程仓库来安装和管理软件包。</p>
<h2 id="文档编辑">文档编辑</h2>
<p>至于文档编辑，就需要用 <code>vi</code> 或者 <code>vim</code>。</p>
<p>这个也是常有的事</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">vim [文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>引用一个<a href="https://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener noreffer ">菜鸟教程的链接吧</a></p>
<p>我平常就用个 <code>i</code> 来编辑文档， <code>ESC</code> 来退出编辑模式， <code>:w</code> 保存， <code>:q</code> 来退出。</p>
<p>有时候要加个 <code>!</code> 强制执行。</p>
<p>保存退出是 <code>:wq</code></p>
<p>如果有其他需求我会用 <code>man</code> 来看文档。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">man vim
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="用户和组的管理">用户和组的管理</h2>
<p>安装 Arch 的时候要干的事，就是用 <code>useradd</code> 添加用户。</p>
<p>桌面系统往往不使用 root 用户， 会添加一个或多个普通用户。</p>
<p>有些多人协作部署的服务器也会利用 Linux 多用户的特性。</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>GNU/Linux 系统中的每一个文件都从属一个用户（属主）和一个用户组（属组）。另外，还有三种类型的访问权限：读（read）、写（write）、运行（execute）。我们可以针对文件的属主、属组、而设置相应的访问权限。</p>
<p>—— 摘自&amp;&amp;详见 <a href="https://wiki.archlinux.org/title/Users_and_groups_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29#%E6%9D%83%E9%99%90%E4%B8%8E%E5%B1%9E%E4%B8%BB" target="_blank" rel="noopener noreffer ">ArchWiki</a></p>
</div>
        </div>
    </div>
<h3 id="useradd">useradd</h3>
<p>这个命令用来添加用户</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">useradd [选项] 用户名
</span></span></code></pre></td></tr></table>
</div>
</div><p>先把参数用法贴上</p>
<ul>
<li><code>-m</code> / <code>--create-home</code> 创建用户主目录<code>/home/[用户名]</code>；在自己的主目录内，即使不是root用户也可以读写文件、安装程序等等。</li>
<li><code>-G</code> / <code>--groups</code> 用户要加入的附加组列表；使用逗号分隔多个组，不要添加空格；如果不设置，用户仅仅加入初始组。</li>
<li><code>-s</code> / <code>--shell</code> 用户默认登录shell的路径；启动过程结束后，默认启动的登录shell在此处设定；请确保使用的shell已经安装，默认是 Bash。</li>
</ul>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>使用 <code>useradd --defaults</code> 可以查看 shell 的默认值。默认是 Bash。使用 <code>-s</code> / <code>--shell</code> 选项可以设置其他值。<code>/etc/shells</code> 记录了可以使用的登录 shell。</p>
<p>—— 摘自 <a href="https://wiki.archlinux.org/title/Users_and_groups_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer ">ArchWiki</a></p>
</div>
        </div>
    </div>
<p>比如我要在一个新机器上创建一个用户，用户名为 <code>weepingdogel</code> 且需要创建用户主目录 <code>/home/weepingdogel</code>， <strong>而且加入到 <code>wheel</code> 这个组</strong> ,默认 <strong>shell</strong> 设置为 <strong>Bash</strong> 。</p>
<p>我就会执行这条命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">useradd -G wheel -m -s /bin/bash weepingdogel
</span></span></code></pre></td></tr></table>
</div>
</div><p>那如果我要 <code>zsh</code> 呢？</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">useradd -G wheel -m -s /bin/bash weepingdogel
</span></span></code></pre></td></tr></table>
</div>
</div><p>就像这样咯～</p>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw" aria-hidden="true"></i>警告<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ol>
<li>新增用户不能与已存在用户的用户名相同;</li>
<li>用户创建后，用户名或组需被 <code>/etc/sudoers</code> 文件包含，否则无法使用 <code>sudo</code> 调取 root 权限;</li>
<li><del>别瞎j8乱创建一堆没卵用的用户</del></li>
<li>请确保使用的shell已经安装，默认是 Bash。 没装上的 shell 没法用，用户创建不了。</li>
</ol>
</div>
        </div>
    </div>
<h3 id="userdel">userdel</h3>
<p>这个命令用来删除用户</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">userdel [选项] 用户名
</span></span></code></pre></td></tr></table>
</div>
</div><p>加上 <code>-r</code> 选项可以一并删除用户主目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">userdel -r 用户名
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw" aria-hidden="true"></i>警告<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><strong><del>别瞎j8乱删用户</del></strong></div>
        </div>
    </div>
<p>没什么好说的，详见 <a href="https://linux.die.net/man/8/userdel" target="_blank" rel="noopener noreffer ">man userdel</a> 。</p>
<h3 id="groups">groups</h3>
<p>这个命令用来查看用户属于哪些组。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">groups [用户名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>当然我们也可以通过查看 <code>/etc/group</code> 来查看所有组。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cat /etc/group
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="id">id</h3>
<p>这个命令可以显示用户的一些额外信息，比如 <code>UID</code> 、 <code>GID</code> 等等。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">id [用户名]
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="groupadd-和-groupdel">groupadd 和 groupdel</h3>
<p>前者是创建新组，后者是删除一个组。</p>
<p>创建一个新组：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">groupadd [组名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>删除一个用户组：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">groupdel [组名]
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw" aria-hidden="true"></i>警告<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><strong><del>别瞎j8乱删组</del></strong></div>
        </div>
    </div>
<h3 id="groupmod">groupmod</h3>
<p>往往用来更改用户所属组的名字，但不变更 <code>GID</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">groupmod -n [新名字] [旧名字]
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="gpasswd">gpasswd</h3>
<p>往往用来变更用户所属于哪个组的情况。</p>
<p>比如将某个用户添加到某个组：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">gpasswd -a [用户名] [组名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>或者将用户从某个组中移除：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">gpasswd -d [用户名] [组名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>其他的用法也可以参考 <a href="https://linux.die.net/man/1/gpasswd" target="_blank" rel="noopener noreffer ">man gpasswd</a></p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">如果用户已经处于登录状态，必须重新登录才能更改生效。</div>
        </div>
    </div>
<h3 id="一些相关文件列表">一些相关文件列表</h3>
<ul>
<li><code>/etc/shadow</code> 	保存用户安全信息</li>
<li><code>/etc/passwd</code> 	用户账户信息</li>
<li><code>/etc/gshadow</code> 	保存组账号的安全信息</li>
<li><code>/etc/group</code> 	    定义用户所属的组</li>
<li><code>/etc/sudoers</code> 	可以运行 sudo 的用户</li>
<li><code>/home/* </code>	    主目录</li>
</ul>
<p>要好好记住它们。</p>
<h2 id="基本磁盘管理">基本磁盘管理</h2>
<p>当然也涉及到了磁盘的管理，这个其实在安装 Arch 的时候就能接触不少。</p>
<h3 id="查看分区情况">查看分区情况</h3>
<p>当 Linux 识别到磁盘，就会将其分配为一个块设备， 在系统里是个文件，比如 <code>/dev/sda</code>、<code>/dev/nvme0n1</code> 或 <code>/dev/mmcblk0</code>。可以使用 <code>lsblk</code> 或者 <code>fdisk</code> 查看：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">fdisk -l
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">不同的设备当中，磁盘的块设备表示也不同，比如使用 SATA 接口的硬盘会被显示为 <code>/dev/sd*X</code>， 而使用 NVME 硬盘则会显示为 <code>/dev/nvme*n*</code></div>
        </div>
    </div>
<h3 id="创建编辑分区">创建编辑分区</h3>
<p>你可以去搜索引擎找 <code>fdisk</code> 的说明，按照它来创建、编辑分区，可以用简单的 <code>cfdisk</code>。</p>
<p></p>
<p>甚至可以用一些发行版自带的图形化分区工具。</p>
<h3 id="格式化">格式化</h3>
<p>分区创建好以后，就要选择合适的文件系统来进行格式化。</p>
<p>文件系统有哪些？具体可以参考<a href="https://wiki.archlinux.org/title/File_systems_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer ">这个页面</a></p>
<p>Linux 往往用 EXT4</p>
<p>使用 mkfs</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkfs.ext4 /dev/partition
</span></span></code></pre></td></tr></table>
</div>
</div><p>挂载分区</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mount [被挂载的分区] [要挂载到的地方]
</span></span></code></pre></td></tr></table>
</div>
</div><p>当然也可以写 <code>/etc/fstab</code> 来进行自动挂载，详情可以看<a href="https://wiki.archlinux.org/title/Fstab_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29#%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD" target="_blank" rel="noopener noreffer ">这里</a></p>
<h2 id="资源共享服务">资源共享服务</h2>
<h3 id="ftp">FTP</h3>
<p>搭建 FTP 服务器</p>
<p>首先使用包管理器安装 <code>vsftpd</code></p>
<p>deb</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt install vsftpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>centos</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo yum install vsftpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>通过编辑 <code>/etc/vsftpd.conf</code> 来配置</p>
<p>比如允许匿名登录，以及允许无密码登录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">anonymous_enable=YES
</span></span><span class="line"><span class="cl">no_anon_password=YES
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后通过 systemd 启动</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo systemctl start vsftpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>通过客户端连接</p>
<p></p>
<p>参考<a href="https://wiki.archlinux.org/title/Very_Secure_FTP_Daemon_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29#%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreffer ">Arch Wiki</a>， 可根据实际情况调整配置。</p>
<h3 id="samba">Samba</h3>
<p>不搞这玩意，太危险了。</p>
<h2 id="dhcp-服务器">DHCP 服务器</h2>
<p>直接安装 dhcpd</p>
<p>deb</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt install dhcpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>centos</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">yum install -y dhcpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>pacman</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -S dhcpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>写配置文件 <code>/etc/dhcpd.conf</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># No DHCP service in DMZ network (192.168.2.0/24)
</span></span><span class="line"><span class="cl">subnet 192.168.2.0 netmask 255.255.255.0 
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后通过 systemd 来启动服务</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo systemctl start dhcpd4
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="dns-服务器">DNS 服务器</h2>
<p>懒得搞了，不难</p>
<p>参考 <a href="https://wiki.archlinux.org/title/BIND_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer ">https://wiki.archlinux.org/title/BIND_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
<h2 id="apache-服务器">Apache 服务器</h2>
<p>这个简单</p>
<p>deb</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt install apache2
</span></span></code></pre></td></tr></table>
</div>
</div><p>pacman</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -S apache
</span></span></code></pre></td></tr></table>
</div>
</div><p>rpm</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo yum install -y apache2
</span></span></code></pre></td></tr></table>
</div>
</div><p>直接启动服务</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo systemctl start httpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后访问 <code>http://127.0.0.1:80</code>就行。</p>
<h1 id="总结">总结</h1>
<p><del>什么垃圾书！</del></p>
<p>很简单，但是太老了，跟不上时代了。</p>
<p>还是自己去网上找资料来得快。</p>]]></description>
</item>
<item>
    <title>试玩 IPFS 协议——Web3.0时代的先驱者。</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/%E8%AF%95%E7%8E%A9ipfs/</link>
    <pubDate>Fri, 12 Aug 2022 09:48:53 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/%E8%AF%95%E7%8E%A9ipfs/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://upload.wikimedia.org/wikipedia/commons/1/18/Ipfs-logo-1024-ice-text.png" referrerpolicy="no-referrer">
            </div><p><del>这个 LOGO 真好看。</del></p>
<h1 id="ipfs-是什么啊">IPFS 是什么啊？</h1>
<p><strong>IPFS(InterPlanetary File System)</strong>, 听名字一看好像是个文件系统？ 翻译过来是星际文件系统，听起来是不是很高级？</p>
<p>实际上它能实现的功能远比文件系统强大。</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>官方描述<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">IPFS is a collection of protocols, packages, and specifications that allow computers to send and receive data. Because of this, users can pick and choose which packages to install when using IPFS. And like shoe sizes, there is no one-size-fits-all solution. A developer building network applications will install a different set of tools than someone who wants to store files on IPFS. Pick the one that best suits what you&rsquo;re here to do.</div>
        </div>
    </div>
<p>如果你康得懂英文就很容易明白它是啥了，如果你康不懂那就来翻译一下。</p>
<blockquote>
<p>IPFS 是允许计算机发送和接收数据的协议、包和规范的集合。 因此，用户可以在使用 IPFS 时选择要安装的软件包。 和鞋码一样，没有一种万能的解决方案。 构建网络应用程序的开发人员将安装一组不同的工具，而不是想要在 IPFS 上存储文件的人。 选择最适合您在这里做的事情。
（Google Translate）</p>
</blockquote>
<p>其实它的原理和BT差不多，具有去中心化的性质，这可能会加速从 Web2.0 时代到 Web3.0 时代的过程。</p>
<p>它可能会带头颠覆之前 Web2.0 时代所有的开发逻辑。因为这是比 http 还底层的协议，它可不仅仅是让你能够通过 BT 下载好康的那么简单，而且它可以让一切信息都用去中心化的方式传输。</p>
<p>因此我对它挺有兴趣的，今天就来玩一下。</p>
<h1 id="我能怎么玩">我能怎么玩？</h1>
<p>对于目前这么菜的我来说，可以先试试官方文档写好了的玩法， 233。</p>
<h2 id="安装">安装</h2>
<p>在一切开始之前我得先把 IPFS 安装上去。</p>
<p>我们可以选择多种安装方案。</p>
<p>阅读 <a href="ipns://docs.ipfs.tech/install/" target="_blank" rel="noopener noreffer ">IPFS 官方文档的 Install 部分</a></p>
<p></p>
<p>桌面用户（如 Windows、Mac、Linux）可以使用 IPFS Desktop，可以通过阅读官方文档中的教程进行安装和配置。 同样 Linux 也可以使用</p>
<p>然而 Arch 需要通过 aur 才能安装 <code>ipfs-desktop</code> 这个包，因此我决定安装命令行版本的 ipfs。</p>
<p>根据<a href="ipns://docs.ipfs.tech/install/command-line/#system-requirements" target="_blank" rel="noopener noreffer ">官方文档</a>的教程</p>
<p>我们需要用 <code>wget</code> 下载一个叫 <code>kubo</code> 的包：</p>
<blockquote>
<ol>
<li>Download the Linux binary from dist.ipfs.tech (opens new window).</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget https://dist.ipfs.tech/kubo/v0.14.0/kubo_v0.14.0_linux-amd64.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div></blockquote>
<p>然后要进行解压、复制文件等一系列繁琐的操作，然而咱用 Arch 的就别吃这一套了。因为咱官方的仓库就有这个包</p>
<p>打开你的终端，用 <code>pacman</code> 找一下这个包:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -Ss kubo
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来你的终端就会返回类似于这样的信息:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">community/kubo 0.14.0-1
</span></span><span class="line"><span class="cl">    A peer-to-peer hypermedia distribution protocol
</span></span></code></pre></td></tr></table>
</div>
</div><p>装它就完事了！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -S kubo
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来我们就可以愉快的使用 ipfs 了，哈哈！ <del>这就是咱 Arch 用户的优越性！！！</del></p>
<p>然后我们开始部署 ipfs，将自己的机器作为 ipfs 的节点～！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ipfs init
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ipfs daemon
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>接下来我们用 Brave 浏览器打开 WebUI : http://127.0.0.1:5001/webui</p>
<p>然后你就能看到这个界面了:
</p>
<p>是不是超简单！</p>
<p>另外，推荐使用 <a href="https://brave.com/" target="_blank" rel="noopener noreffer ">brave 浏览器</a>来访问 IPFS 服务，毕竟它原生支持 IPFS 网关！</p>
<h2 id="文件传输">文件传输</h2>
<p>在当前 Web 2.0 的模式下，我们传输文件必须经过一些大公司的商业网盘，传输速度和存储空间都会得到一定程度的限制。</p>
<p>而使用 IPFS 传输文件则不会受这些限制，除此之外还能规避很大一部分的审查。</p>
<p>使用 IPFS 传输文件也非常简单，只需要使用 WebUI 进行操作即可。</p>
<p>首先点击 &ldquo;文件&rdquo;：</p>
<p></p>
<p>再点击右上角的导入：</p>
<p></p>
<p>发送文件者可以点击 <code>文件</code> 或 <code>文件夹</code> 来导入要分享出去的文件，这时浏览器会自动弹出系统或DE自带的目录选择器，找到需要分享的文件即可。</p>
<p>然后点击对应文件右边的三个点：</p>
<p></p>
<p>选择<code>复制 CID</code>，然后将 CID 发给接受者。</p>
<p>而接受者则点击<code>来自 IPFS 路径</code>。</p>
<p></p>
<p>将 CID 复制粘贴进去就能将它导入到 WebUI 的文件列表了。</p>
<p>图形化操作，非常简单。</p>
<p>我随便找来几个文件测试了一下，在节点距离较近的情况下传输速度非常惊人。</p>
<p></p>
<p>而在远距离的情况下，速度略有逊色，但很稳定。至少比某些商业网盘的速度要快多了，而且这是免费的。</p>
<p></p>
<h2 id="网页">网页</h2>
<p>IPFS 也是可以用来展示网页的，而且非常简单！</p>
<p>这里是个简单的玩法。</p>
<p>首先编写一个 HTML 文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Hello! IPFS!<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;font-size: 100px;&#34;</span><span class="p">&gt;</span>Hello! IPFS!!<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>保存，用和文件传输相同的方法把 <code>index.html</code> 导入自己的 IPFS 节点。</p>
<p>接下来同样点击文件最右边的三个点，与之前不同的是，这次我们要点击的是第一个按钮，<code>分享链接</code>。</p>
<p></p>
<p></p>
<p>然后用 Brave 浏览器直接访问链接。</p>
<p></p>
<p>页面成功打开，这时候我们发现地址栏开头写的协议既不是 HTTP 也不是 HTTPS，而是 <code>ipfs://</code></p>
<p>由此可见，这个网页是通过 IPFS 协议打开的：</p>
<p></p>
<p>像这样点对点协议建立的网站是可以有效规避审查的，内容也会更加丰富。</p>
<h1 id="对未来有什么影响">对未来有什么影响？</h1>
<p>就目前来看， IPFS 节点和用户都比较少，还处于一个冷门阶段。</p>
<p>但是通过我这么菜的试玩，可以看出在文件传输和网页搭建这两个方面 IPFS 是非常优秀的。</p>
<p>唯一想说的是，</p>
<p>在目前全世界节点不足一千的情况下，下载速度最慢最慢都能稳定在1MB/s左右，而某商业网盘运营十几年下载速度却只有9kb/s。</p>
<p>实在是想不到别的理由来拒绝 IPFS 的怀抱了。</p>
<p>也许有一天 IPFS 能火起来，节点数量能增加到 70 亿，那个时候，资源的获取和分享将会更加自由和高效吧。</p>
<p>除此之外，如果用 IPFS 来干一些更能满足需求的事情，一切去中心化，将会对 Web 2.0 时代的巨头们造成一次沉重的打击。</p>
<p>还在想什么呢，赶紧在本地搭一个 IPFS 节点试试看？也许你会想用 IPFS 整一些有意思的活？在评论区留言吧。</p>
<h1 id="参考链接">参考链接</h1>
<ul>
<li><a href="https://zh.wikipedia.org/zh-cn/%E6%98%9F%E9%99%85%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener noreffer ">星际文件系统 - 维基百科，自由的百科全书</a></li>
<li><a href="https://docs.ipfs.io" target="_blank" rel="noopener noreffer ">IPFS Documentation | IPFS Docs</a></li>
<li><a href="https://wiki.archlinux.org/title/InterPlanetary_File_System" target="_blank" rel="noopener noreffer ">InterPlanetary File System - ArchWiki</a></li>
</ul>]]></description>
</item>
<item>
    <title>利用 rsync 给笔记本安装 Gentoo</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/%E5%88%A9%E7%94%A8rsync%E7%BB%99%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%AE%89%E8%A3%85gentoo/</link>
    <pubDate>Sat, 11 Jun 2022 08:00:00 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/%E5%88%A9%E7%94%A8rsync%E7%BB%99%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%AE%89%E8%A3%85gentoo/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/95/wallhaven-955vx1.jpg" referrerpolicy="no-referrer">
            </div><h1 id="序">序</h1>
<p>半年不见，甚是想念～</p>
<p>我有一台性能羸弱不堪的 ChromeBook，</p>
<p>2GB 的 RAM 和一颗 只有 2.6 GHz 的双核老低压 U 对于现在的流行发行版来说已经完全不够用了，目前跑个 Mint 也是 CPU 经常性的 100% 占用。</p>
<p></p>
<p>于是我想着能不能给他装个 Gentoo？</p>
<p>然而就这乌龟U，估计得连续开机一周才能编译完吧&hellip;</p>
<p>嗯，不过我想试试能不能通过台式机编译完 Gentoo 再通过 rsync 给它传输到 ChromeBook。</p>
<p></p>
<p>论编译，我感觉哪怕是在 2022 年 E3 神教也不会让我失望吧。</p>
<p>起码比这颗小赛扬快多了。</p>
<h1 id="准备工作">准备工作</h1>
<p>废话不多说，直接开搞。</p>
<p>但我们要准备好这些东西</p>
<ul>
<li><a href="https://wiki.gentoo.org/wiki/Main_Page" target="_blank" rel="noopener noreffer ">Gentoo Wiki</a>
<ul>
<li>安装过程中需要用到官方的指引和文档，必备</li>
</ul>
</li>
<li>翻译工具
<ul>
<li>由于 Gentoo 的用户群体较小，文档汉化可能不是很全面，因此可以借助翻译工具，这里推荐 <a href="https://www.deepl.com/zh/translator" target="_blank" rel="noopener noreffer ">deepl</a></li>
</ul>
</li>
<li>一个 U 盘
<ul>
<li>用来装一个临时的 Linux 作为笔记本的 rsync 接收端。</li>
<li>这个没什么好说的，最好支持 USB 3.0～</li>
</ul>
</li>
<li>下载好 Gentoo 官方提供的 stage 包
<ul>
<li>这个会在下文中写出过程</li>
</ul>
</li>
<li>一个能够操作的 Linux 终端</li>
</ul>
<h1 id="下载-stage-压缩包">下载 stage 压缩包</h1>
<p>由于我们的安装手段比较特殊，因此可以直接跳到官方 wiki 的这一步</p>
<p>按照官方 wiki 给出的文档，我们进行以下操作:</p>
<p>首先开启 root</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel $ sudo -i
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来，你可以挂载一个分区到 <code>mnt</code> ，也可以直接创建文件夹，我这边空间很充足就直接空载操作了。</p>
<p>至于如何挂载？可以去参考 Arch Wiki。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # cd /mnt/gentoo
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后我们需要用 wget 下载 stage 包，打开<a href="https://www.gentoo.org/downloads/#other-arches" target="_blank" rel="noopener noreffer ">这个页面</a>，这里我们选择 stage3</p>
<p>因为我懒，喜欢用 systemd ， 可以根据需要选择。</p>
<p><strong>注意：右键 stage3 systemd ，复制链接</strong></p>
<p></p>
<p>将链接粘贴到终端上</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # wget https://bouncer.gentoo.org/fetch/root/all/releases/amd64/autobuilds/20220605T170549Z/stage3-amd64-systemd-20220605T170549Z.tar.xz
</span></span></code></pre></td></tr></table>
</div>
</div><p>等待下载。</p>
<p></p>
<p>下载完成之后可以进行一下文件校验，可以参考一下官方的<a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Stage/zh-cn" target="_blank" rel="noopener noreffer ">这个条目</a></p>
<p></p>
<p>一般情况下我这边不会损坏，所以我这里就不写出来了，接下来我们直接进入解压 stage 文件这一步。</p>
<h1 id="解压-stage-压缩包">解压 stage 压缩包</h1>
<p>我们使用 tar 来进行解压，这是官方 wiki 给出的命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root #tar xpvf stage3-*.tar.bz2 --xattrs-include=&#39;*.*&#39; --numeric-owner
</span></span></code></pre></td></tr></table>
</div>
</div><p>有些读者可能看不懂中间那一串，那一串其实是个通配符，不过这个通配符可能跟你下载到的文件不一样，因此我们将中间那段改成准确的文件名。</p>
<p>这一步操作很简单，只需要按一下 Tab 键即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # tar xpvf stage3-amd64-systemd-20220102T170545Z.tar.xz --xattrs-include=&#39;*.*&#39; --numeric-owner
</span></span></code></pre></td></tr></table>
</div>
</div><p>等待解压，一会儿就好，<del>除非你用 IDE 硬盘</del>。</p>
<p></p>
<h1 id="配置编译选项">配置编译选项</h1>
<p>这一步官方是这么解释的：</p>
<blockquote>
<p>为了优化Gentoo，可以设置一些影响Portage的变量，Gentoo官方支持包管理器。 所有这些变量可以设置为环境变量（使用export），但这不是永久的。 为了保留设置，Portage读入/etc/portage/make.conf文件 ，一个用于Portage的配置文件。</p>
<blockquote>
<p>附注</p>
<p>所有可能的变量的注释列表可以在 /mnt/gentoo/usr/share/portage/config/make.conf.example中找到。要成功安装Gentoo，只需要设置下面提到的变量。</p>
</blockquote>
<p>启动编辑器（在本指南中，我们使用 nano）来更改我们将在下面讨论的优化变量。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">root #nano -w /mnt/gentoo/etc/portage/make.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>从make.conf.example文件中可以明显看出文件的结构：注释行以 &ldquo;#&ldquo;开头，其他行使用 VARIABLE=&ldquo;content 语法定义变量。 接下来选取其中的几个进行讨论。</p>
</blockquote>
<p>这里我们用 vim 写一下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # vim /mnt/gentoo/etc/portage/make.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>将里面的 <code>COMMON_FLAGS=</code> 加入 <code>-march=silvermont</code> 的选项，这样就能让编译器给 <code>silvermont</code> 架构的垃圾 CPU 进行优化了。</p>
<p>完整文件如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1"># These settings were set by the catalyst build script that automatically</span>
</span></span><span class="line"><span class="cl"><span class="c1"># built this stage.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Please consult /usr/share/portage/config/make.conf.example for a more</span>
</span></span><span class="line"><span class="cl"><span class="c1"># detailed example.</span>
</span></span><span class="line"><span class="cl"><span class="n">COMMON_FLAGS</span><span class="o">=</span><span class="s2">&#34;-march=silvermont -O2 -pipe&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">CFLAGS</span><span class="o">=</span><span class="s2">&#34;${COMMON_FLAGS}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">CXXFLAGS</span><span class="o">=</span><span class="s2">&#34;${COMMON_FLAGS}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">FCFLAGS</span><span class="o">=</span><span class="s2">&#34;${COMMON_FLAGS}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">FFLAGS</span><span class="o">=</span><span class="s2">&#34;${COMMON_FLAGS}&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># NOTE: This stage was built with the bindist Use flag enabled</span>
</span></span><span class="line"><span class="cl"><span class="n">PORTDIR</span><span class="o">=</span><span class="s2">&#34;/var/db/repos/gentoo&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">DISTDIR</span><span class="o">=</span><span class="s2">&#34;/var/cache/distfiles&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">PKGDIR</span><span class="o">=</span><span class="s2">&#34;/var/cache/binpkgs&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># This sets the language of build output to English.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Please keep this setting intact when reporting bugs.</span>
</span></span><span class="line"><span class="cl"><span class="n">LC_MESSAGES</span><span class="o">=</span><span class="n">C</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="安装-gentoo-基础系统">安装 Gentoo 基础系统</h1>
<p>上面已经完成了第一阶段的操作，可以开始安装基本系统了，诶嘿嘿。</p>
<p>接下来要做的是选择镜像源，我们可以参考 ustc mirror 给出的帮助文档：</p>
<ul>
<li><a href="https://mirrors.ustc.edu.cn/help/gentoo.html" target="_blank" rel="noopener noreffer ">Gentoo 源使用帮助 — USTC Mirror Help  文档</a></li>
<li><a href="https://mirrors.ustc.edu.cn/help/gentoo-portage.html" target="_blank" rel="noopener noreffer ">Gentoo Portage 源使用帮助 — USTC Mirror Help  文档</a></li>
</ul>
<p>直接按照 ustc 给出的帮助设置这两个源地址就好啦～</p>
<p></p>
<p></p>
<p>然后复制 DNS 信息</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # cp --dereference /etc/resolv.conf /mnt/gentoo/etc/
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="挂载必要的文件系统">挂载必要的文件系统</h2>
<p>这里要注意一下了，我这边要打好几条命令</p>
<p>Why？</p>
<p>官方的解释：</p>
<blockquote>
<p>稍等片刻，Linux 的根目录将变更到新的位置。为了确保新环境正常工作，需要确保一些文件系统可以正常使用。</p>
<p>需要提供的文件系统是：</p>
<ul>
<li>/proc/ 一个pseudo文件系统（看起来像是常规文件，事实上却是实时生成的），由Linux内核暴露的一些环境信息</li>
<li>/sys/ 一个pseudo文件系统，像要被取代的/proc/一样，比/proc/更加有结构</li>
<li>/dev/ 是一个包含全部设备文件的常规文件系统，一部分由Linux设备管理器（通常是udev）管理</li>
</ul>
<p>/proc/位置将要挂载到/mnt/gentoo/proc/，而其它的两个都是绑定挂载。字面上的意思是，例如/mnt/gentoo/sys/事实上就是/sys/（它只是同一个文件系统的第二个条目点），而/mnt/gentoo/proc/是（可以说是）文件系统的一个新的挂载。</p>
</blockquote>
<p>因此按顺序执行以下命令进行挂载：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # mount --types proc /proc /mnt/gentoo/proc
</span></span><span class="line"><span class="cl">root # mount --rbind /sys /mnt/gentoo/sys
</span></span><span class="line"><span class="cl">root # mount --make-rslave /mnt/gentoo/sys
</span></span><span class="line"><span class="cl">root # mount --rbind /dev /mnt/gentoo/dev
</span></span><span class="line"><span class="cl">root # mount --make-rslave /mnt/gentoo/dev 
</span></span></code></pre></td></tr></table>
</div>
</div><p>然而，这还没完</p>
<p></p>
<p>因此，接下来要加上这三条</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # test -L /dev/shm &amp;&amp; rm /dev/shm &amp;&amp; mkdir /dev/shm
</span></span><span class="line"><span class="cl">root # mount --types tmpfs --options nosuid,nodev,noexec shm /dev/shm 
</span></span><span class="line"><span class="cl">root # chmod 1777 /dev/shm
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="chroot--进入新环境">Chroot : 进入新环境</h2>
<p>当挂载好一切后，就可以 chroot 进去了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # chroot /mnt/gentoo /bin/bash 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root # source /etc/profile 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">root</span> <span class="c1"># export PS1=&#34;(chroot) ${PS1}&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来终端会变成这样</p>
<p></p>
<h2 id="挂载-boot-分区">挂载 boot 分区</h2>
<p>这一步我们直接略过，因为最终安装的设备不是本机，而是另一台笔记本。</p>
<p>之后我们再进行手动安装引导介质。</p>
<h2 id="从网站安装-gentoo-ebuild-数据库快照">从网站安装 Gentoo ebuild 数据库快照</h2>
<p>官方其实这个就相当于 Arch 里面的 <code>sudo pacman -Syyu</code></p>
<p>不多说，复制粘贴吧。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">root # emerge-webrsync
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<h2 id="选择配置文件">选择配置文件</h2>
<p><del>我怎么感觉像是在复制 wiki 的内容呢&hellip;</del></p>
<blockquote>
<p>配置文件是任何一个Gentoo系统的积木。它不仅指定USE、CFLAGS和其它重要变量的默认值，还会锁定系统的包版本范围。这些设定全是由Gentoo的Portage开发者们来维护。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># eselect profile list
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Available profile symlink targets:
</span></span><span class="line"><span class="cl">  [1]   default/linux/amd64/17.1 *
</span></span><span class="line"><span class="cl">  [2]   default/linux/amd64/17.1/desktop
</span></span><span class="line"><span class="cl">  [3]   default/linux/amd64/17.1/desktop/gnome
</span></span><span class="line"><span class="cl">  [4]   default/linux/amd64/17.1/desktop/kde
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后输入以下命令即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># eselect profile set [对应的数字]
</span></span></code></pre></td></tr></table>
</div>
</div><p>其实它会列出很多选项，我们需要选择含有 <code>desktop/system</code> 的版本</p>
<h2 id="设置时区">设置时区</h2>
<p>这里直接用 Arch 的方法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># ln -sf /usr/share/zoneinfo/Region（地区名）/City（城市名） /etc/localtime
</span></span></code></pre></td></tr></table>
</div>
</div><p>根据我的情况，我应该这样写：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后运行 hwclock 以生成 /etc/adjtime：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># hwclock --systohc
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="设置-use">设置 USE</h2>
<p>对于 Gentoo 这个系统来说， USE 标记是必备的，因此在编译之前，我们需要设置好全局 USE 标记</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># vim /etc/portage/make.conf
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">USE=&#34;alsa udev dbus icu systemd gles2 sound video intel -kde tiff x265&#34;
</span></span><span class="line"><span class="cl">VIDEO_CARDS=&#34;intel&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="更新-world-集合">更新 @world 集合</h2>
<p>其实就是跟 Arch 的“滚”差不多，但是它会是一个比较漫长的过程。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># emerge --ask --verbose --update --deep --newuse @world
</span></span></code></pre></td></tr></table>
</div>
</div><p>除此之外，在更改USE标记之后，这条命令也用来动态调整系统功能。</p>
<h2 id="配置-locale">配置 locale</h2>
<p>麻了，参考这个 <a href="https://wiki.archlinux.org/title/Installation_guide_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29#%E6%9C%AC%E5%9C%B0%E5%8C%96" target="_blank" rel="noopener noreffer ">Installation guide (简体中文) - ArchWiki</a></p>
<h1 id="配置内核">配置内核</h1>
<p>嗯哼，你以为我那么傻又编译八个小时？不！这次我选择用 bin 内核！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># emerge --ask sys-kernel/installkernel-systemd-boot
</span></span></code></pre></td></tr></table>
</div>
</div><p>节省不少时间呢。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># emerge --ask sys-kernel/gentoo-kernel-bin
</span></span></code></pre></td></tr></table>
</div>
</div><p>哎呀不想写了&hellip; 写了都是复制粘贴</p>
<p>自己看吧</p>
<p></p>
<h1 id="安装固件">安装固件</h1>
<blockquote>
<p>一些驱动需要先在系统上安装附加的固件才能工作。经常网络接口上会使用，特别是无线网络接口。此外，来自 AMD 、 NVidia 和 Intel 等供应商的现代视频芯片在使用开源驱动程序时，通常也需要外部固件文件。大多数固件都打包在 sys-kernel/linux-firmware 里</p>
</blockquote>
<p>大多数设备的驱动都依赖于 <code>linux-firmware</code> 这个包</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># emerge --ask sys-kernel/linux-firmware
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="配置-fstab">配置 fstab</h1>
<p>这一步操作是在系统启动的时候，让内核认识分区</p>
<p>但是 Gentoo 好像不能用 <code>genfstab</code></p>
<p>只能手写了</p>
<p>先在笔记本获取 UUID</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ls /dev/disk/by-uuid/ -l
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来将 <code>/</code> 分区对应分区的 <code>UUID</code> 按如下格式写在 <code>/etc/fstab</code> 这个文件里面</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># /dev/mmcblk1p2
</span></span><span class="line"><span class="cl">UUID=xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx	/         	xfs       	default,rw,relatime	0 1
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="通过-rsync-将系统灌到笔记本上">通过 rsync 将系统灌到笔记本上</h1>
<p>这个时候需要给笔记本插入一个 ArchISO 的 U 盘，启动到 ISO，<strong>并连接 WIFI 和 开启 ssh 服务。</strong></p>
<p>接下来将其原有的分区格式化</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># mkfs.btrfs /dev/mmcblk1p2 -f
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后挂载它，并将刚刚做好的文件用 rsync 灌进去</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># mount /dev/mmcblk1p2 /mnt 
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来笔记本这一端开启 ssh 服务</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># systemctl start sshd
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后使用 rsync 将编译好的文件传输至笔记本的系统分区。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># rsync -aAXHv -P -vi --exclude={&#34;/dev/*&#34;,&#34;/proc/*&#34;,&#34;/sys/*&#34;,&#34;/tmp/*&#34;,&#34;/run/*&#34;,&#34;/mnt/*&#34;,&#34;/media/*&#34;,&#34;/lost+found&#34;} ./mnt/gentoo/. root@192.168.0.109:/mnt
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="在笔记本安装启动引导器">在笔记本安装启动引导器</h1>
<p>这个也是很熟悉的操作了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1"># grub-install --target=x86_64-efi --efi-directory=/dev/mmcblk1p1 --bootloader-id=GRUB</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="结语">结语</h1>
<p>通过一系列的折腾，这台老本子终于能发挥其最大的性能了。</p>
<p>由此看来通过 rsync 复制 Linux 发行版系统文件到其他的设备看起来是可行的。</p>
<p>不过也折腾了挺久的</p>
<h1 id="参考链接">参考链接</h1>
<ul>
<li><a href="https://wiki.gentoo.org/wiki/Main_Page" target="_blank" rel="noopener noreffer ">Gentoo Wiki</a></li>
<li><a href="https://www.gentoo.org/downloads/#other-arches" target="_blank" rel="noopener noreffer ">Downloads â Gentoo Linux</a></li>
<li><a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Stage/zh-cn" target="_blank" rel="noopener noreffer ">安装Gentoo安装文件 - Gentoo Wiki</a></li>
<li><a href="https://mirrors.ustc.edu.cn/help/gentoo.html" target="_blank" rel="noopener noreffer ">Gentoo 源使用帮助 — USTC Mirror Help  文档</a></li>
<li><a href="https://mirrors.ustc.edu.cn/help/gentoo-portage.html" target="_blank" rel="noopener noreffer ">Gentoo Portage 源使用帮助 — USTC Mirror Help  文档</a></li>
<li><a href="https://wiki.archlinux.org/title/Installation_guide_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29#%E6%9C%AC%E5%9C%B0%E5%8C%96" target="_blank" rel="noopener noreffer ">Installation guide (简体中文) - ArchWiki</a></li>
</ul>]]></description>
</item>
<item>
    <title>关于N卡闭源驱动 nvidia-340xx 无法安装这档子事</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/%E5%85%B3%E4%BA%8En%E5%8D%A1%E9%97%AD%E6%BA%90%E9%A9%B1%E5%8A%A8nvidia-340xx%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%E8%BF%99%E6%A1%A3%E5%AD%90%E4%BA%8B/</link>
    <pubDate>Mon, 22 Nov 2021 13:32:29 &#43;0800</pubDate>
    <author>WeepingDogel</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/%E5%85%B3%E4%BA%8En%E5%8D%A1%E9%97%AD%E6%BA%90%E9%A9%B1%E5%8A%A8nvidia-340xx%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%E8%BF%99%E6%A1%A3%E5%AD%90%E4%BA%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/fucknvidia1.jpg" referrerpolicy="no-referrer">
            </div><h1 id="序">序</h1>
<p>首先容我说一句</p>
<blockquote>
<p><strong>FUCK YOU NVIDIA!</strong></p>
</blockquote>
<p>由于我现在时间比较少，Arch 经常好几天不滚，前两天滚了一下，驱动炸了</p>
<p>内核更新到了 5.15.3</p>
<p>一开始我觉得问题不大，更新一下就好了</p>
<p>于是我就</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ yay -S nvidia-340xx
</span></span></code></pre></td></tr></table>
</div>
</div><p>但是没想到，它给我来这一出</p>
<p></p>
<p>呜呜呜！！！为什么编译不出来！！！</p>
<p><strong><del>黄仁勋 NMSL!!!</del></strong></p>
<h1 id="解决过程">解决过程</h1>
<p>咳咳，尽管如此我还是花了一天的时间冷静了下来，然后开始试试看手动 <code>makepkg</code> 行不行。</p>
<p>按照惯例我应该去 aur 把 PKGBUILD 给 git 下来。</p>
<p>不过正当我打开 <code>nvidia-340xx</code> 这个包的 aur 界面时，我在评论那里看到了这句话。</p>
<blockquote>
<p>Users of this package should block automatic update of their kernel. There is not enough man power to update it as fast as newer kernels are released.</p>
</blockquote>
<p></p>
<p>康不懂嘤语？ 给你翻译一下</p>
<blockquote>
<p>这个软件包的用户应该阻止其内核的自动更新。没有足够的人力来更新它，因为更新内核的速度太快了。</p>
</blockquote>
<p>我当场就想说</p>
<blockquote>
<p><strong>FUCK YOU NVIDIA!</strong></p>
</blockquote>
<p>然后我就想着要不用回旧版本的内核？一边想一边往下翻，我就又看到了一条对我有用的评论</p>
<blockquote>
<p>Patch for kernel 5.15 <a href="https://pastebin.com/uYP9J2Cw" target="_blank" rel="noopener noreffer ">https://pastebin.com/uYP9J2Cw</a> Found here <a href="https://github.com/warpme/minimyth2/issues/15" target="_blank" rel="noopener noreffer ">https://github.com/warpme/minimyth2/issues/15</a></p>
</blockquote>
<p></p>
<p>然后我观察了一下这个包的文件目录..</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── 0001-kernel-5.7.patch
</span></span><span class="line"><span class="cl">├── 0002-kernel-5.8.patch
</span></span><span class="line"><span class="cl">├── 0003-kernel-5.9.patch
</span></span><span class="line"><span class="cl">├── 0004-kernel-5.10.patch
</span></span><span class="line"><span class="cl">├── 0005-kernel-5.11.patch
</span></span><span class="line"><span class="cl">├── 0006-kernel-5.14.patch
</span></span><span class="line"><span class="cl">├── 20-nvidia.conf
</span></span><span class="line"><span class="cl">├── nvidia-340xx.install
</span></span><span class="line"><span class="cl">└── PKGBUILD
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">0 directories, 9 files
</span></span></code></pre></td></tr></table>
</div>
</div><p>虽然我不太懂，但我发现这个 <code>*.patch</code> 文件的文件名似乎对应着各个内核版本。</p>
<p>而这条评论给出了<a href="https://pastebin.com/uYP9J2Cw" target="_blank" rel="noopener noreffer ">新 <code>patch</code> 文件的链接</a>，以及<a href="https://github.com/warpme/minimyth2/issues/15" target="_blank" rel="noopener noreffer ">一个 issue 链接</a>。</p>
<p>我瞬间知道怎么回事了，打包所需的文件是更新了，但还没有提交到 aur..</p>
<p>淦，我只能自己试试看了</p>
<p>于是抱着试试看的态度</p>
<p>我打开了它的 PKGBUILD</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">pkgbase</span><span class="o">=</span><span class="n">nvidia</span><span class="o">-</span><span class="mi">340</span><span class="n">xx</span>
</span></span><span class="line"><span class="cl"><span class="n">pkgname</span><span class="o">=</span><span class="p">(</span><span class="n">nvidia</span><span class="o">-</span><span class="mi">340</span><span class="n">xx</span> <span class="n">nvidia</span><span class="o">-</span><span class="mi">340</span><span class="n">xx</span><span class="o">-</span><span class="n">dkms</span><span class="p">);</span> <span class="p">[</span> <span class="o">-</span><span class="n">n</span> <span class="s2">&#34;$NVIDIA_340XX_DKMS_ONLY&#34;</span> <span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">pkgname</span><span class="o">=</span><span class="p">(</span><span class="n">nvidia</span><span class="o">-</span><span class="mi">340</span><span class="n">xx</span><span class="o">-</span><span class="n">dkms</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">pkgver</span><span class="o">=</span><span class="mf">340.108</span>
</span></span><span class="line"><span class="cl"><span class="n">pkgrel</span><span class="o">=</span><span class="mi">25</span>
</span></span><span class="line"><span class="cl"><span class="n">pkgdesc</span><span class="o">=</span><span class="s2">&#34;NVIDIA drivers for linux, 340xx legacy branch&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">arch</span><span class="o">=</span><span class="p">(</span><span class="s1">&#39;x86_64&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;https://www.nvidia.com/&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">makedepends</span><span class="o">=</span><span class="p">(</span><span class="s2">&#34;nvidia-340xx-utils=${pkgver}&#34;</span> <span class="s1">&#39;linux&gt;=5.5&#39;</span> <span class="s1">&#39;linux-headers&gt;=5.5&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">conflicts</span><span class="o">=</span><span class="p">(</span><span class="s1">&#39;nvidia&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">license</span><span class="o">=</span><span class="p">(</span><span class="s1">&#39;custom&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">options</span><span class="o">=</span><span class="p">(</span><span class="o">!</span><span class="n">strip</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># https://github.com/warpme/minimyth2/tree/master/script/nvidia/nvidia-340.108/files</span>
</span></span><span class="line"><span class="cl"><span class="n">source</span><span class="o">=</span><span class="p">(</span><span class="s2">&#34;https://us.download.nvidia.com/XFree86/Linux-x86_64/${pkgver}/NVIDIA-Linux-x86_64-${pkgver}-no-compat32.run&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="mi">20</span><span class="o">-</span><span class="n">nvidia</span><span class="o">.</span><span class="n">conf</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0001</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.7</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0002</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.8</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0003</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.9</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0004</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.10</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0005</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.11</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0006</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.14</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>确实发现了这么一行文件，我在想，是不是把这个新的文件下下来，放到编译目录然后在这个列表加上就能编译了？</p>
<p>于是我把这个文件下载了下来，放进了编译目录</p>
<p>（具体过程就略过了，都是 wget cp cd 之类的事情）</p>
<p>并且把文件名加上了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">source</span><span class="o">=</span><span class="p">(</span><span class="s2">&#34;https://us.download.nvidia.com/XFree86/Linux-x86_64/${pkgver}/NVIDIA-Linux-x86_64-${pkgver}-no-compat32.run&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="mi">20</span><span class="o">-</span><span class="n">nvidia</span><span class="o">.</span><span class="n">conf</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0001</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.7</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0002</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.8</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0003</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.9</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0004</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.10</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0005</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.11</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0006</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.14</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0007</span><span class="o">-</span><span class="n">kernel</span><span class="o">-</span><span class="mf">5.15</span><span class="o">.</span><span class="n">patch</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ makepkg
</span></span></code></pre></td></tr></table>
</div>
</div><p>不过很快我就收到了报错</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">==&gt; 正在创建软件包：nvidia-340xx 340.108-25 (Mon 22 Nov 2021 02:08:12 PM CST)
</span></span><span class="line"><span class="cl">==&gt; 正在检查运行时依赖关系...
</span></span><span class="line"><span class="cl">==&gt; 正在检查编译时依赖关系
</span></span><span class="line"><span class="cl">==&gt; 获取源代码...
</span></span><span class="line"><span class="cl">  -&gt; 找到 NVIDIA-Linux-x86_64-340.108-no-compat32.run
</span></span><span class="line"><span class="cl">  -&gt; 找到 20-nvidia.conf
</span></span><span class="line"><span class="cl">  -&gt; 找到 0001-kernel-5.7.patch
</span></span><span class="line"><span class="cl">  -&gt; 找到 0002-kernel-5.8.patch
</span></span><span class="line"><span class="cl">  -&gt; 找到 0003-kernel-5.9.patch
</span></span><span class="line"><span class="cl">  -&gt; 找到 0004-kernel-5.10.patch
</span></span><span class="line"><span class="cl">  -&gt; 找到 0005-kernel-5.11.patch
</span></span><span class="line"><span class="cl">  -&gt; 找到 0006-kernel-5.14.patch
</span></span><span class="line"><span class="cl">  -&gt; 找到 0007-kernel-5.15.patch
</span></span><span class="line"><span class="cl">==&gt; 错误： 对这些文件的完整性检查缺失: source
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后我试了一下重新生成校验码</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">makepkg -g
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后把返回来的数据复制粘贴进 <code>PKGBUILD</code> (注意，返回内容不唯一)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">b2sums=(&#39;6538bbec53b10f8d20977f9b462052625742e9709ef06e24cf2e55de5d0c55f1620a4bb21396cfd89ebc54c32f921ea17e3e47eaa95abcbc24ecbd144fb89028&#39;
</span></span><span class="line"><span class="cl">        &#39;49d99f612e8eee3ab5e34083c25348bfd14ed5fc8a7984dafc0dad7c0ae0df2c0b2a63a1bb993da440eb0a60293d7c753ca3889bd2f51991b8ddc51bce2fe4a8&#39;
</span></span><span class="line"><span class="cl">        &#39;7150233df867a55f57aa5e798b9c7618329d98459fecc35c4acfad2e9772236cb229703c4fa072381c509279d0588173d65f46297231f4d3bfc65a1ef52e65b1&#39;
</span></span><span class="line"><span class="cl">        &#39;b436095b89d6e294995651a3680ff18b5af5e91582c3f1ec9b7b63be9282497f54f9bf9be3997a5af30eec9b8548f25ec5235d969ac00a667a9cddece63d8896&#39;
</span></span><span class="line"><span class="cl">        &#39;947cb1f149b2db9c3c4f973f285d389790f73fc8c8a6865fc5b78d6a782f49513aa565de5c82a81c07515f1164e0e222d26c8212a14cf016e387bcc523e3fcb1&#39;
</span></span><span class="line"><span class="cl">        &#39;665bf0e1fa22119592e7c75ff40f265e919955f228a3e3e3ebd76e9dffa5226bece5eb032922eb2c009572b31b28e80cd89656f5d0a4ad592277edd98967e68f&#39;
</span></span><span class="line"><span class="cl">        &#39;344cd3a9888a9a61941906c198d3a480ce230119c96c72c72a74b711d23face2a7b1e53b9b4639465809b84762cdc53f38210e740318866705241bc4216e4f35&#39;
</span></span><span class="line"><span class="cl">        &#39;31a4047ab84d13e32fd7fdbf9f69c696d3fab6666c541d2acf0a189c1d17c876970985167fd389a4adc0f786021172bdec1aa6d690736e3cf9fcd8ceabe5fd32&#39;
</span></span><span class="line"><span class="cl">        &#39;a26426488f6e105f546e091ce4d2e9587cc41a0fb05b0dffeb1c523d8d06782bda3004352655c9c019224091f7bc7903939e53ede73f64553f14be8e8a47793a&#39;)
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来再次执行 <code>makepkg</code> 就能成功编译了</p>
<p></p>
<p>接下来用 <code>pacman</code> 装上</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -U nvidia-340xx-dkms-340.108-25-x86_64.pkg.tar.zst
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后 pacman 提示我们</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; You must tell Xorg to use the nvidia driver with kernels &gt;=5.11.0.
</span></span><span class="line"><span class="cl">    You must also set IgnoreABI option with Xorg version &gt;= 21.1.1.
</span></span><span class="line"><span class="cl">    Minimal config example provided in /usr/share/nvidia-340xx/20-nvidia.conf
</span></span><span class="line"><span class="cl">    which you should manually place in /etc/X11/xorg.conf.d/
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个好搞</p>
<p>复制一下文件就可以了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cp /usr/share/nvidia-340xx/20-nvidia.conf /etc/X11/xorg.conf.d/
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后重启</p>
<p></p>
<p>完美解决～</p>
<h1 id="总结">总结</h1>
<p>最后再说一句</p>
<blockquote>
<p><strong>FUCK YOU NVIDIA!</strong></p>
</blockquote>]]></description>
</item>
</channel>
</rss>
