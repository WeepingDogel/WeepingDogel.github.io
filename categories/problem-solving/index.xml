<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Problem Solving - Category - WeepingDogel</title>
        <link>http://weepingdogel.github.io/categories/problem-solving/</link>
        <description>Problem Solving - Category - WeepingDogel</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>weepingdogel@gmail.com (WeepingDogel)</managingEditor>
            <webMaster>weepingdogel@gmail.com (WeepingDogel)</webMaster><lastBuildDate>Mon, 06 Mar 2023 22:27:08 &#43;0800</lastBuildDate><atom:link href="http://weepingdogel.github.io/categories/problem-solving/" rel="self" type="application/rss+xml" /><item>
    <title>Attempt to Solve the Problem of VirtualBox Stuck on &#39;Starting&#39; When Starting a Virtual Machine</title>
    <link>http://weepingdogel.github.io/posts/problem_of_virtualbox_appeding_starting_vm/</link>
    <pubDate>Mon, 06 Mar 2023 22:27:08 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/problem_of_virtualbox_appeding_starting_vm/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/photo_2023-03-06_20-52-14.jpg" referrerpolicy="no-referrer">
            </div><h1 id="prologue-what-was-the-problem">Prologue: What was the problem?</h1>
<p>Today, I felt like playing around with VirtualBox and discovered that every virtual machine was stuck at <code>Starting virtual machine.</code>.</p>
<p>The first step when encountering a problem is to go to Google.</p>
<p>Hmm&hellip; I found two posts on the official Arch forum.</p>
<ul>
<li>
<p><a href="https://bbs.archlinux.org/viewtopic.php?id=277409" target="_blank" rel="noopener noreffer">Virtualbox hangs on Starting virtual machine window / Newbie Corner / Arch Linux Forums</a></p>
</li>
<li>
<p><a href="https://bbs.archlinux.org/viewtopic.php?id=276699" target="_blank" rel="noopener noreffer">KVM busted in linux 5.18 due to Intel CET / Kernel &amp; Hardware / Arch Linux Forums</a></p>
</li>
</ul>
<p>After reading the two posts, I discovered that it was due to a bug in KVM in the new version of the kernel.</p>
<p>Fortunately, a skilled individual had already submitted a bug report.</p>
<ul>
<li>
<p><a href="https://bugs.archlinux.org/task/75481" target="_blank" rel="noopener noreffer">FS#75481 : [linux] VBox virtual machines stop functioning</a></p>
</li>
<li>
<p><a href="https://github.com/torvalds/linux/commit/991625f3dd2cbc4b787deb0213e2bcf8fa264b21" target="_blank" rel="noopener noreffer">x86/ibt: Add IBT feature, MSR and #CP handling · torvalds/linux@991625f · GitHub</a></p>
</li>
</ul>
<p><del>As for how this bug came about&hellip; I&rsquo;m not sure, I&rsquo;m not that knowledgeable.</del></p>
<h1 id="thinking-about-how-to-solve-it">Thinking about how to solve it</h1>
<p>Based on the content of the posts I&rsquo;ve read, the solution is to set the kernel parameter <code>ibt=off</code>.</p>
<blockquote>
<p>Thank you</p>
<p>appending</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ibt=off
</span></span></code></pre></td></tr></table>
</div>
</div><p>to kernel boot params fixed my problem.</p>
</blockquote>
<h2 id="how-do-i-set-kernel-boot-parameters">How do I set kernel boot parameters?</h2>
<p>Since I didn&rsquo;t know how to do this, I went to Google and found a method.</p>
<ul>
<li><a href="https://linuxconfig.org/how-to-set-kernel-boot-parameters-on-linux" target="_blank" rel="noopener noreffer">How to set kernel boot parameters on Linux - Linux Tutorials - Learn Linux Configuration</a></li>
</ul>
<h2 id="proposed-solution">Proposed Solution</h2>
<p>Actually, the solution is to edit the value of GRUB_CMDLINE_LINUX=&quot;&quot; in the /etc/default/grub file and add &ldquo;ibt=off&rdquo; to it.</p>
<h1 id="solution-steps">Solution Steps</h1>
<h2 id="1-edit-the-etcdefaultgrub-file">1. Edit the <code>/etc/default/grub</code> file</h2>
<p>The purpose of editing this file is to set the kernel boot parameters. The method for setting this may vary depending on the system booted by different bootloaders. As I am using Grub in my Arch system, I need to edit this file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span></code></pre></td></tr></table>
</div>
</div><p>Find the keyword <code>GRUB_CMDLINE_LINUX=&quot;&quot;</code> and add the parameter <code>ibt=off</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># GRUB boot loader configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">GRUB_DEFAULT=0
</span></span><span class="line"><span class="cl">GRUB_TIMEOUT=5
</span></span><span class="line"><span class="cl">GRUB_DISTRIBUTOR=&#34;Arch&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;loglevel=7&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX=&#34;ibt=off&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">......
</span></span></code></pre></td></tr></table>
</div>
</div><p>Enter <code>:</code> and type <code>wq</code> to save and exit the file (this is a basic operation and requires no further explanation).</p>
<h2 id="2-regenerate-the-grub-configuration-file">2. Regenerate the Grub configuration file</h2>
<p>Then, regenerate the Grub configuration file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><p>Wait for the operation to complete. If there are no errors, you can restart the operating system.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo reboot
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="testing-and-verification">Testing and Verification</h1>
<p>After restarting the system, open VirtualBox again and start a virtual machine. At this point, it should successfully enter the system.</p>
<p></p>
<p>This means that the problem has been solved.</p>
]]></description>
</item><item>
    <title>Help with College Computer Homework</title>
    <link>http://weepingdogel.github.io/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/</link>
    <pubDate>Wed, 02 Dec 2020 23:20:22 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/%E5%B8%AE%E5%81%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%9C%E4%B8%9A/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2020-12-03%2000-58-57%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be.png" referrerpolicy="no-referrer">
            </div><h2 id="introduction">Introduction</h2>
<p>Help with homework qwq&hellip;</p>
<p>I haven&rsquo;t played with C language for a long time, let me try to see if I can do it.</p>
<blockquote>
<p>PS: I&rsquo;m on Linux, the execution method may be different. If you are on Windows, you need an editor to run it.</p>
<p>For example, Dev C++, VS 2019, etc.</p>
</blockquote>
<h2 id="experiment-eleven">Experiment Eleven</h2>
<blockquote>
<p>Experiment Eleven</p>
<p>Objective:</p>
<ul>
<li>Understand C programming concepts</li>
<li>Understand C program design framework</li>
</ul>
<p>Contents:</p>
<p>Input a grade and output its level rating.</p>
</blockquote>
<p>This is straightforward. We need to list several grade levels:</p>
<ul>
<li>Excellent
<ul>
<li>80 ~ 100 points [80,100]</li>
</ul>
</li>
<li>Pass
<ul>
<li>60~79 points [60,79]</li>
</ul>
</li>
<li>Fail
<ul>
<li>Below 60 points [0,60)</li>
</ul>
</li>
</ul>
<p>In the code, we can use expressions to represent the intervals, for example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="mi">100</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we use if() to determine the grade level.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="mi">85</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">     <span class="k">if</span><span class="p">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;The grade is excellent&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">60</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="mi">79</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;The grade is pass&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;</span> <span class="mi">60</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;The grade is fail&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Next, we run the program.</p>
<p>Output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; make test
</span></span><span class="line"><span class="cl">cc     test.c   -o test
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; ./test
</span></span><span class="line"><span class="cl">The grade is excellent⏎     
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we need to get the user&rsquo;s input for the grade, like this, using the <code>scanf()</code> function to get the user&rsquo;s input and assign it to an integer variable <code>score</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Enter your grade:&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">scanf</span><span class="p">(</span><span class="s">&#34;%d&#34;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">score</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%d&#34;</span><span class="p">,</span><span class="n">score</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Next, we combine these two pieces of code together.</p>
<p>The complete code is as follows:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">score</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Enter your grade:&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">scanf</span><span class="p">(</span><span class="s">&#34;%d&#34;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">score</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;The grade is excellent&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">60</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;=</span> <span class="mi">79</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;The grade is pass&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">score</span> <span class="o">&lt;</span> <span class="mi">60</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;The grade is fail&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The idea is to first use <code>scanf()</code> function to get the user&rsquo;s input for the grade, then use <code>if()</code> statements to compare and output the result.</p>
<p>This is the output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; make test
</span></span><span class="line"><span class="cl">cc     test.c   -o test
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; ./test
</span></span><span class="line"><span class="cl">Enter your grade:99
</span></span><span class="line"><span class="cl">The grade is excellent⏎                                                        
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; ./test
</span></span><span class="line"><span class="cl">Enter your grade:85
</span></span><span class="line"><span class="cl">The grade is excellent⏎                                                        
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; ./test
</span></span><span class="line"><span class="cl">Enter your grade:60
</span></span><span class="line"><span class="cl">The grade is pass⏎                                                        
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; ./test
</span></span><span class="line"><span class="cl">Enter your grade:59
</span></span><span class="line"><span class="cl">The grade is fail⏎                       
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="experiment-12">Experiment 12</h2>
<blockquote>
<p>Experiment Purpose:</p>
<ul>
<li>Understand C program design ideas</li>
<li>Understand C program design frameworks</li>
</ul>
<p>Task content</p>
<ul>
<li>Requires writing a program that registers and then logs in, outputting the format shown in the following figure:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">              Registration Interface
</span></span><span class="line"><span class="cl">Please enter your registration username: Ly
</span></span><span class="line"><span class="cl">Please enter your registration password: 123
</span></span><span class="line"><span class="cl">Congratulations! Registration successful!
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">              Login Interface
</span></span><span class="line"><span class="cl">Please enter your login username: Ly
</span></span><span class="line"><span class="cl">Please enter your login password: 123
</span></span><span class="line"><span class="cl">Login successful!
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">              Login Interface
</span></span><span class="line"><span class="cl">Please enter your login username: Ly
</span></span><span class="line"><span class="cl">Please enter your login password: 1234
</span></span><span class="line"><span class="cl">Login failed!
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Define 4 variables to save the registered username, password and login username, password respectively.</li>
<li>Use if&hellip;else statement to complete the judgment of the username and password.</li>
</ul>
</blockquote>
<p>To put it simply&hellip; it uses <code>scanf()</code> to get input, assigns the values to variables, and then performs the judgment&hellip;</p>
<p>Pft! Alright, here&rsquo;s the code, no explanation needed&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span><span class="cpf">&lt;string.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* Define 4 variables to save the registered username,
</span></span></span><span class="line"><span class="cl"><span class="cm">    password and login username, password respectively */</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">username_sign</span><span class="p">[</span><span class="mi">40</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">password_sign</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">username_login</span><span class="p">[</span><span class="mi">40</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">password_login</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* Define 4 variables to save the registered username,
</span></span></span><span class="line"><span class="cl"><span class="cm">    password and login username, password respectively */</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;--------------------------------------</span><span class="se">\n</span><span class="s">               Registration Interface</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Please enter your registration username:&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">scanf</span><span class="p">(</span><span class="s">&#34;%s&#34;</span><span class="p">,</span> <span class="n">username_sign</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Please enter your registration password:&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">scanf</span><span class="p">(</span><span class="s">&#34;%s&#34;</span><span class="p">,</span> <span class="n">password_sign</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Congratulations! Registration successful!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n</span><span class="s">--------------------------------------&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* Use scanf() to get input */</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n\n</span><span class="s">--------------------------------------</span><span class="se">\n</span><span class="s">               Login Interface</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Please enter your login username:&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">scanf</span><span class="p">(</span><span class="s">&#34;%s&#34;</span><span class="p">,</span><span class="n">username_login</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Please enter your login password:&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">scanf</span><span class="p">(</span><span class="s">&#34;%s&#34;</span><span class="p">,</span><span class="n">password_login</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* Use if...else statement to complete the judgment of the username and password */</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/* Uses the strcmp() function here */</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nf">strcmp</span><span class="p">(</span><span class="n">username_login</span><span class="p">,</span><span class="n">username_sign</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nf">strcmp</span><span class="p">(</span><span class="n">password_login</span><span class="p">,</span><span class="n">password_sign</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Login successful!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Login failed!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n</span><span class="s">--------------------------------------&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>However, it&rsquo;s worth noting that this string comparison method is slightly different. It requires using the <code>strcmp()</code> function, something like this.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nf">strcmp</span><span class="p">(</span><span class="n">username_login</span><span class="p">,</span><span class="n">username_sign</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nf">strcmp</span><span class="p">(</span><span class="n">password_login</span><span class="p">,</span><span class="n">password_sign</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Login successful!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Login failed!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>It seems to calculate a numerical value, which equals 0 if the two strings are the same. That&rsquo;s roughly how it works.</p>
<p>Let&rsquo;s take a look at the output&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; make test2
</span></span><span class="line"><span class="cl">cc     test2.c   -o test2
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; ./test2
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">               Registration Interface
</span></span><span class="line"><span class="cl">Please enter your registration username:Ly
</span></span><span class="line"><span class="cl">Please enter your registration password:123
</span></span><span class="line"><span class="cl">Congratulations! Registration successful!
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">               Login Interface
</span></span><span class="line"><span class="cl">Please enter your login username:Ly
</span></span><span class="line"><span class="cl">Please enter your login password:123
</span></span><span class="line"><span class="cl">Login successful!
</span></span><span class="line"><span class="cl">--------------------------------------⏎                              
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel /tmp&gt; ./test2
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">               Registration Interface
</span></span><span class="line"><span class="cl">Please enter your registration username:Ly
</span></span><span class="line"><span class="cl">Please enter your registration password:123
</span></span><span class="line"><span class="cl">Congratulations! Registration successful!
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--------------------------------------
</span></span><span class="line"><span class="cl">               Login Interface
</span></span><span class="line"><span class="cl">Please enter your login username:Ly
</span></span><span class="line"><span class="cl">Please enter your login password:1234
</span></span><span class="line"><span class="cl">Login failed!
</span></span><span class="line"><span class="cl">--------------------------------------⏎     
</span></span></code></pre></td></tr></table>
</div>
</div><p>And that&rsquo;s it!</p>
<h2 id="closing-remarks">Closing Remarks</h2>
<p>Actually, there are still some details that I might overlook due to carelessness, so I can&rsquo;t say &ldquo;Is that it? Is that all?&rdquo;</p>
<p>But relatively speaking, it&rsquo;s still quite simple&hellip; yeah&hellip;</p>
]]></description>
</item><item>
    <title>About fcitx5, and recent environment variable issues</title>
    <link>http://weepingdogel.github.io/posts/%E5%85%B3%E4%BA%8Efcitx5/</link>
    <pubDate>Sat, 25 Jul 2020 13:25:46 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/%E5%85%B3%E4%BA%8Efcitx5/</guid>
    <description><![CDATA[<h2 id="what-happened">What happened</h2>
<p>I recently received a message like this</p>
<blockquote>
<p>For those who use <code>$HOME/.pam_environment</code> to set environment variables, take note! Due to <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-4708" target="_blank" rel="noopener noreffer">CVE-2010-4708</a>, pam upstream is set to not read user&rsquo;s environment variable settings by default in version 1.4.0, and users are required to change their environment variable settings or restore the original default read behavior.</p>
<p>ref: <a href="https://blog.lilydjwg.me/2020/7/22/linux-environment-variables.215496.html" target="_blank" rel="noopener noreffer">Linux environment variables how to set Evian&rsquo;s Blog</a></p>
</blockquote>
<p><del>Why is the 10-year vulnerability only now fixed?</del> Emmmm, so that&rsquo;s what the vulnerability is.</p>
<p>Emmmm, so that is <code>.pam_environment</code> this file can not be used &hellip;&hellip;</p>
<p>Here thanks to <a href="https://blog.lilydjwg.me/2020/7/22/linux-environment-variables.215496.html" target="_blank" rel="noopener noreffer">lilydjwg</a> for writing out the way to deal with various situations</p>
<p>I&rsquo;ll write a note about replacing fcitx5 in xfce + lightdm environment&hellip; Other specifics can be found in what <strong>lilydjwg</strong> wrote&hellip; (Escape</p>
<h2 id="fcitx5-vs-fcitx">fcitx5 vs fcitx</h2>
<ul>
<li>Fcitx</li>
</ul>
<blockquote>
<p><a href="https://en.wikipedia.org/wiki/Fcitx" target="_blank" rel="noopener noreffer">Fcitx</a> (Flexible Input Method Framework) ── i.e. Little Penguin Input Method, which is an <a href="https://en.wikipedia.org/" target="_blank" rel="noopener noreffer">input method</a> distributed under GPL wiki/Input_method) platform, which can support multiple input methods by installing the engine, and supports simple input and output, it is a common Chinese input method in Linux OS. It has the advantage of being short and compact, and has good compatibility with programs.</p>
<p>&mdash; <a href="https://wiki.archlinux.org/index.php/Fcitx_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Arch Wiki</a></p>
</blockquote>
<ul>
<li>Fcitx5</li>
</ul>
<blockquote>
<p>Fcitx5 is the next generation input method framework after <a href="https://wiki.archlinux.org/index.php/Fcitx" target="_blank" rel="noopener noreffer">Fcitx</a>.</p>
<p>&mdash; <a href="https://wiki.archlinux.org/index.php/Fcitx5_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Arch Wiki</a></p>
</blockquote>
<p>Daily lazy, direct quotes (flee</p>
<h2 id="okay-lets-get-right-to-it">Okay, let&rsquo;s get right to it</h2>
<blockquote>
<p>first post my system situation</p>
<p>Operating system: Arch Linux</p>
<p>Desktop environment: xfce</p>
<p>Display Manager: lightdm</p>
</blockquote>
<p>Actually, just writing the input method environment variables from <code>.pam_environment</code> to <code>.xprofile</code> will solve the problem, but I&rsquo;d like to try fcitx5.</p>
<h3 id="uninstall-the-old-version-fcitx">Uninstall the old version fcitx</h3>
<p>First of all, we need to uninstall the original fcitx, I was using <code>fcitx-googlepinyin</code> input method before, so I need to uninstall this package too, because there will be dependency.</p>
<p>Besides, all the packages that have some relationship with fcitx should be uninstalled, otherwise <code>pacman</code> will report error, so you have to execute this</p>
<blockquote>
<p>(PS: you may not use Google input method, so please change <code>fcitx-googlepinyin</code> to the package name of the input method you installed)</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">sudo pacman -Rs fcitx-configtool fcitx-googlepinyin fcitx-qt5 fcitx
</span></span></code></pre></td></tr></table>
</div>
</div><p>Next, delete this file, it&rsquo;s useless anyway (escape</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo rm -rf . /.pam_environment
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="installing-fcitx5">Installing fcitx5</h3>
<p>Now to install fcitx5, this is how to do it</p>
<ul>
<li>
<p>fcitx5</p>
<ul>
<li>The main package, no need to explain</li>
</ul>
</li>
<li>
<p>fcitx5-chinese-addons</p>
<ul>
<li>Chinese input method package &hellip;. Arch Wiki explains it like this.
<blockquote>
<p><a href="https://www.archlinux.org/packages/?name=fcitx5-chinese-addons" target="_blank" rel="noopener noreffer">fcitx5-chinese-addons</a> contains a lot of Chinese input methods: Pinyin, ShuangPin, WubiPinyin, Natural Code, CangJie, BingToad Holographic, ErBi, etc.</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p>fcitx5-im</p>
<ul>
<li>Environment dependency package, you have to install it, otherwise you can&rsquo;t type on some software</li>
</ul>
</li>
<li>
<p>fcitx5-configtool</p>
<ul>
<li>fcitx5&rsquo;s GUI configuration tool, because I don&rsquo;t know how to modify the configuration file, so I installed this. Install it after the three above.</li>
</ul>
</li>
</ul>
<p>Then, execute</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo pacman -S fcitx5 fcitx5-chinese-addons fcitx5-im fcitx5-configtool
</span></span></code></pre></td></tr></table>
</div>
</div><p>After the package is installed, it will theoretically boot up, but well, there can be some metaphysical problems, so do this manually first</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo cp /usr/share/applications/fcitx5.desktop ~/.config/autostart/ -v
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="environment-variables">Environment variables</h3>
<p>Well, finally it&rsquo;s set environment variable, since <code>.pam_environment</code> can&rsquo;t be used, where to write it?</p>
<p><a href="https://blog.lilydjwg.me/2020/7/22/linux-environment-variables.215496.html" target="_blank" rel="noopener noreffer">lilydjwg</a> said:</p>
<blockquote>
<p>Using X11 desktop environment, usually login through display manager, such as lightdm and sddm. Both of them support <code>~/.xprofile</code>. This file will be sourced during boot, using a shell determined by <code>dm</code> itself. Both lightdm and sddm use <code>/bin/sh</code> (in the files <code>/etc/lightdm/Xsession</code> and <code>/usr/share/sddm/scripts/Xsession</code> respectively). As you can see, in addition to reading <code>.xprofile</code>, lightdm also reads <code>.profile</code>. sddm even reads the startup configuration scripts for bash, zsh, tcsh, and fish.</p>
</blockquote>
<p>That is, we need to write the fcitx5 environment variables in the <code>.xprofile</code> file</p>
<p>Then&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ vim . /.xprofile
</span></span></code></pre></td></tr></table>
</div>
</div><p>Write these things in it</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">INPUT_METHOD</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">GTK_IM_MODULE</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">QT_IM_MODULE</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">XMODIFIERS</span><span class="o">=</span>@im<span class="o">=</span>fcitx5
</span></span></code></pre></td></tr></table>
</div>
</div><p>Next you can choose to restart <code>lightdm</code>,</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo systemctl restart lightdm
</span></span></code></pre></td></tr></table>
</div>
</div><p>Or reboot the system.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo reboot
</span></span></code></pre></td></tr></table>
</div>
</div><p>At this time, a keyboard appears in the status bar of xfce, but pressing <kbd><code>CTRL</code></kbd> + <kbd><code>SPACE</code></kbd> but it does not bring up the Chinese input method, so what should we do?</p>
<p>Right-click the keyboard icon, click Configure, and then go to the QT configuration tool to add Chinese input methods on it!</p>
<p></p>
<p>Just double click to add to the left ~</p>
<p>Then click OK and start enjoying fcitx5!</p>
<h2 id="reference-links">Reference links</h2>
<ul>
<li><a href="https://blog.lilydjwg.me/2020/7/22/linux-environment-variables.215496.html" target="_blank" rel="noopener noreffer">How to set environment variables for Linux - Evian&rsquo;s Blog</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Fcitx5_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Fcitx5 (Simplified Chinese) - ArchWiki</a></li>
<li><a href="https://en.wikipedia.org/wiki/Fcitx" target="_blank" rel="noopener noreffer">Fcitx - Wikipedia</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Fcitx_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Fcitx (Simplified Chinese) - ArchWiki</a></li>
</ul>
<p>Translated with <a href="https://www.DeepL.com/Translator" target="_blank" rel="noopener noreffer">www.DeepL.com/Translator</a> (free version)</p>
]]></description>
</item></channel>
</rss>
