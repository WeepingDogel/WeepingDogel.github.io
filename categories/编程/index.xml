<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 on WeepingDogel&#39;s Blog</title>
    <link>https://weepingdogel.github.io/categories/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 编程 on WeepingDogel&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2019-2021 | WeepingDogel with CC-BY-NC 4.0</copyright>
    <lastBuildDate>Sat, 05 Sep 2020 22:12:05 +0800</lastBuildDate><atom:link href="https://weepingdogel.github.io/categories/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python 学习笔记——文件操作</title>
      <link>https://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 05 Sep 2020 22:12:05 +0800</pubDate>
      
      <guid>https://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
      <description>文件操作 open open() 是 Python 进行文件操作的关键函数，它有连个参数需要设置
 文件名 - 文件的名称，不多解释 模式 - 决定打开的文件是否可读写以及其他属性  open(&amp;#39;filename&amp;#39;,&amp;#39;mode&amp;#39;) 读 仅以只读方式打开一个文件
f = open(&amp;#34;filename.txt&amp;#34;) 这样写也是一样的
f = open(&amp;#34;filename&amp;#34;,&amp;#34;rt&amp;#34;) &amp;ldquo;r&amp;rdquo; 表示读
&amp;ldquo;t&amp;rdquo; 表示文本，这是函数默认设定好的，所以可以省略。
这里引入一下 w3school 的一个列表
 There are four different methods (modes) for opening a file:
 &amp;ldquo;r&amp;rdquo; - Read - Default value. Opens a file for reading, error if the file does not exist
  &amp;ldquo;a&amp;rdquo; - Append - Opens a file for appending, creates the file if it does not exist</description>
    </item>
    
    <item>
      <title>一个C语言的小程序</title>
      <link>https://weepingdogel.github.io/posts/%E4%B8%80%E4%B8%AAc%E8%AF%AD%E8%A8%80%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Sun, 29 Mar 2020 14:15:46 +0800</pubDate>
      
      <guid>https://weepingdogel.github.io/posts/%E4%B8%80%E4%B8%AAc%E8%AF%AD%E8%A8%80%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F/</guid>
      <description>简介 嘛&amp;hellip;学了一会儿C语言弄了这么个玩意👑
其实就是基础语法和简单的判断👑
代码 废话不多说直接上代码👑
/* 标准体重计算器 By WeepingDogel 世卫计算方法 男性：(身高cm－80)×70﹪=标准体重 女性：(身高cm－70)×60﹪=标准体重 标准体重正负10﹪为正常体重 标准体重正负10﹪~ 20﹪为体重过重或过轻 标准体重正负20﹪以上为肥胖或体重不足 超重计算公式 超重%=[（实际体重－理想体重）/（理想体重）]×100% */ /*导入标准库stdio.h （必须）*/ #include &amp;lt;stdio.h&amp;gt;/*标准体重*/ int weight; /*声明函数*/ float judge(float parameter1,float parameter2); float Count_M(float parameter); float Count_F(float parameter); /*声明主函数main() (这个都不写，那写个屁)*/ int main() { printf(&amp;#34;欢迎使用.&amp;#34;); /*身高*/ int height; /*声明变量sex表示性别*/ char sex; /*声明变量：实际体重*/ int real_weight; /*提示用户输入性别*/ printf(&amp;#34;请输入你的性别\n（M为男性,F为女性,注意大小写）&amp;#34;); printf(&amp;#34;\n\n:&amp;#34;); /*读取用户输入的数据并赋值给sex*/ scanf(&amp;#34;%c&amp;#34;,&amp;amp;sex); /*进入判断，并判断变量sex的值是否为M*/ if(sex == &amp;#39;M&amp;#39;) { /*当变量sex=M时，判断为男性，将执行以下代码*/ printf(&amp;#34;你是男性&amp;#34;); printf(&amp;#34;输入你的身高(单位:厘米)&amp;#34;); printf(&amp;#34;\n\n:&amp;#34;); scanf(&amp;#34;%d&amp;#34;,&amp;amp;height); weight = (int) Count_M((float) height); printf(&amp;#34;你的身高对应的标准体重为%dkg\n&amp;#34;,weight); printf(&amp;#34;请输入你的实际体重(单位:kg)&amp;#34;); printf(&amp;#34;\n:&amp;#34;); scanf(&amp;#34;%d&amp;#34;,&amp;amp;real_weight); judge((float) real_weight,(float) weight); } /*进入判断，并判断变量sex的值是否为F*/ else if(sex == &amp;#39;F&amp;#39;) { /*当变量sex=F时，判断为女性，将执行以下代码*/ printf(&amp;#34;你是女性&amp;#34;); printf(&amp;#34;输入你的身高(单位:厘米)&amp;#34;); printf(&amp;#34;\n\n:&amp;#34;); scanf(&amp;#34;%d&amp;#34;,&amp;amp;height); weight = (int) Count_F((float) height); printf(&amp;#34;你的身高对应的标准体重为%dkg\n&amp;#34;,weight); printf(&amp;#34;请输入你的实际体重(单位:kg)&amp;#34;); printf(&amp;#34;\n:&amp;#34;); scanf(&amp;#34;%d&amp;#34;,&amp;amp;real_weight); judge((float) real_weight,(float) weight); } return 0; } /*计算出男性标准体重*/ float Count_M(float parameter) { /*男性：(身高cm－80)×70﹪=标准体重*/ /*定义变量:结果*/ float result; result = (int)(parameter - 80.</description>
    </item>
    
    <item>
      <title>Python学习笔记 简单爬虫</title>
      <link>https://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</link>
      <pubDate>Tue, 13 Aug 2019 22:20:53 +0800</pubDate>
      
      <guid>https://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</guid>
      <description>一如既往不正经的前言 嘿嘿，我又回来了，今天在U盘里弄好了hexo，现在可以继续更新了
并且这次博客添加了访问量统计，欢迎扩～
那么，本期更新一个简单的Python爬虫
爬虫原理  小白: 大佬大佬～爬虫是啥啊？
大佬: 去搜索引擎查呀
小白: 查了，还是看不懂
大佬: emmmmm..那你继续往下看吧…
 概述 2333,爬虫其实很好理解
我们都知道上网是用浏览器的，那么我们具体是怎样访问一个网页的呢？看下面吧(懒得画图了)
   浏览器 –发送一个请求www.bing.com –&amp;gt;
  服务器 &amp;lt;–接受到请求-–
  服务器 –做出响应–&amp;gt; –返回数据–&amp;gt; 浏览器
   什么？还是不了解？那我们用浏览器来看一下吧，我们随便打开一个网页
以Chrome/Chromiun为例，接下来依次点击 鼠标右键——检查——NetWork——将Preserve log打上勾 ，然后刷新 就会发现出现了以下内容
我们可以看到浏览器很详细的把请求内容显示出来了，而左边那些列表，你已经获取了这个网站的内容。
爬虫的原理就是把这些过程自动化，不需要我们去手动访问，就可以把网页中你想要的信息和内容爬取下来。
爬虫的作用 举个例子，这里有一个 全国号码段(链接已失效) 的网站，我们需要取一个城市中其中一个号码段的所有的号码。比如西安市
可以看到，号码段有很多，每个段有一万个号码。这个时候怎么办呢？总不可能用鼠标一条一条的去复制粘贴吧？这个时候爬虫就派上用场了。
 其实也可以用来爬取我的博客，当更新的时候就可以及时收到更新信息
啊啊别打我，疼疼疼
 编程语言的选择 我们如果要进行爬虫工作，那么就必须使用编程语言，用得最多的是Python，因为Python进行爬虫是比较简便的，当然也可以选择其他的比如C/C++、Java等，甚至是易语言都可以做到，只不过难易度和写法不同，目的和功能都是一样的。本期我们选择Python
Python的安装 Python是跨平台的语言，所以平台不同安装方法也有所不同。
Windows 可以到Python的官网去下载安装程序并安装，建议下载Python3
Mac OSX 同样到Python的官网下载
Linux Linux则在包管理器安装即可
deb系 $ sudo apt-get install python3 Arch系 $ sudo pacman -S python rpm系 $ sudo yum install python3 Android Android平台则安装QPython即可，</description>
    </item>
    
  </channel>
</rss>
