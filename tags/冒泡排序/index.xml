<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>冒泡排序 on WeepingDogel&#39;s Blog</title>
    <link>https://weepingdogel.github.io/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
    <description>Recent content in 冒泡排序 on WeepingDogel&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2019-2021 | WeepingDogel via CC-BY-NC 4.0</copyright>
    <lastBuildDate>Tue, 15 Jun 2021 15:35:52 +0800</lastBuildDate><atom:link href="https://weepingdogel.github.io/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>冒泡排序的尝试</title>
      <link>https://weepingdogel.github.io/posts/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%9A%84%E5%B0%9D%E8%AF%95/</link>
      <pubDate>Tue, 15 Jun 2021 15:35:52 +0800</pubDate>
      
      <guid>https://weepingdogel.github.io/posts/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%9A%84%E5%B0%9D%E8%AF%95/</guid>
      <description>序 嗯.. 又遇到了一个题
 输入4个整数，从小到大排序
 哇这个.. 看似简单其实写起来可不轻松呢。
我照着谷歌查到的教程写了两种办法..
一个是指针交换法
 drafts/swap_sort.c at main · WeepingDogel/drafts · GitHub  另一个是冒泡排序
 drafts/bbsort.c at main · WeepingDogel/drafts · GitHub  本文将会描述用冒泡排序法解这个题
冒泡排序 什么是冒泡排序？
 冒泡排序（英语：Bubble Sort）又称为泡式排序，是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。
——冒泡排序 - 维基百科，自由的百科全书
 嗯&amp;hellip; 冒泡排序的过程是啥？
  比较相邻的元素。如果第一个比第二个大，就交换他们两个。 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。 针对所有的元素重复以上的步骤，除了最后一个。 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。  ——冒泡排序 - 维基百科，自由的百科全书
 再来看看维基百科上的伪代码和助记码
 1 2 3 4 5 6 7 8 9  function bubble_sort (array, length) { var i, j; for(i from 0 to length-1){ for(j from 0 to length-1-i){ if (array[j] &amp;gt; array[j+1]) swap(array[j], array[j+1]) } } }   1 2 3 4 5 6 7 8 9  函数冒泡排序输入一个数组名称为array其长度为lengthi从0到(length-1)j从0到(length-1-i)如果array[j]&amp;gt;array[j+1]交换array[j]和array[j+1]的值如果结束j循环结束i循环结束函数结束   助记码</description>
    </item>
    
  </channel>
</rss>
